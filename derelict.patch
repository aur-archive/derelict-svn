Index: DerelictVorbis/derelict/ogg/vorbiscodec.d
===================================================================
--- DerelictVorbis/derelict/ogg/vorbiscodec.d	(revision 318)
+++ DerelictVorbis/derelict/ogg/vorbiscodec.d	(working copy)
@@ -107,90 +107,86 @@
 extern (C)
 {
     // Vorbis PRIMITIVES: general
-    typedef void    function(vorbis_info *vi) pfvorbis_info_init;
-    typedef void    function(vorbis_info *vi) pfvorbis_info_clear;
-    typedef int     function(vorbis_info *vi,int zo) pfvorbis_info_blocksize;
-    typedef void    function(vorbis_comment *vc) pfvorbis_comment_init;
-    typedef void    function(vorbis_comment *vc, byte *comment) pfvorbis_comment_add;
-    typedef void    function(vorbis_comment *vc, byte *tag, byte *contents) pfvorbis_comment_add_tag;
-    typedef byte*   function(vorbis_comment *vc, byte *tag, int count) pfvorbis_comment_query;
-    typedef int     function(vorbis_comment *vc, byte *tag) pfvorbis_comment_query_count;
-    typedef void    function(vorbis_comment *vc) pfvorbis_comment_clear;
+    alias void    function(vorbis_info *vi) pfvorbis_info_init;
+    alias void    function(vorbis_info *vi) pfvorbis_info_clear;
+    alias int     function(vorbis_info *vi,int zo) pfvorbis_info_blocksize;
+    alias void    function(vorbis_comment *vc) pfvorbis_comment_init;
+    alias void    function(vorbis_comment *vc, byte *comment) pfvorbis_comment_add;
+    alias void    function(vorbis_comment *vc, byte *tag, byte *contents) pfvorbis_comment_add_tag;
+    alias byte*   function(vorbis_comment *vc, byte *tag, int count) pfvorbis_comment_query;
+    alias int     function(vorbis_comment *vc, byte *tag) pfvorbis_comment_query_count;
+    alias void    function(vorbis_comment *vc) pfvorbis_comment_clear;
 
-    typedef int     function(vorbis_dsp_state *v, vorbis_block *vb) pfvorbis_block_init;
-    typedef int     function(vorbis_block *vb) pfvorbis_block_clear;
-    typedef void    function(vorbis_dsp_state *v) pfvorbis_dsp_clear;
-    typedef double  function(vorbis_dsp_state *v, ogg_int64_t granulepos) pfvorbis_granule_time;
+    alias int     function(vorbis_dsp_state *v, vorbis_block *vb) pfvorbis_block_init;
+    alias int     function(vorbis_block *vb) pfvorbis_block_clear;
+    alias void    function(vorbis_dsp_state *v) pfvorbis_dsp_clear;
+    alias double  function(vorbis_dsp_state *v, ogg_int64_t granulepos) pfvorbis_granule_time;
 
-    pfvorbis_info_init                  vorbis_info_init;
-    pfvorbis_info_clear                 vorbis_info_clear;
-    pfvorbis_info_blocksize             vorbis_info_blocksize;
-    pfvorbis_comment_init               vorbis_comment_init;
-    pfvorbis_comment_add                vorbis_comment_add;
-    pfvorbis_comment_add_tag            vorbis_comment_add_tag;
-    pfvorbis_comment_query              vorbis_comment_query;
-    pfvorbis_comment_query_count        vorbis_comment_query_count;
-    pfvorbis_comment_clear              vorbis_comment_clear;
-    pfvorbis_block_init                 vorbis_block_init;
-    pfvorbis_block_clear                vorbis_block_clear;
-    pfvorbis_dsp_clear                  vorbis_dsp_clear;
-    pfvorbis_granule_time               vorbis_granule_time;
 
     // Vorbis PRIMITIVES: analysis/DSP layer
-    typedef int     function(vorbis_dsp_state *v,vorbis_info *vi) pfvorbis_analysis_init;
-    typedef int     function(vorbis_comment *vc, ogg_packet *op) pfvorbis_commentheader_out;
-    typedef int     function(vorbis_dsp_state *v, vorbis_comment *vc, ogg_packet *op, ogg_packet *op_comm, ogg_packet *op_code) pfvorbis_analysis_headerout;
-    typedef float** function(vorbis_dsp_state *v,int vals) pfvorbis_analysis_buffer;
-    typedef int     function(vorbis_dsp_state *v,int vals) pfvorbis_analysis_wrote;
-    typedef int     function(vorbis_dsp_state *v,vorbis_block *vb) pfvorbis_analysis_blockout;
-    typedef int     function(vorbis_block *vb,ogg_packet *op) pfvorbis_analysis;
-    pfvorbis_analysis_init              vorbis_analysis_init;
-    pfvorbis_commentheader_out          vorbis_commentheader_out;
-    pfvorbis_analysis_headerout         vorbis_analysis_headerout;
-    pfvorbis_analysis_buffer            vorbis_analysis_buffer;
-    pfvorbis_analysis_wrote             vorbis_analysis_wrote;
-    pfvorbis_analysis_blockout          vorbis_analysis_blockout;
-    pfvorbis_analysis                   vorbis_analysis;
+    alias int     function(vorbis_dsp_state *v,vorbis_info *vi) pfvorbis_analysis_init;
+    alias int     function(vorbis_comment *vc, ogg_packet *op) pfvorbis_commentheader_out;
+    alias int     function(vorbis_dsp_state *v, vorbis_comment *vc, ogg_packet *op, ogg_packet *op_comm, ogg_packet *op_code) pfvorbis_analysis_headerout;
+    alias float** function(vorbis_dsp_state *v,int vals) pfvorbis_analysis_buffer;
+    alias int     function(vorbis_dsp_state *v,int vals) pfvorbis_analysis_wrote;
+    alias int     function(vorbis_dsp_state *v,vorbis_block *vb) pfvorbis_analysis_blockout;
+    alias int     function(vorbis_block *vb,ogg_packet *op) pfvorbis_analysis;
 
-    typedef int     function(vorbis_block *vb) pfvorbis_bitrate_addblock;
-    typedef int     function(vorbis_dsp_state *vd, ogg_packet *op) pfvorbis_bitrate_flushpacket;
-    pfvorbis_bitrate_addblock           vorbis_bitrate_addblock;
-    pfvorbis_bitrate_flushpacket        vorbis_bitrate_flushpacket;
+    alias int     function(vorbis_block *vb) pfvorbis_bitrate_addblock;
+    alias int     function(vorbis_dsp_state *vd, ogg_packet *op) pfvorbis_bitrate_flushpacket;
 
     // Vorbis PRIMITIVES: synthesis layer
-    typedef int    function(vorbis_info *vi,vorbis_comment *vc, ogg_packet *op) pfvorbis_synthesis_headerin;
-    pfvorbis_synthesis_headerin         vorbis_synthesis_headerin;
+    alias int    function(vorbis_info *vi,vorbis_comment *vc, ogg_packet *op) pfvorbis_synthesis_headerin;
 
-    typedef int     function(vorbis_dsp_state *v,vorbis_info *vi) pfvorbis_synthesis_init;
-    typedef int     function(vorbis_dsp_state *v) pfvorbis_synthesis_restart;
-    typedef int     function(vorbis_block *vb,ogg_packet *op) pfvorbis_synthesis;
-    typedef int     function(vorbis_block *vb,ogg_packet *op) pfvorbis_synthesis_trackonly;
-    typedef int     function(vorbis_dsp_state *v,vorbis_block *vb) pfvorbis_synthesis_blockin;
-    typedef int     function(vorbis_dsp_state *v,float ***pcm) pfvorbis_synthesis_pcmout;
-    typedef int     function(vorbis_dsp_state *v,float ***pcm) pfvorbis_synthesis_lapout;
-    typedef int     function(vorbis_dsp_state *v,int samples) pfvorbis_synthesis_read;
-    typedef int     function(vorbis_info *vi,ogg_packet *op) pfvorbis_packet_blocksize;
-    pfvorbis_synthesis_init             vorbis_synthesis_init;
-    pfvorbis_synthesis_restart          vorbis_synthesis_restart;
-    pfvorbis_synthesis                  vorbis_synthesis;
-    pfvorbis_synthesis_trackonly        vorbis_synthesis_trackonly;
-    pfvorbis_synthesis_blockin          vorbis_synthesis_blockin;
-    pfvorbis_synthesis_pcmout           vorbis_synthesis_pcmout;
-    pfvorbis_synthesis_lapout           vorbis_synthesis_lapout;
-    pfvorbis_synthesis_read             vorbis_synthesis_read;
-    pfvorbis_packet_blocksize           vorbis_packet_blocksize;
+    alias int     function(vorbis_dsp_state *v,vorbis_info *vi) pfvorbis_synthesis_init;
+    alias int     function(vorbis_dsp_state *v) pfvorbis_synthesis_restart;
+    alias int     function(vorbis_block *vb,ogg_packet *op) pfvorbis_synthesis;
+    alias int     function(vorbis_block *vb,ogg_packet *op) pfvorbis_synthesis_trackonly;
+    alias int     function(vorbis_dsp_state *v,vorbis_block *vb) pfvorbis_synthesis_blockin;
+    alias int     function(vorbis_dsp_state *v,float ***pcm) pfvorbis_synthesis_pcmout;
+    alias int     function(vorbis_dsp_state *v,float ***pcm) pfvorbis_synthesis_lapout;
+    alias int     function(vorbis_dsp_state *v,int samples) pfvorbis_synthesis_read;
+    alias int     function(vorbis_info *vi,ogg_packet *op) pfvorbis_packet_blocksize;
 
-    typedef int     function(vorbis_info *v,int flag) pfvorbis_synthesis_halfrate;
-    typedef int     function(vorbis_info *v) pfvorbis_synthesis_halfrate_p;
-    pfvorbis_synthesis_halfrate         vorbis_synthesis_halfrate;
-    pfvorbis_synthesis_halfrate_p       vorbis_synthesis_halfrate_p;
+    alias int     function(vorbis_info *v,int flag) pfvorbis_synthesis_halfrate;
+    alias int     function(vorbis_info *v) pfvorbis_synthesis_halfrate_p;
 } // extern(C)
 
-
-
-
-
-
-
-
-
+pfvorbis_info_init                  vorbis_info_init;
+pfvorbis_info_clear                 vorbis_info_clear;
+pfvorbis_info_blocksize             vorbis_info_blocksize;
+pfvorbis_comment_init               vorbis_comment_init;
+pfvorbis_comment_add                vorbis_comment_add;
+pfvorbis_comment_add_tag            vorbis_comment_add_tag;
+pfvorbis_comment_query              vorbis_comment_query;
+pfvorbis_comment_query_count        vorbis_comment_query_count;
+pfvorbis_comment_clear              vorbis_comment_clear;
+pfvorbis_block_init                 vorbis_block_init;
+pfvorbis_block_clear                vorbis_block_clear;
+pfvorbis_dsp_clear                  vorbis_dsp_clear;
+pfvorbis_granule_time               vorbis_granule_time;
+
+pfvorbis_analysis_init              vorbis_analysis_init;
+pfvorbis_commentheader_out          vorbis_commentheader_out;
+pfvorbis_analysis_headerout         vorbis_analysis_headerout;
+pfvorbis_analysis_buffer            vorbis_analysis_buffer;
+pfvorbis_analysis_wrote             vorbis_analysis_wrote;
+pfvorbis_analysis_blockout          vorbis_analysis_blockout;
+pfvorbis_analysis                   vorbis_analysis;
+
+pfvorbis_bitrate_addblock           vorbis_bitrate_addblock;
+pfvorbis_bitrate_flushpacket        vorbis_bitrate_flushpacket;
+
+pfvorbis_synthesis_headerin         vorbis_synthesis_headerin;
+pfvorbis_synthesis_init             vorbis_synthesis_init;
+pfvorbis_synthesis_restart          vorbis_synthesis_restart;
+pfvorbis_synthesis                  vorbis_synthesis;
+pfvorbis_synthesis_trackonly        vorbis_synthesis_trackonly;
+pfvorbis_synthesis_blockin          vorbis_synthesis_blockin;
+pfvorbis_synthesis_pcmout           vorbis_synthesis_pcmout;
+pfvorbis_synthesis_lapout           vorbis_synthesis_lapout;
+pfvorbis_synthesis_read             vorbis_synthesis_read;
+pfvorbis_packet_blocksize           vorbis_packet_blocksize;
+
+pfvorbis_synthesis_halfrate         vorbis_synthesis_halfrate;
+pfvorbis_synthesis_halfrate_p       vorbis_synthesis_halfrate_p;
Index: DerelictVorbis/derelict/ogg/vorbisfile.d
===================================================================
--- DerelictVorbis/derelict/ogg/vorbisfile.d	(revision 318)
+++ DerelictVorbis/derelict/ogg/vorbisfile.d	(working copy)
@@ -120,86 +120,94 @@
 extern (C)
 {
 
-    typedef int function(OggVorbis_File *vf) pfov_clear;
-    //typedef int function(FILE *f, OggVorbis_File *vf, char *initial, long ibytes) pfov_open;
-    typedef int function(void *datasource, OggVorbis_File *vf, char *initial, int  ibytes, ov_callbacks callbacks) pfov_open_callbacks;
-    pfov_clear              ov_clear;
-    //pfov_open             ov_open; // rewritten below because of incompatibility between compilers with FILE struct
-    pfov_open_callbacks     ov_open_callbacks;
+    alias int function(OggVorbis_File *vf) pfov_clear;
+    //alias int function(FILE *f, OggVorbis_File *vf, char *initial, long ibytes) pfov_open;
+    alias int function(void *datasource, OggVorbis_File *vf, char *initial, int  ibytes, ov_callbacks callbacks) pfov_open_callbacks;
 
-    typedef int function(FILE *f,OggVorbis_File *vf, byte *initial, int  ibytes) pfov_test;
-    typedef int function(void *datasource, OggVorbis_File *vf, char *initial, int  ibytes, ov_callbacks callbacks) pfov_test_callbacks;
-    typedef int function(OggVorbis_File *vf) pfov_test_open;
-    pfov_test               ov_test;
-    pfov_test_callbacks     ov_test_callbacks;
-    pfov_test_open          ov_test_open;
+    alias int function(FILE *f,OggVorbis_File *vf, byte *initial, int  ibytes) pfov_test;
+    alias int function(void *datasource, OggVorbis_File *vf, char *initial, int  ibytes, ov_callbacks callbacks) pfov_test_callbacks;
+    alias int function(OggVorbis_File *vf) pfov_test_open;
 
-    typedef int function(OggVorbis_File *vf,int i) pfov_bitrate;
-    typedef int function(OggVorbis_File *vf) pfov_bitrate_instant;
-    typedef int function(OggVorbis_File *vf) pfov_streams;
-    typedef int function(OggVorbis_File *vf) pfov_seekable;
-    typedef int function(OggVorbis_File *vf,int i) pfov_serialnumber;
-    pfov_bitrate            ov_bitrate;
-    pfov_bitrate_instant    ov_bitrate_instant;
-    pfov_streams            ov_streams;
-    pfov_seekable           ov_seekable;
-    pfov_serialnumber       ov_serialnumber;
+    alias int function(OggVorbis_File *vf,int i) pfov_bitrate;
+    alias int function(OggVorbis_File *vf) pfov_bitrate_instant;
+    alias int function(OggVorbis_File *vf) pfov_streams;
+    alias int function(OggVorbis_File *vf) pfov_seekable;
+    alias int function(OggVorbis_File *vf,int i) pfov_serialnumber;
 
-    typedef ogg_int64_t function(OggVorbis_File *vf,int i) pfov_raw_total;
-    typedef ogg_int64_t function(OggVorbis_File *vf,int i) pfov_pcm_total;
-    typedef double function(OggVorbis_File *vf,int i) pfov_time_total;
-    pfov_raw_total          ov_raw_total;
-    pfov_pcm_total          ov_pcm_total;
-    pfov_time_total         ov_time_total;
+    alias ogg_int64_t function(OggVorbis_File *vf,int i) pfov_raw_total;
+    alias ogg_int64_t function(OggVorbis_File *vf,int i) pfov_pcm_total;
+    alias double function(OggVorbis_File *vf,int i) pfov_time_total;
 
-    typedef int function(OggVorbis_File *vf,ogg_int64_t pos) pfov_raw_seek;
-    typedef int function(OggVorbis_File *vf,ogg_int64_t pos) pfov_pcm_seek;
-    typedef int function(OggVorbis_File *vf,ogg_int64_t pos) pfov_pcm_seek_page;
-    typedef int function(OggVorbis_File *vf,double pos) pfov_time_seek;
-    typedef int function(OggVorbis_File *vf,double pos) pfov_time_seek_page;
-    pfov_raw_seek           ov_raw_seek;
-    pfov_pcm_seek           ov_pcm_seek;
-    pfov_pcm_seek_page      ov_pcm_seek_page;
-    pfov_time_seek          ov_time_seek;
-    pfov_time_seek_page     ov_time_seek_page;
+    alias int function(OggVorbis_File *vf,ogg_int64_t pos) pfov_raw_seek;
+    alias int function(OggVorbis_File *vf,ogg_int64_t pos) pfov_pcm_seek;
+    alias int function(OggVorbis_File *vf,ogg_int64_t pos) pfov_pcm_seek_page;
+    alias int function(OggVorbis_File *vf,double pos) pfov_time_seek;
+    alias int function(OggVorbis_File *vf,double pos) pfov_time_seek_page;
 
-    typedef int function(OggVorbis_File *vf,ogg_int64_t pos) pfov_raw_seek_lap;
-    typedef int function(OggVorbis_File *vf,ogg_int64_t pos) pfov_pcm_seek_lap;
-    typedef int function(OggVorbis_File *vf,ogg_int64_t pos) pfov_pcm_seek_page_lap;
-    typedef int function(OggVorbis_File *vf,double pos) pfov_time_seek_lap;
-    typedef int function(OggVorbis_File *vf,double pos) pfov_time_seek_page_lap;
-    pfov_raw_seek_lap       ov_raw_seek_lap;
-    pfov_pcm_seek_lap       ov_pcm_seek_lap;
-    pfov_pcm_seek_page_lap  ov_pcm_seek_page_lap;
-    pfov_time_seek_lap      ov_time_seek_lap;
-    pfov_time_seek_page_lap ov_time_seek_page_lap;
+    alias int function(OggVorbis_File *vf,ogg_int64_t pos) pfov_raw_seek_lap;
+    alias int function(OggVorbis_File *vf,ogg_int64_t pos) pfov_pcm_seek_lap;
+    alias int function(OggVorbis_File *vf,ogg_int64_t pos) pfov_pcm_seek_page_lap;
+    alias int function(OggVorbis_File *vf,double pos) pfov_time_seek_lap;
+    alias int function(OggVorbis_File *vf,double pos) pfov_time_seek_page_lap;
 
-    typedef ogg_int64_t function(OggVorbis_File *vf) pfov_raw_tell;
-    typedef ogg_int64_t function(OggVorbis_File *vf) pfov_pcm_tell;
-    typedef double function(OggVorbis_File *vf) pfov_time_tell;
-    pfov_raw_tell           ov_raw_tell;
-    pfov_pcm_tell           ov_pcm_tell;
-    pfov_time_tell          ov_time_tell;
+    alias ogg_int64_t function(OggVorbis_File *vf) pfov_raw_tell;
+    alias ogg_int64_t function(OggVorbis_File *vf) pfov_pcm_tell;
+    alias double function(OggVorbis_File *vf) pfov_time_tell;
 
-    typedef vorbis_info* function(OggVorbis_File *vf,int link) pfov_info;
-    typedef vorbis_comment* function(OggVorbis_File *vf,int link) pfov_comment;
-    pfov_info               ov_info;
-    pfov_comment            ov_comment;
+    alias vorbis_info* function(OggVorbis_File *vf,int link) pfov_info;
+    alias vorbis_comment* function(OggVorbis_File *vf,int link) pfov_comment;
 
-    typedef int function(OggVorbis_File *vf, float ***pcm_channels, int samples, int *bitstream) pfov_read_float;
-    typedef int function(OggVorbis_File *vf, byte *buffer, int length, int bigendianp, int word, int sgned, int *bitstream) pfov_read;
-    typedef int function(OggVorbis_File *vf1,OggVorbis_File *vf2) pfov_crosslap;
-    pfov_read_float         ov_read_float;
-    pfov_read               ov_read;
-    pfov_crosslap           ov_crosslap;
+    alias int function(OggVorbis_File *vf, float ***pcm_channels, int samples, int *bitstream) pfov_read_float;
+    alias int function(OggVorbis_File *vf, byte *buffer, int length, int bigendianp, int word, int sgned, int *bitstream) pfov_read;
+    alias int function(OggVorbis_File *vf1,OggVorbis_File *vf2) pfov_crosslap;
 
-    typedef int function(OggVorbis_File *vf,int flag) pfov_halfrate;
-    typedef int function(OggVorbis_File *vf) pfov_halfrate_p;
-    pfov_halfrate           ov_halfrate;
-    pfov_halfrate_p         ov_halfrate_p;
-
-
+    alias int function(OggVorbis_File *vf,int flag) pfov_halfrate;
+    alias int function(OggVorbis_File *vf) pfov_halfrate_p;
 }   // extern(C)
+
+pfov_clear              ov_clear;
+    //pfov_open             ov_open; // rewritten below because of incompatibility between compilers with FILE struct
+pfov_open_callbacks     ov_open_callbacks;
+
+pfov_test               ov_test;
+pfov_test_callbacks     ov_test_callbacks;
+pfov_test_open          ov_test_open;
+
+pfov_bitrate            ov_bitrate;
+pfov_bitrate_instant    ov_bitrate_instant;
+pfov_streams            ov_streams;
+pfov_seekable           ov_seekable;
+pfov_serialnumber       ov_serialnumber;
+
+pfov_raw_total          ov_raw_total;
+pfov_pcm_total          ov_pcm_total;
+pfov_time_total         ov_time_total;
+
+pfov_raw_seek           ov_raw_seek;
+pfov_pcm_seek           ov_pcm_seek;
+pfov_pcm_seek_page      ov_pcm_seek_page;
+pfov_time_seek          ov_time_seek;
+pfov_time_seek_page     ov_time_seek_page;
+
+pfov_raw_seek_lap       ov_raw_seek_lap;
+pfov_pcm_seek_lap       ov_pcm_seek_lap;
+pfov_pcm_seek_page_lap  ov_pcm_seek_page_lap;
+pfov_time_seek_lap      ov_time_seek_lap;
+pfov_time_seek_page_lap ov_time_seek_page_lap;
+
+pfov_raw_tell           ov_raw_tell;
+pfov_pcm_tell           ov_pcm_tell;
+pfov_time_tell          ov_time_tell;
+
+pfov_info               ov_info;
+pfov_comment            ov_comment;
+
+pfov_read_float         ov_read_float;
+pfov_read               ov_read;
+pfov_crosslap           ov_crosslap;
+
+pfov_halfrate           ov_halfrate;
+pfov_halfrate_p         ov_halfrate_p;
 
 // ov_open is rewritten below because of incompatibility between compilers with FILE struct
 // Using this wrapper, it *should* work exactly as it would in c++. --JoeCoder
Index: DerelictIL/derelict/devil/ilfuncs.d
===================================================================
--- DerelictIL/derelict/devil/ilfuncs.d	(revision 318)
+++ DerelictIL/derelict/devil/ilfuncs.d	(working copy)
@@ -140,8 +140,7 @@
     );
 }
 
-extern(System):
-
+extern(System) {
 alias void* ILHANDLE;
 alias ILvoid        (*fCloseRProc)(ILHANDLE);
 alias ILboolean (*fEofProc)   (ILHANDLE);
@@ -161,93 +160,95 @@
 alias ILenum        (*IL_LOADPROC)( ILstring);
 alias ILenum        (*IL_SAVEPROC)( ILstring);
 
-typedef ILboolean       function(ILuint Number) pfilActiveImage;
-typedef ILboolean       function(ILuint Number) pfilActiveLayer;
-typedef ILboolean       function(ILuint Number) pfilActiveMipmap;
-typedef ILboolean       function( ILstring FileName) pfilApplyPal;
-typedef ILboolean       function( ILstring InProfile,  ILstring OutProfile) pfilApplyProfile;
-typedef ILvoid      function(ILuint Image) pfilBindImage;
-typedef ILboolean       function(ILuint Source, ILint DestX, ILint DestY, ILint DestZ, ILuint SrcX, ILuint SrcY, ILuint SrcZ, ILuint Width, ILuint Height, ILuint Depth) pfilBlit;
-typedef ILvoid      function(ILclampf Red, ILclampf Green, ILclampf Blue, ILclampf Alpha) pfilClearColour;
-typedef ILboolean       function() pfilClearImage;
-typedef ILuint      function() pfilCloneCurImage;
-typedef ILboolean       function(ILenum Mode) pfilCompressFunc;
-typedef ILboolean       function(ILenum DestFormat, ILenum DestType) pfilConvertImage;
-typedef ILboolean       function(ILenum DestFormat) pfilConvertPal;
-typedef ILboolean       function(ILuint Src) pfilCopyImage;
-typedef ILuint      function(ILuint XOff, ILuint YOff, ILuint ZOff, ILuint Width, ILuint Height, ILuint Depth, ILenum Format, ILenum Type, ILvoid *Data) pfilCopyPixels;
-typedef ILuint      function(ILenum Type, ILuint Num) pfilCreateSubImage;
-typedef ILboolean       function() pfilDefaultImage;
-typedef ILvoid      function(ILsizei Num,  ILuint *Images) pfilDeleteImages;
-typedef ILboolean       function(ILenum Mode) pfilDisable;
-typedef ILboolean       function(ILenum Mode) pfilEnable;
-typedef ILboolean       function(ILenum Mode) pfilFormatFunc;
-typedef ILvoid      function(ILsizei Num, ILuint *Images) pfilGenImages;
-typedef ILubyte*        function(ILenum Type) pfilGetAlpha;
-//typedef ILvoid            function( ILint AlphaValue ) pfilModAlpha;
-//typedef ILvoid            function( ILuint AlphaValue ) pfilSetAlpha;
-typedef ILboolean       function(ILenum Mode) pfilGetBoolean;
-typedef ILvoid      function(ILenum Mode, ILboolean *Param) pfilGetBooleanv;
-typedef ILubyte*        function() pfilGetData;
-typedef ILuint      function(ILvoid *Buffer, ILuint BufferSize, ILenum DXTCFormat) pfilGetDXTCData;
-typedef ILenum      function() pfilGetError;
-typedef ILint             function(ILenum Mode) pfilGetInteger;
-typedef ILvoid      function(ILenum Mode, ILint *Param) pfilGetIntegerv;
-typedef ILuint      function() pfilGetLumpPos;
-typedef ILubyte*        function() pfilGetPalette;
-typedef ILstring    function(ILenum StringName) pfilGetString;
-typedef ILvoid      function(ILenum Target, ILenum Mode) pfilHint;
-typedef ILvoid      function() pfilInit;
-typedef ILboolean       function(ILenum Mode) pfilIsDisabled;
-typedef ILboolean       function(ILenum Mode) pfilIsEnabled;
-typedef ILboolean       function(ILuint Image) pfilIsImage;
-typedef ILboolean       function(ILenum Type,  ILstring FileName) pfilIsValid;
-typedef ILboolean       function(ILenum Type, ILHANDLE File) pfilIsValidF;
-typedef ILboolean       function(ILenum Type, ILvoid *Lump, ILuint Size) pfilIsValidL;
-typedef ILvoid      function(ILclampf Red, ILclampf Green, ILclampf Blue, ILclampf Alpha) pfilKeyColour;
-typedef ILboolean       function(ILenum Type,  ILstring FileName) pfilLoad;
-typedef ILboolean       function(ILenum Type, ILHANDLE File) pfilLoadF;
-typedef ILboolean       function( ILstring FileName) pfilLoadImage;
-typedef ILboolean       function(ILenum Type, ILvoid *Lump, ILuint Size) pfilLoadL;
-typedef ILboolean       function( ILstring FileName) pfilLoadPal;
-typedef ILboolean       function(ILenum Mode) pfilOriginFunc;
-typedef ILboolean       function(ILuint Source, ILint XCoord, ILint YCoord, ILint ZCoord) pfilOverlayImage;
-typedef ILvoid      function() pfilPopAttrib;
-typedef ILvoid      function(ILuint Bits) pfilPushAttrib;
-typedef ILvoid      function(ILenum Format) pfilRegisterFormat;
-typedef ILboolean       function( ILstring Ext, IL_LOADPROC Load) pfilRegisterLoad;
-typedef ILboolean       function(ILuint Num) pfilRegisterMipNum;
-typedef ILboolean       function(ILuint Num) pfilRegisterNumImages;
-typedef ILvoid      function(ILenum Origin) pfilRegisterOrigin;
-typedef ILvoid      function(ILvoid *Pal, ILuint Size, ILenum Type) pfilRegisterPal;
-typedef ILboolean       function( ILstring Ext, IL_SAVEPROC Save) pfilRegisterSave;
-typedef ILvoid      function(ILenum Type) pfilRegisterType;
-typedef ILboolean       function( ILstring Ext) pfilRemoveLoad;
-typedef ILboolean       function( ILstring Ext) pfilRemoveSave;
-typedef ILvoid      function() pfilResetMemory;
-typedef ILvoid      function() pfilResetRead;
-typedef ILvoid      function() pfilResetWrite;
-typedef ILboolean       function(ILenum Type,  ILstring FileName) pfilSave;
-typedef ILuint      function(ILenum Type, ILHANDLE File) pfilSaveF;
-typedef ILboolean       function( ILstring FileName) pfilSaveImage;
-typedef ILboolean       function(ILvoid *Data) pfilSetData;
-typedef ILboolean       function(ILuint Duration) pfilSetDuration;
-typedef ILvoid      function(ILenum Mode, ILint Param) pfilSetInteger;
-typedef ILvoid      function(mAlloc, mFree) pfilSetMemory;
-typedef ILvoid      function(ILint XOff, ILint YOff, ILint ZOff, ILuint Width, ILuint Height, ILuint Depth, ILenum Format, ILenum Type, ILvoid *Data) pfilSetPixels;
-typedef ILvoid      function(fOpenRProc, fCloseRProc, fEofProc, fGetcProc, fReadProc, fSeekRProc, fTellRProc) pfilSetRead;
-typedef ILvoid      function(ILenum Mode,  char *String) pfilSetString;
-typedef ILvoid      function(fOpenWProc, fCloseWProc, fPutcProc, fSeekWProc, fTellWProc, fWriteProc) pfilSetWrite;
-typedef ILvoid      function() pfilShutDown;
-typedef ILboolean       function(ILuint Width, ILuint Height, ILuint Depth, ILubyte Bpp, ILenum Format, ILenum Type, ILvoid *Data) pfilTexImage;
-typedef ILboolean       function(ILenum Mode) pfilTypeFunc;
-typedef ILboolean       function( ILstring FileName, ILuint Width, ILuint Height, ILuint Depth, ILubyte Bpp) pfilLoadData;
-typedef ILboolean       function(ILHANDLE File, ILuint Width, ILuint Height, ILuint Depth, ILubyte Bpp) pfilLoadDataF;
-typedef ILboolean       function(ILvoid *Lump, ILuint Size, ILuint Width, ILuint Height, ILuint Depth, ILubyte Bpp) pfilLoadDataL;
-typedef ILboolean       function( ILstring FileName) pfilSaveData;
-typedef ILboolean       function(ILvoid* JpegDecompressorPtr) pfilLoadFromJpegStruct;
-typedef ILboolean       function(ILvoid* JpegCompressorPtr) pfilSaveFromJpegStruct;
 
+alias ILboolean       function(ILuint Number) pfilActiveImage;
+alias ILboolean       function(ILuint Number) pfilActiveLayer;
+alias ILboolean       function(ILuint Number) pfilActiveMipmap;
+alias ILboolean       function( ILstring FileName) pfilApplyPal;
+alias ILboolean       function( ILstring InProfile,  ILstring OutProfile) pfilApplyProfile;
+alias ILvoid      function(ILuint Image) pfilBindImage;
+alias ILboolean       function(ILuint Source, ILint DestX, ILint DestY, ILint DestZ, ILuint SrcX, ILuint SrcY, ILuint SrcZ, ILuint Width, ILuint Height, ILuint Depth) pfilBlit;
+alias ILvoid      function(ILclampf Red, ILclampf Green, ILclampf Blue, ILclampf Alpha) pfilClearColour;
+alias ILboolean       function() pfilClearImage;
+alias ILuint      function() pfilCloneCurImage;
+alias ILboolean       function(ILenum Mode) pfilCompressFunc;
+alias ILboolean       function(ILenum DestFormat, ILenum DestType) pfilConvertImage;
+alias ILboolean       function(ILenum DestFormat) pfilConvertPal;
+alias ILboolean       function(ILuint Src) pfilCopyImage;
+alias ILuint      function(ILuint XOff, ILuint YOff, ILuint ZOff, ILuint Width, ILuint Height, ILuint Depth, ILenum Format, ILenum Type, ILvoid *Data) pfilCopyPixels;
+alias ILuint      function(ILenum Type, ILuint Num) pfilCreateSubImage;
+alias ILboolean       function() pfilDefaultImage;
+alias ILvoid      function(ILsizei Num,  ILuint *Images) pfilDeleteImages;
+alias ILboolean       function(ILenum Mode) pfilDisable;
+alias ILboolean       function(ILenum Mode) pfilEnable;
+alias ILboolean       function(ILenum Mode) pfilFormatFunc;
+alias ILvoid      function(ILsizei Num, ILuint *Images) pfilGenImages;
+alias ILubyte*        function(ILenum Type) pfilGetAlpha;
+//alias ILvoid            function( ILint AlphaValue ) pfilModAlpha;
+//alias ILvoid            function( ILuint AlphaValue ) pfilSetAlpha;
+alias ILboolean       function(ILenum Mode) pfilGetBoolean;
+alias ILvoid      function(ILenum Mode, ILboolean *Param) pfilGetBooleanv;
+alias ILubyte*        function() pfilGetData;
+alias ILuint      function(ILvoid *Buffer, ILuint BufferSize, ILenum DXTCFormat) pfilGetDXTCData;
+alias ILenum      function() pfilGetError;
+alias ILint             function(ILenum Mode) pfilGetInteger;
+alias ILvoid      function(ILenum Mode, ILint *Param) pfilGetIntegerv;
+alias ILuint      function() pfilGetLumpPos;
+alias ILubyte*        function() pfilGetPalette;
+alias ILstring    function(ILenum StringName) pfilGetString;
+alias ILvoid      function(ILenum Target, ILenum Mode) pfilHint;
+alias ILvoid      function() pfilInit;
+alias ILboolean       function(ILenum Mode) pfilIsDisabled;
+alias ILboolean       function(ILenum Mode) pfilIsEnabled;
+alias ILboolean       function(ILuint Image) pfilIsImage;
+alias ILboolean       function(ILenum Type,  ILstring FileName) pfilIsValid;
+alias ILboolean       function(ILenum Type, ILHANDLE File) pfilIsValidF;
+alias ILboolean       function(ILenum Type, ILvoid *Lump, ILuint Size) pfilIsValidL;
+alias ILvoid      function(ILclampf Red, ILclampf Green, ILclampf Blue, ILclampf Alpha) pfilKeyColour;
+alias ILboolean       function(ILenum Type,  ILstring FileName) pfilLoad;
+alias ILboolean       function(ILenum Type, ILHANDLE File) pfilLoadF;
+alias ILboolean       function( ILstring FileName) pfilLoadImage;
+alias ILboolean       function(ILenum Type, ILvoid *Lump, ILuint Size) pfilLoadL;
+alias ILboolean       function( ILstring FileName) pfilLoadPal;
+alias ILboolean       function(ILenum Mode) pfilOriginFunc;
+alias ILboolean       function(ILuint Source, ILint XCoord, ILint YCoord, ILint ZCoord) pfilOverlayImage;
+alias ILvoid      function() pfilPopAttrib;
+alias ILvoid      function(ILuint Bits) pfilPushAttrib;
+alias ILvoid      function(ILenum Format) pfilRegisterFormat;
+alias ILboolean       function( ILstring Ext, IL_LOADPROC Load) pfilRegisterLoad;
+alias ILboolean       function(ILuint Num) pfilRegisterMipNum;
+alias ILboolean       function(ILuint Num) pfilRegisterNumImages;
+alias ILvoid      function(ILenum Origin) pfilRegisterOrigin;
+alias ILvoid      function(ILvoid *Pal, ILuint Size, ILenum Type) pfilRegisterPal;
+alias ILboolean       function( ILstring Ext, IL_SAVEPROC Save) pfilRegisterSave;
+alias ILvoid      function(ILenum Type) pfilRegisterType;
+alias ILboolean       function( ILstring Ext) pfilRemoveLoad;
+alias ILboolean       function( ILstring Ext) pfilRemoveSave;
+alias ILvoid      function() pfilResetMemory;
+alias ILvoid      function() pfilResetRead;
+alias ILvoid      function() pfilResetWrite;
+alias ILboolean       function(ILenum Type,  ILstring FileName) pfilSave;
+alias ILuint      function(ILenum Type, ILHANDLE File) pfilSaveF;
+alias ILboolean       function( ILstring FileName) pfilSaveImage;
+alias ILboolean       function(ILvoid *Data) pfilSetData;
+alias ILboolean       function(ILuint Duration) pfilSetDuration;
+alias ILvoid      function(ILenum Mode, ILint Param) pfilSetInteger;
+alias ILvoid      function(mAlloc, mFree) pfilSetMemory;
+alias ILvoid      function(ILint XOff, ILint YOff, ILint ZOff, ILuint Width, ILuint Height, ILuint Depth, ILenum Format, ILenum Type, ILvoid *Data) pfilSetPixels;
+alias ILvoid      function(fOpenRProc, fCloseRProc, fEofProc, fGetcProc, fReadProc, fSeekRProc, fTellRProc) pfilSetRead;
+alias ILvoid      function(ILenum Mode,  char *String) pfilSetString;
+alias ILvoid      function(fOpenWProc, fCloseWProc, fPutcProc, fSeekWProc, fTellWProc, fWriteProc) pfilSetWrite;
+alias ILvoid      function() pfilShutDown;
+alias ILboolean       function(ILuint Width, ILuint Height, ILuint Depth, ILubyte Bpp, ILenum Format, ILenum Type, ILvoid *Data) pfilTexImage;
+alias ILboolean       function(ILenum Mode) pfilTypeFunc;
+alias ILboolean       function( ILstring FileName, ILuint Width, ILuint Height, ILuint Depth, ILubyte Bpp) pfilLoadData;
+alias ILboolean       function(ILHANDLE File, ILuint Width, ILuint Height, ILuint Depth, ILubyte Bpp) pfilLoadDataF;
+alias ILboolean       function(ILvoid *Lump, ILuint Size, ILuint Width, ILuint Height, ILuint Depth, ILubyte Bpp) pfilLoadDataL;
+alias ILboolean       function( ILstring FileName) pfilSaveData;
+alias ILboolean       function(ILvoid* JpegDecompressorPtr) pfilLoadFromJpegStruct;
+alias ILboolean       function(ILvoid* JpegCompressorPtr) pfilSaveFromJpegStruct;
+}
+
 pfilActiveImage ilActiveImage;
 pfilActiveLayer ilActiveLayer;
 pfilActiveMipmap ilActiveMipmap;
Index: DerelictODE/derelict/ode/rotation.d
===================================================================
--- DerelictODE/derelict/ode/rotation.d	(revision 318)
+++ DerelictODE/derelict/ode/rotation.d	(working copy)
@@ -41,16 +41,36 @@
 //==============================================================================
 // FUNCTIONS
 //==============================================================================
-extern(C):
+extern(C) {
 
 /* set a vector/matrix of size n to all zeros, or to a specific value. */
-typedef void function(dMatrix3 R) pfdRSetIdentity;
-typedef void function(dMatrix3 R, dReal ax, dReal ay, dReal az, dReal angle) pfdRFromAxisAndAngle;
-typedef void function(dMatrix3 R, dReal phi, dReal theta, dReal psi) pfdRFromEulerAngles;
-typedef void function(dMatrix3 R, dReal ax, dReal ay, dReal az, dReal bx, dReal by, dReal bz) pfdRFrom2Axes;
-typedef void function(dMatrix3 R, dReal ax, dReal ay, dReal az) pfdRFromZAxis;
-typedef void function(dQuaternion q) pfdQSetIdentity;
-typedef void function(dQuaternion q, dReal ax, dReal ay, dReal az, dReal angle) pfdQFromAxisAndAngle;
+alias void function(dMatrix3 R) pfdRSetIdentity;
+alias void function(dMatrix3 R, dReal ax, dReal ay, dReal az, dReal angle) pfdRFromAxisAndAngle;
+alias void function(dMatrix3 R, dReal phi, dReal theta, dReal psi) pfdRFromEulerAngles;
+alias void function(dMatrix3 R, dReal ax, dReal ay, dReal az, dReal bx, dReal by, dReal bz) pfdRFrom2Axes;
+alias void function(dMatrix3 R, dReal ax, dReal ay, dReal az) pfdRFromZAxis;
+alias void function(dQuaternion q) pfdQSetIdentity;
+alias void function(dQuaternion q, dReal ax, dReal ay, dReal az, dReal angle) pfdQFromAxisAndAngle;
+
+
+/* Quaternion multiplication, analogous to the matrix multiplication routines. */
+/* qa = rotate by qc, then qb */
+alias void function(dQuaternion qa, dQuaternion qb, dQuaternion qc) pfdQMultiply0;
+
+/* qa = rotate by qc, then by inverse of qb */
+alias void function(dQuaternion qa, dQuaternion qb, dQuaternion qc) pfdQMultiply1;
+
+/* qa = rotate by inverse of qc, then by qb */
+alias void function(dQuaternion qa, dQuaternion qb, dQuaternion qc) pfdQMultiply2;
+
+/* qa = rotate by inverse of qc, then by inverse of qb */
+alias void function(dQuaternion qa, dQuaternion qb, dQuaternion qc) pfdQMultiply3;
+
+alias void function(dMatrix3 R, dQuaternion q) pfdRfromQ;
+alias void function(dQuaternion q, dMatrix3 R) pfdQfromR;
+alias void function(dReal dq[4], dVector3 w, dQuaternion q) pfdDQfromW;
+}
+
 pfdRSetIdentity          dRSetIdentity;
 pfdRFromAxisAndAngle     dRFromAxisAndAngle;
 pfdRFromEulerAngles      dRFromEulerAngles;
@@ -58,28 +78,10 @@
 pfdRFromZAxis            dRFromZAxis;
 pfdQSetIdentity          dQSetIdentity;
 pfdQFromAxisAndAngle     dQFromAxisAndAngle;
-
-
-/* Quaternion multiplication, analogous to the matrix multiplication routines. */
-/* qa = rotate by qc, then qb */
-typedef void function(dQuaternion qa, dQuaternion qb, dQuaternion qc) pfdQMultiply0;
 pfdQMultiply0      dQMultiply0;
-
-/* qa = rotate by qc, then by inverse of qb */
-typedef void function(dQuaternion qa, dQuaternion qb, dQuaternion qc) pfdQMultiply1;
 pfdQMultiply1      dQMultiply1;
-
-/* qa = rotate by inverse of qc, then by qb */
-typedef void function(dQuaternion qa, dQuaternion qb, dQuaternion qc) pfdQMultiply2;
 pfdQMultiply2      dQMultiply2;
-
-/* qa = rotate by inverse of qc, then by inverse of qb */
-typedef void function(dQuaternion qa, dQuaternion qb, dQuaternion qc) pfdQMultiply3;
 pfdQMultiply3      dQMultiply3;
-
-typedef void function(dMatrix3 R, dQuaternion q) pfdRfromQ;
-typedef void function(dQuaternion q, dMatrix3 R) pfdQfromR;
-typedef void function(dReal dq[4], dVector3 w, dQuaternion q) pfdDQfromW;
 pfdRfromQ      dRfromQ;
 pfdQfromR      dQfromR;
 pfdDQfromW     dDQfromW;
Index: DerelictODE/derelict/ode/mass.d
===================================================================
--- DerelictODE/derelict/ode/mass.d	(revision 318)
+++ DerelictODE/derelict/ode/mass.d	(working copy)
@@ -97,7 +97,7 @@
 //==============================================================================
 // FUNCTIONS
 //==============================================================================
-extern(C):
+extern(C) {
 
 /**
  * Check if a mass structure has valid value.
@@ -107,24 +107,29 @@
  *
  * @return 1 if both codition are met
  */
-typedef void function(dMass* m) pfdMassCheck;
-pfdMassCheck          dMassCheck;
+alias void function(dMass* m) pfdMassCheck;
 
 
-typedef void function(dMass* m) pfdMassSetZero;
-typedef void function(dMass* m, dReal themass, dReal cgx, dReal cgy, dReal cgz, dReal I11, dReal I22, dReal I33, dReal I12, dReal I13, dReal I23) pfdMassSetParameters;
-typedef void function(dMass* m, dReal density, dReal radius) pfdMassSetSphere;
-typedef void function(dMass* m, dReal total_mass, dReal radius) pfdMassSetSphereTotal;
-typedef void function(dMass* m, dReal density, int direction, dReal radius, dReal length) pfdMassSetCapsule;
-typedef void function(dMass* m, dReal total_mass, int direction, dReal radius, dReal length) pfdMassSetCapsuleTotal;
-typedef void function(dMass* m, dReal density, int direction, dReal radius, dReal length) pfdMassSetCylinder;
-typedef void function(dMass* m, dReal total_mass, int direction, dReal radius, dReal length) pfdMassSetCylinderTotal;
-typedef void function(dMass* m, dReal density, dReal lx, dReal ly, dReal lz) pfdMassSetBox;
-typedef void function(dMass* m, dReal total_mass, dReal lx, dReal ly, dReal lz) pfdMassSetBoxTotal;
-typedef void function(dMass* m, dReal newmass) pfdMassAdjust;
-typedef void function(dMass* m, dReal x, dReal y, dReal z) pfdMassTranslate;
-typedef void function(dMass* m, dMatrix3 R) pfdMassRotate;
-typedef void function(dMass* m, dMass* b) pfdMassAdd;
+alias void function(dMass* m) pfdMassSetZero;
+alias void function(dMass* m, dReal themass, dReal cgx, dReal cgy, dReal cgz, dReal I11, dReal I22, dReal I33, dReal I12, dReal I13, dReal I23) pfdMassSetParameters;
+alias void function(dMass* m, dReal density, dReal radius) pfdMassSetSphere;
+alias void function(dMass* m, dReal total_mass, dReal radius) pfdMassSetSphereTotal;
+alias void function(dMass* m, dReal density, int direction, dReal radius, dReal length) pfdMassSetCapsule;
+alias void function(dMass* m, dReal total_mass, int direction, dReal radius, dReal length) pfdMassSetCapsuleTotal;
+alias void function(dMass* m, dReal density, int direction, dReal radius, dReal length) pfdMassSetCylinder;
+alias void function(dMass* m, dReal total_mass, int direction, dReal radius, dReal length) pfdMassSetCylinderTotal;
+alias void function(dMass* m, dReal density, dReal lx, dReal ly, dReal lz) pfdMassSetBox;
+alias void function(dMass* m, dReal total_mass, dReal lx, dReal ly, dReal lz) pfdMassSetBoxTotal;
+alias void function(dMass* m, dReal newmass) pfdMassAdjust;
+alias void function(dMass* m, dReal x, dReal y, dReal z) pfdMassTranslate;
+alias void function(dMass* m, dMatrix3 R) pfdMassRotate;
+alias void function(dMass* m, dMass* b) pfdMassAdd;
+
+// Added in 0.8
+alias void function(dMass *, dReal density, dGeomID g) pfdMassSetTrimesh;
+}
+
+pfdMassCheck          dMassCheck;
 pfdMassSetZero            dMassSetZero;
 pfdMassSetParameters      dMassSetParameters;
 pfdMassSetSphere          dMassSetSphere;
@@ -139,12 +144,8 @@
 pfdMassTranslate          dMassTranslate;
 pfdMassRotate             dMassRotate;
 pfdMassAdd                dMassAdd;
-
-// Added in 0.8
-typedef void function(dMass *, dReal density, dGeomID g) pfdMassSetTrimesh;
 pfdMassSetTrimesh            dMassSetTrimesh;
 
-
 // Backwards compatible API
 alias dMassSetCapsule dMassSetCappedCylinder;
 alias dMassSetCapsuleTotal dMassSetCappedCylinderTotal;
Index: DerelictODE/derelict/ode/export_dif.d
===================================================================
--- DerelictODE/derelict/ode/export_dif.d	(revision 318)
+++ DerelictODE/derelict/ode/export_dif.d	(working copy)
@@ -54,8 +54,6 @@
 // FUNCTIONS
 //==============================================================================
 
-extern(C):
-
-typedef void function(dWorldID w, FILE* file, char* world_name) pfdWorldExportDIF;
+extern(C) alias void function(dWorldID w, FILE* file, char* world_name) pfdWorldExportDIF;
 pfdWorldExportDIF          dWorldExportDIF;
 
Index: DerelictODE/derelict/ode/matrix.d
===================================================================
--- DerelictODE/derelict/ode/matrix.d	(revision 318)
+++ DerelictODE/derelict/ode/matrix.d	(working copy)
@@ -41,19 +41,18 @@
 //==============================================================================
 // FUNCTIONS
 //==============================================================================
-extern(C):
+extern(C) {
+
+/* set a vector/matrix of size n to all zeros, or to a specefic value. */
+alias void function(dReal* a, int n) pfdSetZero;
 
 /* set a vector/matrix of size n to all zeros, or to a specific value. */
-typedef void function(dReal* a, int n) pfdSetZero;
-typedef void function(dReal* a, int n, dReal value) pfdSetValue;
-pfdSetZero       dSetZero;
-pfdSetValue      dSetValue;
+alias void function(dReal* a, int n, dReal value) pfdSetValue;
 
 /* get the dot product of two n*1 vectors. if n <= 0 then
  * zero will be returned (in which case a and b need not be valid).
  */
-typedef dReal function(dReal* a, dReal* b, int n) pfdDot;
-pfdDot       dDot;
+alias dReal function(dReal* a, dReal* b, int n) pfdDot;
 
 /* matrix multiplication. all matrices are stored in standard row format.
  * the digit refers to the argument that is transposed:
@@ -63,41 +62,34 @@
  * case 1,2 are equivalent to saying that the operation is A=B*C but
  * B or C are stored in standard column format.
  */
-typedef void function(dReal* A, in dReal* B, in dReal* C, int p, int q, int r) pfdMultiply0;
-typedef void function(dReal* A, in dReal* B, in dReal* C, int p, int q, int r) pfdMultiply1;
-typedef void function(dReal* A, in dReal* B, in dReal* C, int p, int q, int r) pfdMultiply2;
-pfdMultiply0       dMultiply0;
-pfdMultiply1       dMultiply1;
-pfdMultiply2       dMultiply2;
+alias void function(dReal* A, in dReal* B, in dReal* C, int p, int q, int r) pfdMultiply0;
+alias void function(dReal* A, in dReal* B, in dReal* C, int p, int q, int r) pfdMultiply1;
+alias void function(dReal* A, in dReal* B, in dReal* C, int p, int q, int r) pfdMultiply2;
 
 /* do an in-place cholesky decomposition on the lower triangle of the n*n
  * symmetric matrix A (which is stored by rows). the resulting lower triangle
  * will be such that L*L'=A. return 1 on success and 0 on failure (on failure
  * the matrix is not positive definite).
  */
-typedef int function(dReal* A, int n) pfdFactorCholesky;
-pfdFactorCholesky       dFactorCholesky;
+alias int function(dReal* A, int n) pfdFactorCholesky;
 
 /* solve for x: L*L'*x = b, and put the result back into x.
  * L is size n*n, b is size n*1. only the lower triangle of L is considered.
  */
-typedef void function(dReal* L, dReal* b, int n) pfdSolveCholesky;
-pfdSolveCholesky       dSolveCholesky;
+alias void function(dReal* L, dReal* b, int n) pfdSolveCholesky;
 
 /* compute the inverse of the n*n positive definite matrix A and put it in
  * Ainv. this is not especially fast. this returns 1 on success (A was
  * positive definite) or 0 on failure (not PD).
  */
-typedef int function(dReal* A, dReal* Ainv, int n) pfdInvertPDMatrix;
-pfdInvertPDMatrix       dInvertPDMatrix;
+alias int function(dReal* A, dReal* Ainv, int n) pfdInvertPDMatrix;
 
 /* check whether an n*n matrix A is positive definite, return 1/0 (yes/no).
  * positive definite means that x'*A*x > 0 for any x. this performs a
  * cholesky decomposition of A. if the decomposition fails then the matrix
  * is not positive definite. A is stored by rows. A is not altered.
  */
-typedef int function(dReal* A, int n) pfdIsPositiveDefinite;
-pfdIsPositiveDefinite       dIsPositiveDefinite;
+alias int function(dReal* A, int n) pfdIsPositiveDefinite;
 
 /* factorize a matrix A into L*D*L', where L is lower triangular with ones on
  * the diagonal, and D is diagonal.
@@ -106,28 +98,24 @@
  * written) and the reciprocal of the diagonal elements of D are written into
  * d.
  */
-typedef void function(dReal* A, dReal* d, int n, int nskip) pfdFactorLDLT;
-pfdFactorLDLT       dFactorLDLT;
+alias void function(dReal* A, dReal* d, int n, int nskip) pfdFactorLDLT;
 
 /* solve L*x=b, where L is n*n lower triangular with ones on the diagonal,
  * and x,b are n*1. b is overwritten with x.
  * the leading dimension of L is `nskip'.
  */
-typedef void function(dReal* L, dReal *b, int n, int nskip) pfdSolveL1;
-pfdSolveL1       dSolveL1;
+alias void function(dReal* L, dReal *b, int n, int nskip) pfdSolveL1;
 
 
 /* solve L'*x=b, where L is n*n lower triangular with ones on the diagonal,
  * and x,b are n*1. b is overwritten with x.
  * the leading dimension of L is `nskip'.
  */
-typedef void function(dReal* L, dReal* b, int n, int nskip) pfdSolveL1T;
-pfdSolveL1T       dSolveL1T;
+alias void function(dReal* L, dReal* b, int n, int nskip) pfdSolveL1T;
 
 
 /* in matlab syntax: a(1:n) = a(1:n) .* d(1:n) */
-typedef void function(dReal* a, dReal* d, int n) pfdVectorScale;
-pfdVectorScale       dVectorScale;
+alias void function(dReal* a, dReal* d, int n) pfdVectorScale;
 
 
 /* given `L', a n*n lower triangular matrix with ones on the diagonal,
@@ -135,8 +123,7 @@
  * D, solve L*D*L'*x=b where x,b are n*1. x overwrites b.
  * the leading dimension of L is `nskip'.
  */
-typedef void function(dReal* L, dReal* d, dReal* b, int n, int nskip) pfdSolveLDLT;
-pfdSolveLDLT       dSolveLDLT;
+alias void function(dReal* L, dReal* d, dReal* b, int n, int nskip) pfdSolveLDLT;
 
 
 /* given an L*D*L' factorization of an n*n matrix A, return the updated
@@ -152,8 +139,7 @@
  * the result is written into L, except that the left column of L and d[0]
  * are not actually modified. see ldltaddTL.m for further comments.
  */
-typedef void function(dReal* L, dReal* d, dReal* a, int n, int nskip) pfdLDLTAddTL;
-pfdLDLTAddTL       dLDLTAddTL;
+alias void function(dReal* L, dReal* d, dReal* a, int n, int nskip) pfdLDLTAddTL;
 
 
 /* given an L*D*L' factorization of a permuted matrix A, produce a new
@@ -173,14 +159,31 @@
  *
  * a fast O(n^2) algorithm is used. see ldltremove.m for further comments.
  */
-typedef void function(dReal** A, int* p, dReal* L, dReal* d, int n1, int n2, int r, int nskip) pfdLDLTRemove;
-pfdLDLTRemove       dLDLTRemove;
+alias void function(dReal** A, int* p, dReal* L, dReal* d, int n1, int n2, int r, int nskip) pfdLDLTRemove;
 
 
 /* given an n*n matrix A (with leading dimension nskip), remove the r'th row
  * and column by moving elements. the new matrix will have the same leading
  * dimension. the last row and column of A are untouched on exit.
  */
-typedef void function(dReal* A, int n, int nskip, int r) pfdRemoveRowCol;
+alias void function(dReal* A, int n, int nskip, int r) pfdRemoveRowCol;
+}
+
+pfdSetZero       dSetZero;
+pfdSetValue      dSetValue;
+pfdDot       dDot;
+pfdMultiply0       dMultiply0;
+pfdMultiply1       dMultiply1;
+pfdMultiply2       dMultiply2;
+pfdFactorCholesky       dFactorCholesky;
+pfdSolveCholesky       dSolveCholesky;
+pfdInvertPDMatrix       dInvertPDMatrix;
+pfdIsPositiveDefinite       dIsPositiveDefinite;
+pfdFactorLDLT       dFactorLDLT;
+pfdSolveL1       dSolveL1;
+pfdSolveL1T       dSolveL1T;
+pfdVectorScale       dVectorScale;
+pfdSolveLDLT       dSolveLDLT;
+pfdLDLTAddTL       dLDLTAddTL;
+pfdLDLTRemove       dLDLTRemove;
 pfdRemoveRowCol       dRemoveRowCol;
-
Index: DerelictODE/derelict/ode/collision_space.d
===================================================================
--- DerelictODE/derelict/ode/collision_space.d	(revision 318)
+++ DerelictODE/derelict/ode/collision_space.d	(working copy)
@@ -56,52 +56,40 @@
  *
  * @ingroup collide
  */
-typedef void function(void* data, dGeomID o1, dGeomID o2) dNearCallback;
+alias void function(void* data, dGeomID o1, dGeomID o2) dNearCallback;
 
-extern(C):
+extern(C) {
 
 /* set a new error, debug or warning handler. if fn is 0, the default handlers
  * are used.
  */
-typedef dSpaceID function(dSpaceID space) pfdSimpleSpaceCreate;
-pfdSimpleSpaceCreate          dSimpleSpaceCreate;
+alias dSpaceID function(dSpaceID space) pfdSimpleSpaceCreate;
+alias dSpaceID function(dSpaceID space) pfdHashSpaceCreate;
+alias dSpaceID function(dSpaceID space, dVector3 Center, dVector3 Extents, int Depth) pfdQuadTreeSpaceCreate;
+alias void function(dSpaceID space) pfdSpaceDestroy;
+alias void function(dSpaceID space, int minlevel, int maxlevel) pfdHashSpaceSetLevels;
+alias void function(dSpaceID space, int* minlevel, int* maxlevel) pfdHashSpaceGetLevels;
+alias void function(dSpaceID space, int mode) pfdSpaceSetCleanup;
+alias int function(dSpaceID space) pfdSpaceGetCleanup;
+alias void function(dSpaceID, dGeomID) pfdSpaceAdd;
+alias void function(dSpaceID, dGeomID) pfdSpaceRemove;
+alias int function(dSpaceID, dGeomID) pfdSpaceQuery;
+alias void function(dSpaceID) pfdSpaceClean;
+alias int function(dSpaceID) pfdSpaceGetNumGeoms;
+alias dGeomID function(dSpaceID, int i) pfdSpaceGetGeom;
+}
 
-typedef dSpaceID function(dSpaceID space) pfdHashSpaceCreate;
+pfdSimpleSpaceCreate          dSimpleSpaceCreate;
 pfdHashSpaceCreate          dHashSpaceCreate;
-
-typedef dSpaceID function(dSpaceID space, dVector3 Center, dVector3 Extents, int Depth) pfdQuadTreeSpaceCreate;
 pfdQuadTreeSpaceCreate          dQuadTreeSpaceCreate;
-
-typedef void function(dSpaceID space) pfdSpaceDestroy;
 pfdSpaceDestroy          dSpaceDestroy;
-
-typedef void function(dSpaceID space, int minlevel, int maxlevel) pfdHashSpaceSetLevels;
 pfdHashSpaceSetLevels          dHashSpaceSetLevels;
-
-typedef void function(dSpaceID space, int* minlevel, int* maxlevel) pfdHashSpaceGetLevels;
 pfdHashSpaceGetLevels          dHashSpaceGetLevels;
-
-typedef void function(dSpaceID space, int mode) pfdSpaceSetCleanup;
 pfdSpaceSetCleanup          dSpaceSetCleanup;
-
-typedef int function(dSpaceID space) pfdSpaceGetCleanup;
 pfdSpaceGetCleanup          dSpaceGetCleanup;
-
-typedef void function(dSpaceID, dGeomID) pfdSpaceAdd;
 pfdSpaceAdd          dSpaceAdd;
-
-typedef void function(dSpaceID, dGeomID) pfdSpaceRemove;
 pfdSpaceRemove          dSpaceRemove;
-
-typedef int function(dSpaceID, dGeomID) pfdSpaceQuery;
 pfdSpaceQuery          dSpaceQuery;
-
-typedef void function(dSpaceID) pfdSpaceClean;
 pfdSpaceClean          dSpaceClean;
-
-typedef int function(dSpaceID) pfdSpaceGetNumGeoms;
 pfdSpaceGetNumGeoms          dSpaceGetNumGeoms;
-
-typedef dGeomID function(dSpaceID, int i) pfdSpaceGetGeom;
 pfdSpaceGetGeom          dSpaceGetGeom;
-
Index: DerelictODE/derelict/ode/memory.d
===================================================================
--- DerelictODE/derelict/ode/memory.d	(revision 318)
+++ DerelictODE/derelict/ode/memory.d	(working copy)
@@ -44,35 +44,37 @@
  * should not return.
  */
 /* function types to allocate and free memory */
-typedef void* function(size_t size) dAllocFunction;
-typedef void* function(void* ptr, size_t oldsize, size_t newsize) dReallocFunction;
-typedef void function (void* ptr, size_t size) dFreeFunction;
+alias void* function(size_t size) dAllocFunction;
+alias void* function(void* ptr, size_t oldsize, size_t newsize) dReallocFunction;
+alias void function (void* ptr, size_t size) dFreeFunction;
 
-extern(C):
+extern(C) {
 
 /*
  * set new memory management functions. if fn is 0, the default handlers are
  * used.
  */
-typedef void function(dAllocFunction*)   pfdSetAllocHandler;
-typedef void function(dReallocFunction*) pfdSetReallocHandler;
-typedef void function(dFreeFunction*)    pfdSetFreeHandler;
+alias void function(dAllocFunction*)   pfdSetAllocHandler;
+alias void function(dReallocFunction*) pfdSetReallocHandler;
+alias void function(dFreeFunction*)    pfdSetFreeHandler;
+
+/* get current memory management functions */
+alias dAllocFunction* function()   pfdGetAllocHandler;
+alias dReallocFunction* function() pfdGetReallocHandler;
+alias dFreeFunction* function()    pfdGetFreeHandler;
+
+/* allocate and free memory. */
+alias void* function(size_t size) pfdAlloc;
+alias void* function(void* ptr, size_t oldsize, size_t newsize) pfdRealloc;
+alias void function(void *ptr, size_t size) pfdFree;
+}
+
 pfdSetAllocHandler       dSetAllocHandler;
 pfdSetReallocHandler     dSetReallocHandler;
 pfdSetFreeHandler        dSetFreeHandler;
-
-/* get current memory management functions */
-typedef dAllocFunction* function()   pfdGetAllocHandler;
-typedef dReallocFunction* function() pfdGetReallocHandler;
-typedef dFreeFunction* function()    pfdGetFreeHandler;
 pfdGetAllocHandler       dGetAllocHandler;
 pfdGetReallocHandler     dGetReallocHandler;
 pfdGetFreeHandler        dGetFreeHandler;
-
-/* allocate and free memory. */
-typedef void* function(size_t size) pfdAlloc;
-typedef void* function(void* ptr, size_t oldsize, size_t newsize) pfdRealloc;
-typedef void function(void *ptr, size_t size) pfdFree;
 pfdAlloc       dAlloc;
 pfdRealloc     dRealloc;
 pfdFree        dFree;
Index: DerelictODE/derelict/ode/timer.d
===================================================================
--- DerelictODE/derelict/ode/timer.d	(revision 318)
+++ DerelictODE/derelict/ode/timer.d	(working copy)
@@ -57,44 +57,46 @@
 //==============================================================================
 // FUNCTIONS
 //==============================================================================
-extern(C):
+extern(C) {
 
 /* set a vector/matrix of size n to all zeros, or to a specific value. */
-typedef void function(dStopwatch*) pfdStopwatchReset;
-typedef void function(dStopwatch*) pfdStopwatchStart;
-typedef void function(dStopwatch*) pfdStopwatchStop;
-typedef void function(dStopwatch*) pfdStopwatchTime;
-pfdStopwatchReset      dStopwatchReset;
-pfdStopwatchStart      dStopwatchStart;
-pfdStopwatchStop       dStopwatchStop;
-pfdStopwatchTime       dStopwatchTime; /* returns total time in secs */
+alias void function(dStopwatch*) pfdStopwatchReset;
+alias void function(dStopwatch*) pfdStopwatchStart;
+alias void function(dStopwatch*) pfdStopwatchStop;
+alias void function(dStopwatch*) pfdStopwatchTime;
 
 /* code timers */
-typedef void function(char* description) pfdTimerStart;
-typedef void function(char* description) pfdTimerNow;
-typedef void function() pfdTimerEnd;
-pfdTimerStart    dTimerStart; /* pass a static string here */
-pfdTimerNow      dTimerNow; /* pass a static string here */
-pfdTimerEnd      dTimerEnd; /* pass a static string here */
+alias void function(char* description) pfdTimerStart;
+alias void function(char* description) pfdTimerNow;
+alias void function() pfdTimerEnd;
 
 /* print out a timer report. if `average' is nonzero, print out the average
  * time for each slot (this is only meaningful if the same start-now-end
  * calls are being made repeatedly.
  */
-typedef void function(FILE* fout, int average) pfdTimerReport;
-pfdTimerReport      dTimerReport;
+alias void function(FILE* fout, int average) pfdTimerReport;
 
 /* resolution */
 /* returns the timer ticks per second implied by the timing hardware or API.
  * the actual timer resolution may not be this great.
  */
-typedef double function() pfdTimerTicksPerSecond;
-pfdTimerTicksPerSecond      dTimerTicksPerSecond;
+alias double function() pfdTimerTicksPerSecond;
 
 /* returns an estimate of the actual timer resolution, in seconds. this may
  * be greater than 1/ticks_per_second.
  */
-typedef double function() pfdTimerResolution;
+alias double function() pfdTimerResolution;
+}
+
+pfdStopwatchReset      dStopwatchReset;
+pfdStopwatchStart      dStopwatchStart;
+pfdStopwatchStop       dStopwatchStop;
+pfdStopwatchTime       dStopwatchTime; /* returns total time in secs */
+pfdTimerStart    dTimerStart; /* pass a static string here */
+pfdTimerNow      dTimerNow; /* pass a static string here */
+pfdTimerEnd      dTimerEnd; /* pass a static string here */
+pfdTimerReport      dTimerReport;
+pfdTimerTicksPerSecond      dTimerTicksPerSecond;
 pfdTimerResolution      dTimerResolution;
 
 
Index: DerelictODE/derelict/ode/odemath.d
===================================================================
--- DerelictODE/derelict/ode/odemath.d	(revision 318)
+++ DerelictODE/derelict/ode/odemath.d	(working copy)
@@ -100,15 +100,13 @@
 /* all user defined error functions have this type. error and debug functions
  * should not return.
  */
-extern(C):
+extern(C) {
 
 /*
  * normalize 3x1 and 4x1 vectors (i.e. scale them to unit length)
  */
-typedef void function(dVector3 a) pfdNormalize3;
-pfdNormalize3          dNormalize3;
-typedef void function(dVector4 a) pfdNormalize4;
-pfdNormalize4          dNormalize4;
+alias void function(dVector3 a) pfdNormalize3;
+alias void function(dVector4 a) pfdNormalize4;
 
 /*
  * given a unit length "normal" vector n, generate vectors p and q vectors
@@ -117,7 +115,11 @@
  * q will equal n x p. if n is not unit length then p will be unit length but
  * q wont be.
  */
-typedef void function(dVector3 n, dVector3 p, dVector3 q) pfdPlaneSpace;
+alias void function(dVector3 n, dVector3 p, dVector3 q) pfdPlaneSpace;
+}
+
+pfdNormalize3          dNormalize3;
+pfdNormalize4          dNormalize4;
 pfdPlaneSpace          dPlaneSpace;
 
 
Index: DerelictODE/derelict/ode/collision_trimesh.d
===================================================================
--- DerelictODE/derelict/ode/collision_trimesh.d	(revision 318)
+++ DerelictODE/derelict/ode/collision_trimesh.d	(working copy)
@@ -45,97 +45,76 @@
  * Data storage for triangle meshes.
  */
 struct dxTriMeshData {}
-typedef dxTriMeshData* dTriMeshDataID;
+alias dxTriMeshData* dTriMeshDataID;
 
 enum {
     TRIMESH_FACE_NORMALS
 }
 
-extern(C):
+extern(C) {
 
 /*
  * These dont make much sense now, but they will later when we add more
  * features.
  */
-typedef dTriMeshDataID function() pfdGeomTriMeshDataCreate;
-pfdGeomTriMeshDataCreate          dGeomTriMeshDataCreate;
+alias dTriMeshDataID function() pfdGeomTriMeshDataCreate;
+alias void function(dTriMeshDataID g) pfdGeomTriMeshDataDestroy;
+alias void function(dTriMeshDataID g, int data_id, void* in_data) pfdGeomTriMeshDataSet;
+alias void* function(dTriMeshDataID g, int data_id) pfdGeomTriMeshDataGet;
 
-typedef void function(dTriMeshDataID g) pfdGeomTriMeshDataDestroy;
-pfdGeomTriMeshDataDestroy          dGeomTriMeshDataDestroy;
-
-typedef void function(dTriMeshDataID g, int data_id, void* in_data) pfdGeomTriMeshDataSet;
-pfdGeomTriMeshDataSet          dGeomTriMeshDataSet;
-typedef void* function(dTriMeshDataID g, int data_id) pfdGeomTriMeshDataGet;
-pfdGeomTriMeshDataGet          dGeomTriMeshDataGet;
-
 /**
  * We need to set the last transform after each time step for
  * accurate collision response. These functions get and set that transform.
  * It is stored per geom instance, rather than per dTriMeshDataID.
  */
-typedef void function(dGeomID g, dMatrix4 last_trans) pfdGeomTriMeshSetLastTransform;
-pfdGeomTriMeshSetLastTransform          dGeomTriMeshSetLastTransform;
-typedef dReal* function(dGeomID g) pfdGeomTriMeshGetLastTransform;
-pfdGeomTriMeshGetLastTransform          dGeomTriMeshGetLastTransform;
+alias void function(dGeomID g, dMatrix4 last_trans) pfdGeomTriMeshSetLastTransform;
+alias dReal* function(dGeomID g) pfdGeomTriMeshGetLastTransform;
 
 /*
  * Build TriMesh data with single pricision used in vertex data .
  */
-typedef void function(dTriMeshDataID g, void* Vertices, int VertexStride, int VertexCount, void* Indices, int IndexCount, int TriStride) pfdGeomTriMeshDataBuildSingle;
-pfdGeomTriMeshDataBuildSingle          dGeomTriMeshDataBuildSingle;
+alias void function(dTriMeshDataID g, void* Vertices, int VertexStride, int VertexCount, void* Indices, int IndexCount, int TriStride) pfdGeomTriMeshDataBuildSingle;
 /* same again with a normals array (used as trimesh-trimesh optimization) */
-typedef void function(dTriMeshDataID g, void* Vertices, int VertexStride, int VertexCount, void* Indices, int IndexCount, int TriStride, void* Normals) pfdGeomTriMeshDataBuildSingle1;
-pfdGeomTriMeshDataBuildSingle1          dGeomTriMeshDataBuildSingle1;
+alias void function(dTriMeshDataID g, void* Vertices, int VertexStride, int VertexCount, void* Indices, int IndexCount, int TriStride, void* Normals) pfdGeomTriMeshDataBuildSingle1;
 /*
 * Build TriMesh data with double pricision used in vertex data .
 */
-typedef void function(dTriMeshDataID g, void* Vertices, int VertexStride, int VertexCount, void* Indices, int IndexCount, int TriStride) pfdGeomTriMeshDataBuildDouble;
-pfdGeomTriMeshDataBuildDouble          dGeomTriMeshDataBuildDouble;
+alias void function(dTriMeshDataID g, void* Vertices, int VertexStride, int VertexCount, void* Indices, int IndexCount, int TriStride) pfdGeomTriMeshDataBuildDouble;
 /* same again with a normals array (used as trimesh-trimesh optimization) */
-typedef void function(dTriMeshDataID g, void* Vertices, int VertexStride, int VertexCount, void* Indices, int IndexCount, int TriStride, void* Normals) pfdGeomTriMeshDataBuildDouble1;
-pfdGeomTriMeshDataBuildDouble1          dGeomTriMeshDataBuildDouble1;
+alias void function(dTriMeshDataID g, void* Vertices, int VertexStride, int VertexCount, void* Indices, int IndexCount, int TriStride, void* Normals) pfdGeomTriMeshDataBuildDouble1;
 
 /*
  * Simple build. Single/double precision based on dSINGLE/dDOUBLE!
  */
-typedef void function(dTriMeshDataID g, dReal* Vertices, int VertexCount, int* Indices, int IndexCount) pfdGeomTriMeshDataBuildSimple;
-pfdGeomTriMeshDataBuildSimple          dGeomTriMeshDataBuildSimple;
+alias void function(dTriMeshDataID g, dReal* Vertices, int VertexCount, int* Indices, int IndexCount) pfdGeomTriMeshDataBuildSimple;
 /* same again with a normals array (used as trimesh-trimesh optimization) */
-typedef void function(dTriMeshDataID g, dReal* Vertices, int VertexCount, int* Indices, int IndexCount, int* Normals) pfdGeomTriMeshDataBuildSimple1;
-pfdGeomTriMeshDataBuildSimple1          dGeomTriMeshDataBuildSimple1;
+alias void function(dTriMeshDataID g, dReal* Vertices, int VertexCount, int* Indices, int IndexCount, int* Normals) pfdGeomTriMeshDataBuildSimple1;
 
 /* Preprocess the trimesh data to remove mark unnecessary edges and vertices */
-typedef void function(dTriMeshDataID g) pfdGeomTriMeshDataPreprocess;
-pfdGeomTriMeshDataPreprocess          dGeomTriMeshDataPreprocess;
+alias void function(dTriMeshDataID g) pfdGeomTriMeshDataPreprocess;
 
 /* Get and set the internal preprocessed trimesh data buffer, for loading and saving */
-typedef void function(dTriMeshDataID g, ubyte** buf, int* bufLen) pfdGeomTriMeshDataGetBuffer;
-pfdGeomTriMeshDataGetBuffer          dGeomTriMeshDataGetBuffer;
-typedef void function(dTriMeshDataID g, ubyte* buf) pfdGeomTriMeshDataSetBuffer;
-pfdGeomTriMeshDataSetBuffer          dGeomTriMeshDataSetBuffer;
+alias void function(dTriMeshDataID g, ubyte** buf, int* bufLen) pfdGeomTriMeshDataGetBuffer;
+alias void function(dTriMeshDataID g, ubyte* buf) pfdGeomTriMeshDataSetBuffer;
 
 
 /*
  * Per triangle callback. Allows the user to say if he wants a collision with
  * a particular triangle.
  */
-typedef int function(dGeomID TriMesh, dGeomID RefObject, int TriangleIndex) dTriCallback;
+alias int function(dGeomID TriMesh, dGeomID RefObject, int TriangleIndex) dTriCallback;
 
-typedef void function(dGeomID g, dTriCallback* Callback) pfdGeomTriMeshSetCallback;
-pfdGeomTriMeshSetCallback          dGeomTriMeshSetCallback;
-typedef dTriCallback* function(dGeomID g) pfdGeomTriMeshGetCallback;
-pfdGeomTriMeshGetCallback          dGeomTriMeshGetCallback;
+alias void function(dGeomID g, dTriCallback* Callback) pfdGeomTriMeshSetCallback;
+alias dTriCallback* function(dGeomID g) pfdGeomTriMeshGetCallback;
 
 /*
  * Per object callback. Allows the user to get the list of triangles in 1
  * shot. Maybe we should remove this one.
  */
-typedef void function(dGeomID TriMesh, dGeomID RefObject, int* TriIndices, int TriCount) dTriArrayCallback;
+alias void function(dGeomID TriMesh, dGeomID RefObject, int* TriIndices, int TriCount) dTriArrayCallback;
 
-typedef void function(dGeomID g, dTriArrayCallback* ArrayCallback) pfdGeomTriMeshSetArrayCallback;
-pfdGeomTriMeshSetArrayCallback          dGeomTriMeshSetArrayCallback;
-typedef dTriArrayCallback* function(dGeomID g) pfdGeomTriMeshGetArrayCallback;
-pfdGeomTriMeshGetArrayCallback          dGeomTriMeshGetArrayCallback;
+alias void function(dGeomID g, dTriArrayCallback* ArrayCallback) pfdGeomTriMeshSetArrayCallback;
+alias dTriArrayCallback* function(dGeomID g) pfdGeomTriMeshGetArrayCallback;
 
 /*
  * Ray callback.
@@ -143,31 +122,24 @@
  * coords. The user can for example sample a texture with alpha transparency
  * to determine if a collision should occur.
  */
-typedef int function(dGeomID TriMesh, dGeomID Ray, int TriangleIndex, dReal u, dReal v) dTriRayCallback;
+alias int function(dGeomID TriMesh, dGeomID Ray, int TriangleIndex, dReal u, dReal v) dTriRayCallback;
 
-typedef void function(dGeomID g, dTriRayCallback* Callback) pfdGeomTriMeshSetRayCallback;
-pfdGeomTriMeshSetRayCallback          dGeomTriMeshSetRayCallback;
-typedef dTriRayCallback* function(dGeomID g) pfdGeomTriMeshGetRayCallback;
-pfdGeomTriMeshGetRayCallback          dGeomTriMeshGetRayCallback;
+alias void function(dGeomID g, dTriRayCallback* Callback) pfdGeomTriMeshSetRayCallback;
+alias dTriRayCallback* function(dGeomID g) pfdGeomTriMeshGetRayCallback;
 
 /*
  * Trimesh class
  * Construction. Callbacks are optional.
  */
-typedef dGeomID function(dSpaceID space, dTriMeshDataID Data, dTriCallback* Callback, dTriArrayCallback* ArrayCallback, dTriRayCallback* RayCallback) pfdCreateTriMesh;
-pfdCreateTriMesh          dCreateTriMesh;
+alias dGeomID function(dSpaceID space, dTriMeshDataID Data, dTriCallback* Callback, dTriArrayCallback* ArrayCallback, dTriRayCallback* RayCallback) pfdCreateTriMesh;
 
-typedef void function(dGeomID g, dTriMeshDataID Data) pfdGeomTriMeshSetData;
-pfdGeomTriMeshSetData          dGeomTriMeshSetData;
-typedef dTriMeshDataID function(dGeomID g) pfdGeomTriMeshGetData;
-pfdGeomTriMeshGetData          dGeomTriMeshGetData;
+alias void function(dGeomID g, dTriMeshDataID Data) pfdGeomTriMeshSetData;
+alias dTriMeshDataID function(dGeomID g) pfdGeomTriMeshGetData;
 
 
 // enable/disable/check temporal coherence
-typedef void function(dGeomID g, int geomClass, int enable) pfdGeomTriMeshEnableTC;
-pfdGeomTriMeshEnableTC          dGeomTriMeshEnableTC;
-typedef int function(dGeomID g, int geomClass) pfdGeomTriMeshIsTCEnabled;
-pfdGeomTriMeshIsTCEnabled          dGeomTriMeshIsTCEnabled;
+alias void function(dGeomID g, int geomClass, int enable) pfdGeomTriMeshEnableTC;
+alias int function(dGeomID g, int geomClass) pfdGeomTriMeshIsTCEnabled;
 
 /*
  * Clears the internal temporal coherence caches. When a geom has its
@@ -175,28 +147,24 @@
  * With large worlds with lots of seperate objects this list could get huge.
  * We should be able to do this automagically.
  */
-typedef void function(dGeomID g) pfdGeomTriMeshClearTCCache;
-pfdGeomTriMeshClearTCCache          dGeomTriMeshClearTCCache;
+alias void function(dGeomID g) pfdGeomTriMeshClearTCCache;
 
 
 /*
  * returns the TriMeshDataID
  */
-typedef dTriMeshDataID function(dGeomID g) pfdGeomTriMeshGetTriMeshDataID;
-pfdGeomTriMeshGetTriMeshDataID          dGeomTriMeshGetTriMeshDataID;
+alias dTriMeshDataID function(dGeomID g) pfdGeomTriMeshGetTriMeshDataID;
 
 /*
  * Gets a triangle.
  */
-typedef void function(dGeomID g, int Index, dVector3* v0, dVector3* v1, dVector3* v2) pfdGeomTriMeshGetTriangle;
-pfdGeomTriMeshGetTriangle          dGeomTriMeshGetTriangle;
+alias void function(dGeomID g, int Index, dVector3* v0, dVector3* v1, dVector3* v2) pfdGeomTriMeshGetTriangle;
 
 /*
  * Gets the point on the requested triangle and the given barycentric
  * coordinates.
  */
-typedef void function(dGeomID g, int Index, dReal u, dReal v, dVector3 Out) pfdGeomTriMeshGetPoint;
-pfdGeomTriMeshGetPoint          dGeomTriMeshGetPoint;
+alias void function(dGeomID g, int Index, dReal u, dReal v, dVector3 Out) pfdGeomTriMeshGetPoint;
 
 /*
 
@@ -217,9 +185,41 @@
 */
 
 
-typedef int function(dGeomID g) pfdGeomTriMeshGetTriangleCount;
+alias int function(dGeomID g) pfdGeomTriMeshGetTriangleCount;
+
+alias void function(dTriMeshDataID g) pfdGeomTriMeshDataUpdate;
+}
+
+pfdGeomTriMeshDataCreate          dGeomTriMeshDataCreate;
+pfdGeomTriMeshDataDestroy          dGeomTriMeshDataDestroy;
+pfdGeomTriMeshDataSet          dGeomTriMeshDataSet;
+pfdGeomTriMeshDataGet          dGeomTriMeshDataGet;
+
+pfdGeomTriMeshSetLastTransform          dGeomTriMeshSetLastTransform;
+pfdGeomTriMeshGetLastTransform          dGeomTriMeshGetLastTransform;
+pfdGeomTriMeshDataBuildSingle          dGeomTriMeshDataBuildSingle;
+pfdGeomTriMeshDataBuildSingle1          dGeomTriMeshDataBuildSingle1;
+pfdGeomTriMeshDataBuildDouble          dGeomTriMeshDataBuildDouble;
+pfdGeomTriMeshDataBuildDouble1          dGeomTriMeshDataBuildDouble1;
+pfdGeomTriMeshDataBuildSimple          dGeomTriMeshDataBuildSimple;
+pfdGeomTriMeshDataBuildSimple1          dGeomTriMeshDataBuildSimple1;
+pfdGeomTriMeshDataPreprocess          dGeomTriMeshDataPreprocess;
+pfdGeomTriMeshDataGetBuffer          dGeomTriMeshDataGetBuffer;
+pfdGeomTriMeshDataSetBuffer          dGeomTriMeshDataSetBuffer;
+pfdGeomTriMeshSetCallback          dGeomTriMeshSetCallback;
+pfdGeomTriMeshGetCallback          dGeomTriMeshGetCallback;
+pfdGeomTriMeshSetArrayCallback          dGeomTriMeshSetArrayCallback;
+pfdGeomTriMeshGetArrayCallback          dGeomTriMeshGetArrayCallback;
+pfdGeomTriMeshSetRayCallback          dGeomTriMeshSetRayCallback;
+pfdGeomTriMeshGetRayCallback          dGeomTriMeshGetRayCallback;
+pfdCreateTriMesh          dCreateTriMesh;
+pfdGeomTriMeshSetData          dGeomTriMeshSetData;
+pfdGeomTriMeshGetData          dGeomTriMeshGetData;
+pfdGeomTriMeshEnableTC          dGeomTriMeshEnableTC;
+pfdGeomTriMeshIsTCEnabled          dGeomTriMeshIsTCEnabled;
+pfdGeomTriMeshClearTCCache          dGeomTriMeshClearTCCache;
+pfdGeomTriMeshGetTriMeshDataID          dGeomTriMeshGetTriMeshDataID;
+pfdGeomTriMeshGetTriangle          dGeomTriMeshGetTriangle;
+pfdGeomTriMeshGetPoint          dGeomTriMeshGetPoint;
 pfdGeomTriMeshGetTriangleCount          dGeomTriMeshGetTriangleCount;
-
-typedef void function(dTriMeshDataID g) pfdGeomTriMeshDataUpdate;
 pfdGeomTriMeshDataUpdate          dGeomTriMeshDataUpdate;
-
Index: DerelictODE/derelict/ode/objects.d
===================================================================
--- DerelictODE/derelict/ode/objects.d	(revision 318)
+++ DerelictODE/derelict/ode/objects.d	(working copy)
@@ -67,7 +67,7 @@
  * @return an identifier
  * @ingroup world
  */
-typedef dWorldID function() pfdWorldCreate;
+extern(C) alias dWorldID function() pfdWorldCreate;
 pfdWorldCreate          dWorldCreate;
 
 /**
@@ -79,7 +79,7 @@
  * @ingroup world
  * @param world the identifier for the world the be destroyed.
  */
-typedef void function(dWorldID world) pfdWorldDestroy;
+extern(C) alias void function(dWorldID world) pfdWorldDestroy;
 pfdWorldDestroy          dWorldDestroy;
 
 
@@ -91,7 +91,7 @@
  *
  * @ingroup world
  */
-typedef void function(dWorldID, dReal x, dReal y, dReal z) pfdWorldSetGravity;
+extern(C) alias void function(dWorldID, dReal x, dReal y, dReal z) pfdWorldSetGravity;
 pfdWorldSetGravity          dWorldSetGravity;
 
 
@@ -99,7 +99,7 @@
  * @brief Get the gravity vector for a given world.
  * @ingroup world
  */
-typedef void function(dWorldID, dVector3 gravity) pfdWorldGetGravity;
+extern(C) alias void function(dWorldID, dVector3 gravity) pfdWorldGetGravity;
 pfdWorldGetGravity          dWorldGetGravity;
 
 
@@ -110,7 +110,7 @@
  * @param dWorldID the identifier of the world.
  * @param erp Typical values are in the range 0.1--0.8. The default is 0.2.
  */
-typedef void function(dWorldID, dReal erp) pfdWorldSetERP;
+extern(C) alias void function(dWorldID, dReal erp) pfdWorldSetERP;
 pfdWorldSetERP          dWorldSetERP;
 
 /**
@@ -118,7 +118,7 @@
  * @ingroup world
  * @return ERP value
  */
-typedef dReal function(dWorldID) pfdWorldGetERP;
+extern(C) alias dReal function(dWorldID) pfdWorldGetERP;
 pfdWorldGetERP          dWorldGetERP;
 
 
@@ -129,7 +129,7 @@
  * The default is 10^-5 if single precision is being used, or 10^-10
  * if double precision is being used.
  */
-typedef void function(dWorldID, dReal cfm) pfdWorldSetCFM;
+extern(C) alias void function(dWorldID, dReal cfm) pfdWorldSetCFM;
 pfdWorldSetCFM          dWorldSetCFM;
 
 /**
@@ -137,7 +137,7 @@
  * @ingroup world
  * @return CFM value
  */
-typedef dReal function(dWorldID) pfdWorldGetCFM;
+extern(C) alias dReal function(dWorldID) pfdWorldGetCFM;
 pfdWorldGetCFM          dWorldGetCFM;
 
 
@@ -151,7 +151,7 @@
  * @ingroup world
  * @param stepsize The number of seconds that the simulation has to advance.
  */
-typedef void function(dWorldID, dReal stepsize) pfdWorldStep;
+extern(C) alias void function(dWorldID, dReal stepsize) pfdWorldStep;
 pfdWorldStep          dWorldStep;
 
 
@@ -169,7 +169,7 @@
  * computation may depend on integrator parameters that are set as
  * properties of the world.
  */
-typedef void function(dWorldID, dReal stepsize, dReal ix, dReal iy, dReal iz, dVector3 force) pfdWorldImpulseToForce;
+extern(C) alias void function(dWorldID, dReal stepsize, dReal ix, dReal iy, dReal iz, dVector3 force) pfdWorldImpulseToForce;
 pfdWorldImpulseToForce          dWorldImpulseToForce;
 
 
@@ -204,7 +204,7 @@
  * Increasing the number of QuickStep iterations may help a little bit, but
  * it is not going to help much if your system is really near singular.
  */
-typedef void function(dWorldID w, dReal stepsize) pfdWorldQuickStep;
+extern(C) alias void function(dWorldID w, dReal stepsize) pfdWorldQuickStep;
 pfdWorldQuickStep          dWorldQuickStep;
 
 
@@ -217,7 +217,7 @@
  * longer to compute.
  * @param num The default is 20 iterations.
  */
-typedef void function(dWorldID, int num) pfdWorldSetQuickStepNumIterations;
+extern(C) alias void function(dWorldID, int num) pfdWorldSetQuickStepNumIterations;
 pfdWorldSetQuickStepNumIterations          dWorldSetQuickStepNumIterations;
 
 
@@ -227,7 +227,7 @@
  * @ingroup world
  * @return nr of iterations
  */
-typedef int function(dWorldID) pfdWorldGetQuickStepNumIterations;
+extern(C) alias int function(dWorldID) pfdWorldGetQuickStepNumIterations;
 pfdWorldGetQuickStepNumIterations          dWorldGetQuickStepNumIterations;
 
 /**
@@ -235,7 +235,7 @@
  * @ingroup world
  * @param over_relaxation value to use by SOR
  */
-typedef void function(dWorldID, dReal over_relaxation) pfdWorldSetQuickStepW;
+extern(C) alias void function(dWorldID, dReal over_relaxation) pfdWorldSetQuickStepW;
 pfdWorldSetQuickStepW          dWorldSetQuickStepW;
 
 /**
@@ -243,7 +243,7 @@
  * @ingroup world
  * @returns the over-relaxation setting
  */
-typedef dReal function(dWorldID) pfdWorldGetQuickStepW;
+extern(C) alias dReal function(dWorldID) pfdWorldGetQuickStepW;
 pfdWorldGetQuickStepW          dWorldGetQuickStepW;
 
 /* World contact parameter functions */
@@ -256,7 +256,7 @@
  * @remarks
  * Reducing this value can help prevent "popping" of deeply embedded objects.
  */
-typedef void function(dWorldID, dReal vel) pfdWorldSetContactMaxCorrectingVel;
+extern(C) alias void function(dWorldID, dReal vel) pfdWorldSetContactMaxCorrectingVel;
 pfdWorldSetContactMaxCorrectingVel          dWorldSetContactMaxCorrectingVel;
 
 /**
@@ -264,7 +264,7 @@
  * to generated.
  * @ingroup world
  */
-typedef dReal function(dWorldID) pfdWorldGetContactMaxCorrectingVel;
+extern(C) alias dReal function(dWorldID) pfdWorldGetContactMaxCorrectingVel;
 pfdWorldGetContactMaxCorrectingVel          dWorldGetContactMaxCorrectingVel;
 
 /**
@@ -278,7 +278,7 @@
  * Increasing this to some small value (e.g. 0.001) can help prevent
  * jittering problems due to contacts being repeatedly made and broken.
  */
-typedef void function(dWorldID, dReal depth) pfdWorldSetContactSurfaceLayer;
+extern(C) alias void function(dWorldID, dReal depth) pfdWorldSetContactSurfaceLayer;
 pfdWorldSetContactSurfaceLayer          dWorldSetContactSurfaceLayer;
 
 /**
@@ -286,7 +286,7 @@
  * @ingroup world
  * @returns the depth
  */
-typedef dReal function(dWorldID) pfdWorldGetContactSurfaceLayer;
+extern(C) alias dReal function(dWorldID) pfdWorldGetContactSurfaceLayer;
 pfdWorldGetContactSurfaceLayer          dWorldGetContactSurfaceLayer;
 
 /* StepFast1 functions */
@@ -297,7 +297,7 @@
  * @param maxiterations The number of iterations to perform.
  * @ingroup world
  */
-typedef void function(dWorldID, dReal stepsize, int maxiterations) pfdWorldStepFast1;
+extern(C) alias void function(dWorldID, dReal stepsize, int maxiterations) pfdWorldStepFast1;
 pfdWorldStepFast1          dWorldStepFast1;
 
 
@@ -336,14 +336,14 @@
  * @brief Set the AutoEnableDepth parameter used by the StepFast1 algorithm.
  * @ingroup disable
  */
-typedef void function(dWorldID, int autoEnableDepth) pfdWorldSetAutoEnableDepthSF1;
+extern(C) alias void function(dWorldID, int autoEnableDepth) pfdWorldSetAutoEnableDepthSF1;
 pfdWorldSetAutoEnableDepthSF1          dWorldSetAutoEnableDepthSF1;
 
 /**
  * @brief Get the AutoEnableDepth parameter used by the StepFast1 algorithm.
  * @ingroup disable
  */
-typedef int function(dWorldID) pfdWorldGetAutoEnableDepthSF1;
+extern(C) alias int function(dWorldID) pfdWorldGetAutoEnableDepthSF1;
 pfdWorldGetAutoEnableDepthSF1          dWorldGetAutoEnableDepthSF1;
 
 /**
@@ -351,7 +351,7 @@
  * @ingroup disable
  * @return the threshold
  */
-typedef dReal function(dWorldID) pfdWorldGetAutoDisableLinearThreshold;
+extern(C) alias dReal function(dWorldID) pfdWorldGetAutoDisableLinearThreshold;
 pfdWorldGetAutoDisableLinearThreshold          dWorldGetAutoDisableLinearThreshold;
 
 /**
@@ -359,7 +359,7 @@
  * @param linear_threshold default is 0.01
  * @ingroup disable
  */
-typedef void function(dWorldID, dReal linear_threshold) pfdWorldSetAutoDisableLinearThreshold;
+extern(C) alias void function(dWorldID, dReal linear_threshold) pfdWorldSetAutoDisableLinearThreshold;
 pfdWorldSetAutoDisableLinearThreshold          dWorldSetAutoDisableLinearThreshold;
 
 /**
@@ -367,7 +367,7 @@
  * @ingroup disable
  * @return the threshold
  */
-typedef dReal function(dWorldID) pfdWorldGetAutoDisableAngularThreshold;
+extern(C) alias dReal function(dWorldID) pfdWorldGetAutoDisableAngularThreshold;
 pfdWorldGetAutoDisableAngularThreshold          dWorldGetAutoDisableAngularThreshold;
 
 /**
@@ -375,7 +375,7 @@
  * @ingroup disable
  * @return the threshold
  */
-typedef dReal function(dWorldID) pfdWorldGetAutoDisableLinearAverageThreshold;
+extern(C) alias dReal function(dWorldID) pfdWorldGetAutoDisableLinearAverageThreshold;
 pfdWorldGetAutoDisableLinearAverageThreshold         dWorldGetAutoDisableLinearAverageThreshold;
 
 /**
@@ -383,7 +383,7 @@
  * @param linear_average_threshold default is 0.01
  * @ingroup disable
  */
-typedef void function(dWorldID, dReal linear_average_threshold) pfdWorldSetAutoDisableLinearAverageThreshold;
+extern(C) alias void function(dWorldID, dReal linear_average_threshold) pfdWorldSetAutoDisableLinearAverageThreshold;
 pfdWorldSetAutoDisableLinearAverageThreshold         dWorldSetAutoDisableLinearAverageThreshold;
 
 /**
@@ -391,7 +391,7 @@
  * @ingroup disable
  * @return the threshold
  */
-typedef dReal function(dWorldID) pfdWorldGetAutoDisableAngularAverageThreshold;
+extern(C) alias dReal function(dWorldID) pfdWorldGetAutoDisableAngularAverageThreshold;
 pfdWorldGetAutoDisableAngularAverageThreshold         dWorldGetAutoDisableAngularAverageThreshold;
 
 /**
@@ -399,7 +399,7 @@
  * @param linear_average_threshold default is 0.01
  * @ingroup disable
  */
-typedef void function(dWorldID, dReal angular_average_threshold) pfdWorldSetAutoDisableAngularAverageThreshold;
+extern(C) alias void function(dWorldID, dReal angular_average_threshold) pfdWorldSetAutoDisableAngularAverageThreshold;
 pfdWorldSetAutoDisableAngularAverageThreshold         dWorldSetAutoDisableAngularAverageThreshold;
 
 /**
@@ -407,7 +407,7 @@
  * @ingroup disable
  * @return number of samples used
  */
-typedef int function(dWorldID) pfdWorldGetAutoDisableAverageSamplesCount;
+extern(C) alias int function(dWorldID) pfdWorldGetAutoDisableAverageSamplesCount;
 pfdWorldGetAutoDisableAverageSamplesCount         dWorldGetAutoDisableAverageSamplesCount;
 
 /**
@@ -416,7 +416,7 @@
  * @param average_samples_count Default is 1, meaning only instantaneous velocity is used.
  * Set to zero to disable sampling and thus prevent any body from auto-disabling.
  */
-typedef void function(dWorldID, uint average_samples_count) pfdWorldSetAutoDisableAverageSamplesCount;
+extern(C) alias void function(dWorldID, uint average_samples_count) pfdWorldSetAutoDisableAverageSamplesCount;
 pfdWorldSetAutoDisableAverageSamplesCount         dWorldSetAutoDisableAverageSamplesCount;
 
 /**
@@ -424,7 +424,7 @@
  * @param linear_threshold default is 0.01
  * @ingroup disable
  */
-typedef void function(dWorldID, dReal angular_threshold) pfdWorldSetAutoDisableAngularThreshold;
+extern(C) alias void function(dWorldID, dReal angular_threshold) pfdWorldSetAutoDisableAngularThreshold;
 pfdWorldSetAutoDisableAngularThreshold          dWorldSetAutoDisableAngularThreshold;
 
 /**
@@ -432,7 +432,7 @@
  * @ingroup disable
  * @return nr of steps
  */
-typedef int function(dWorldID) pfdWorldGetAutoDisableSteps;
+extern(C) alias int function(dWorldID) pfdWorldGetAutoDisableSteps;
 pfdWorldGetAutoDisableSteps          dWorldGetAutoDisableSteps;
 
 /**
@@ -440,7 +440,7 @@
  * @ingroup disable
  * @param steps default is 10
  */
-typedef void function(dWorldID, int steps) pfdWorldSetAutoDisableSteps;
+extern(C) alias void function(dWorldID, int steps) pfdWorldSetAutoDisableSteps;
 pfdWorldSetAutoDisableSteps          dWorldSetAutoDisableSteps;
 
 /**
@@ -448,7 +448,7 @@
  * @ingroup disable
  * @return nr of seconds
  */
-typedef dReal function(dWorldID) pfdWorldGetAutoDisableTime;
+extern(C) alias dReal function(dWorldID) pfdWorldGetAutoDisableTime;
 pfdWorldGetAutoDisableTime          dWorldGetAutoDisableTime;
 
 /**
@@ -456,7 +456,7 @@
  * @ingroup disable
  * @param time default is 0 seconds
  */
-typedef void function(dWorldID, dReal time) pfdWorldSetAutoDisableTime;
+extern(C) alias void function(dWorldID, dReal time) pfdWorldSetAutoDisableTime;
 pfdWorldSetAutoDisableTime          dWorldSetAutoDisableTime;
 
 /**
@@ -464,7 +464,7 @@
  * @ingroup disable
  * @return 0 or 1
  */
-typedef int function(dWorldID) pfdWorldGetAutoDisableFlag;
+extern(C) alias int function(dWorldID) pfdWorldGetAutoDisableFlag;
 pfdWorldGetAutoDisableFlag          dWorldGetAutoDisableFlag;
 
 /**
@@ -472,7 +472,7 @@
  * @ingroup disable
  * @param do_auto_disable default is false.
  */
-typedef void function(dWorldID, int do_auto_disable) pfdWorldSetAutoDisableFlag;
+extern(C) alias void function(dWorldID, int do_auto_disable) pfdWorldSetAutoDisableFlag;
 pfdWorldSetAutoDisableFlag          dWorldSetAutoDisableFlag;
 
 
@@ -515,7 +515,7 @@
  * @ingroup bodies
  * @return the threshold
  */
-typedef dReal function(dBodyID) pfdBodyGetAutoDisableLinearThreshold;
+extern(C) alias dReal function(dBodyID) pfdBodyGetAutoDisableLinearThreshold;
 pfdBodyGetAutoDisableLinearThreshold          dBodyGetAutoDisableLinearThreshold;
 
 /**
@@ -523,7 +523,7 @@
  * @ingroup bodies
  * @return the threshold
  */
-typedef void function(dBodyID, dReal linear_average_threshold) pfdBodySetAutoDisableLinearThreshold;
+extern(C) alias void function(dBodyID, dReal linear_average_threshold) pfdBodySetAutoDisableLinearThreshold;
 pfdBodySetAutoDisableLinearThreshold          dBodySetAutoDisableLinearThreshold;
 
 /**
@@ -531,7 +531,7 @@
  * @ingroup bodies
  * @return the threshold
  */
-typedef dReal function(dBodyID) pfdBodyGetAutoDisableAngularThreshold;
+extern(C) alias dReal function(dBodyID) pfdBodyGetAutoDisableAngularThreshold;
 pfdBodyGetAutoDisableAngularThreshold          dBodyGetAutoDisableAngularThreshold;
 
 /**
@@ -539,7 +539,7 @@
  * @ingroup bodies
  * @return the threshold
  */
-typedef void function(dBodyID, dReal angular_average_threshold) pfdBodySetAutoDisableAngularThreshold;
+extern(C) alias void function(dBodyID, dReal angular_average_threshold) pfdBodySetAutoDisableAngularThreshold;
 pfdBodySetAutoDisableAngularThreshold          dBodySetAutoDisableAngularThreshold;
 
 /**
@@ -547,7 +547,7 @@
  * @ingroup bodies
  * @return the nr of steps/size.
  */
-typedef int function(dBodyID) pfdBodyGetAutoDisableAverageSamplesCount;
+extern(C) alias int function(dBodyID) pfdBodyGetAutoDisableAverageSamplesCount;
 pfdBodyGetAutoDisableAverageSamplesCount          dBodyGetAutoDisableAverageSamplesCount;
 
 /**
@@ -555,7 +555,7 @@
  * @ingroup bodies
  * @param average_samples_count the nr of samples to review.
  */
-typedef void function(dBodyID, uint average_samples_count) pfdBodySetAutoDisableAverageSamplesCount;
+extern(C) alias void function(dBodyID, uint average_samples_count) pfdBodySetAutoDisableAverageSamplesCount;
 pfdBodySetAutoDisableAverageSamplesCount          dBodySetAutoDisableAverageSamplesCount;
 
 /**
@@ -563,7 +563,7 @@
  * @ingroup bodies
  * @return the nr of steps
  */
-typedef int function(dBodyID) pfdBodyGetAutoDisableSteps;
+extern(C) alias int function(dBodyID) pfdBodyGetAutoDisableSteps;
 pfdBodyGetAutoDisableSteps          dBodyGetAutoDisableSteps;
 
 /**
@@ -571,7 +571,7 @@
  * @ingroup bodies
  * @param steps the nr of steps.
  */
-typedef void function(dBodyID, int steps) pfdBodySetAutoDisableSteps;
+extern(C) alias void function(dBodyID, int steps) pfdBodySetAutoDisableSteps;
 pfdBodySetAutoDisableSteps          dBodySetAutoDisableSteps;
 
 /**
@@ -579,7 +579,7 @@
  * @ingroup bodies
  * @return nr of seconds
  */
-typedef dReal function(dBodyID) pfdBodyGetAutoDisableTime;
+extern(C) alias dReal function(dBodyID) pfdBodyGetAutoDisableTime;
 pfdBodyGetAutoDisableTime          dBodyGetAutoDisableTime;
 
 /**
@@ -587,7 +587,7 @@
  * @ingroup bodies
  * @param time nr of seconds.
  */
-typedef void function(dBodyID, dReal time) pfdBodySetAutoDisableTime;
+extern(C) alias void function(dBodyID, dReal time) pfdBodySetAutoDisableTime;
 pfdBodySetAutoDisableTime          dBodySetAutoDisableTime;
 
 /**
@@ -595,7 +595,7 @@
  * @ingroup bodies
  * @return 0 or 1
  */
-typedef int function(dBodyID) pfdBodyGetAutoDisableFlag;
+extern(C) alias int function(dBodyID) pfdBodyGetAutoDisableFlag;
 pfdBodyGetAutoDisableFlag          dBodyGetAutoDisableFlag;
 
 /**
@@ -603,7 +603,7 @@
  * @ingroup bodies
  * @param do_auto_disable 0 or 1
  */
-typedef void function(dBodyID, int do_auto_disable) pfdBodySetAutoDisableFlag;
+extern(C) alias void function(dBodyID, int do_auto_disable) pfdBodySetAutoDisableFlag;
 pfdBodySetAutoDisableFlag          dBodySetAutoDisableFlag;
 
 /**
@@ -612,7 +612,7 @@
  * Set the values for the body to those set as default for the world.
  * @ingroup bodies
  */
-typedef void function(dBodyID) pfdBodySetAutoDisableDefaults;
+extern(C) alias void function(dBodyID) pfdBodySetAutoDisableDefaults;
 pfdBodySetAutoDisableDefaults          dBodySetAutoDisableDefaults;
 
 /**
@@ -621,7 +621,7 @@
  *
  * @ingroup bodies
  */
-typedef dWorldID function(dBodyID) pfdBodyGetWorld;
+extern(C) alias dWorldID function(dBodyID) pfdBodyGetWorld;
 pfdBodyGetWorld          dBodyGetWorld;
 
 
@@ -631,7 +631,7 @@
  * Default mass parameters are at position (0,0,0).
  * @ingroup bodies
  */
-typedef dBodyID function(dWorldID) pfdBodyCreate;
+extern(C) alias dBodyID function(dWorldID) pfdBodyCreate;
 pfdBodyCreate          dBodyCreate;
 
 /**
@@ -642,7 +642,7 @@
  * deleted.
  * @ingroup bodies
  */
-typedef void function(dBodyID) pfdBodyDestroy;
+extern(C) alias void function(dBodyID) pfdBodyDestroy;
 pfdBodyDestroy          dBodyDestroy;
 
 /**
@@ -650,7 +650,7 @@
  * @ingroup bodies
  * @param data arbitraty pointer
  */
-typedef void function(dBodyID, void *data) pfdBodySetData;
+extern(C) alias void function(dBodyID, void *data) pfdBodySetData;
 pfdBodySetData          dBodySetData;
 
 /**
@@ -658,7 +658,7 @@
  * @ingroup bodies
  * @return a pointer to the user's data.
  */
-typedef void* function(dBodyID) pfdBodyGetData;
+extern(C) alias void* function(dBodyID) pfdBodyGetData;
 pfdBodyGetData          dBodyGetData;
 
 /**
@@ -669,7 +669,7 @@
  * that are present.
  * @ingroup bodies
  */
-typedef void function(dBodyID, dReal x, dReal y, dReal z) pfdBodySetPosition;
+extern(C) alias void function(dBodyID, dReal x, dReal y, dReal z) pfdBodySetPosition;
 pfdBodySetPosition          dBodySetPosition;
 
 /**
@@ -680,7 +680,7 @@
  * if the new configuration is inconsistent with the joints/constraints
  * that are present.
  */
-typedef void function(dBodyID, dMatrix3 R) pfdBodySetRotation;
+extern(C) alias void function(dBodyID, dMatrix3 R) pfdBodySetRotation;
 pfdBodySetRotation          dBodySetRotation;
 
 /**
@@ -691,21 +691,21 @@
  * if the new configuration is inconsistent with the joints/constraints
  * that are present.
  */
-typedef void function(dBodyID, dQuaternion q) pfdBodySetQuaternion;
+extern(C) alias void function(dBodyID, dQuaternion q) pfdBodySetQuaternion;
 pfdBodySetQuaternion          dBodySetQuaternion;
 
 /**
  * @brief Set the linear velocity of a body.
  * @ingroup bodies
  */
-typedef void function(dBodyID, dReal x, dReal y, dReal z) pfdBodySetLinearVel;
+extern(C) alias void function(dBodyID, dReal x, dReal y, dReal z) pfdBodySetLinearVel;
 pfdBodySetLinearVel          dBodySetLinearVel;
 
 /**
  * @brief Set the angular velocity of a body.
  * @ingroup bodies
  */
-typedef void function(dBodyID, dReal x, dReal y, dReal z) pfdBodySetAngularVel;
+extern(C) alias void function(dBodyID, dReal x, dReal y, dReal z) pfdBodySetAngularVel;
 pfdBodySetAngularVel          dBodySetAngularVel;
 
 /**
@@ -717,7 +717,7 @@
  * system structure.
  * @sa dBodyCopyPosition
  */
-typedef dReal* function(dBodyID) pfdBodyGetPosition;
+extern(C) alias dReal* function(dBodyID) pfdBodyGetPosition;
 pfdBodyGetPosition          dBodyGetPosition;
 
 
@@ -728,7 +728,7 @@
  * @param pos   a copy of the body position
  * @sa dBodyGetPosition
  */
-typedef void function(dBodyID bodyid, dVector3 pos) pfdBodyCopyPosition;
+extern(C) alias void function(dBodyID bodyid, dVector3 pos) pfdBodyCopyPosition;
 pfdBodyCopyPosition          dBodyCopyPosition;
 
 
@@ -737,7 +737,7 @@
  * @ingroup bodies
  * @return pointer to a 4x3 rotation matrix.
  */
-typedef dReal* function(dBodyID) pfdBodyGetRotation;
+extern(C) alias dReal* function(dBodyID) pfdBodyGetRotation;
 pfdBodyGetRotation          dBodyGetRotation;
 
 /**
@@ -747,7 +747,7 @@
  * @param R      a copy of the rotation matrix
  * @sa dBodyGetRotation
  */
-typedef void function(dBodyID, dMatrix3 R) pfdBodyCopyRotation;
+extern(C) alias void function(dBodyID, dMatrix3 R) pfdBodyCopyRotation;
 pfdBodyCopyRotation          dBodyCopyRotation;
 
 /**
@@ -755,7 +755,7 @@
  * @ingroup bodies
  * @return pointer to 4 scalars that represent the quaternion.
  */
-typedef dReal* function(dBodyID) pfdBodyGetQuaternion;
+extern(C) alias dReal* function(dBodyID) pfdBodyGetQuaternion;
 pfdBodyGetQuaternion          dBodyGetQuaternion;
 
 
@@ -766,7 +766,7 @@
  * @param quat  a copy of the orientation quaternion
  * @sa dBodyGetQuaternion
  */
-typedef void function(dBodyID bodyid, dQuaternion quat) pfdBodyCopyQuaternion;
+extern(C) alias void function(dBodyID bodyid, dQuaternion quat) pfdBodyCopyQuaternion;
 pfdBodyCopyQuaternion          dBodyCopyQuaternion;
 
 
@@ -774,84 +774,84 @@
  * @brief Get the linear velocity of a body.
  * @ingroup bodies
  */
-typedef dReal* function(dBodyID) pfdBodyGetLinearVel;
+extern(C) alias dReal* function(dBodyID) pfdBodyGetLinearVel;
 pfdBodyGetLinearVel          dBodyGetLinearVel;
 
 /**
  * @brief Get the angular velocity of a body.
  * @ingroup bodies
  */
-typedef dReal* function(dBodyID) pfdBodyGetAngularVel;
+extern(C) alias dReal* function(dBodyID) pfdBodyGetAngularVel;
 pfdBodyGetAngularVel          dBodyGetAngularVel;
 
 /**
  * @brief Set the mass of a body.
  * @ingroup bodies
  */
-typedef void function(dBodyID, dMass* mass) pfdBodySetMass;
+extern(C) alias void function(dBodyID, dMass* mass) pfdBodySetMass;
 pfdBodySetMass          dBodySetMass;
 
 /**
  * @brief Get the mass of a body.
  * @ingroup bodies
  */
-typedef void function(dBodyID, dMass* mass) pfdBodyGetMass;
+extern(C) alias void function(dBodyID, dMass* mass) pfdBodyGetMass;
 pfdBodyGetMass          dBodyGetMass;
 
 /**
  * @brief Add force at centre of mass of body in absolute coordinates.
  * @ingroup bodies
  */
-typedef void function(dBodyID, dReal fx, dReal fy, dReal fz) pfdBodyAddForce;
+extern(C) alias void function(dBodyID, dReal fx, dReal fy, dReal fz) pfdBodyAddForce;
 pfdBodyAddForce          dBodyAddForce;
 
 /**
  * @brief Add torque at centre of mass of body in absolute coordinates.
  * @ingroup bodies
  */
-typedef void function(dBodyID, dReal fx, dReal fy, dReal fz) pfdBodyAddTorque;
+extern(C) alias void function(dBodyID, dReal fx, dReal fy, dReal fz) pfdBodyAddTorque;
 pfdBodyAddTorque          dBodyAddTorque;
 
 /**
  * @brief Add force at centre of mass of body in coordinates relative to body.
  * @ingroup bodies
  */
-typedef void function(dBodyID, dReal fx, dReal fy, dReal fz) pfdBodyAddRelForce;
+extern(C) alias void function(dBodyID, dReal fx, dReal fy, dReal fz) pfdBodyAddRelForce;
 pfdBodyAddRelForce          dBodyAddRelForce;
 
 /**
  * @brief Add torque at centre of mass of body in coordinates relative to body.
  * @ingroup bodies
  */
-typedef void function(dBodyID, dReal fx, dReal fy, dReal fz) pfdBodyAddRelTorque;
+extern(C) alias void function(dBodyID, dReal fx, dReal fy, dReal fz) pfdBodyAddRelTorque;
 pfdBodyAddRelTorque          dBodyAddRelTorque;
 
 /**
  * @brief Add force at specified point in body in global coordinates.
  * @ingroup bodies
  */
-typedef void function(dBodyID, dReal fx, dReal fy, dReal fz, dReal px, dReal py, dReal pz) pfdBodyAddForceAtPos;
+extern(C) alias void function(dBodyID, dReal fx, dReal fy, dReal fz, dReal px, dReal py, dReal pz) pfdBodyAddForceAtPos;
 pfdBodyAddForceAtPos          dBodyAddForceAtPos;
 
 /**
  * @brief Add force at specified point in body in local coordinates.
  * @ingroup bodies
  */
-typedef void function(dBodyID, dReal fx, dReal fy, dReal fz, dReal px, dReal py, dReal pz) pfdBodyAddForceAtRelPos;
+extern(C) alias void function(dBodyID, dReal fx, dReal fy, dReal fz, dReal px, dReal py, dReal pz) pfdBodyAddForceAtRelPos;
 pfdBodyAddForceAtRelPos          dBodyAddForceAtRelPos;
 
 /**
  * @brief Add force at specified point in body in global coordinates.
  * @ingroup bodies
  */
-typedef void function(dBodyID, dReal fx, dReal fy, dReal fz, dReal px, dReal py, dReal pz) pfdBodyAddRelForceAtPos;
+extern(C) alias void function(dBodyID, dReal fx, dReal fy, dReal fz, dReal px, dReal py, dReal pz) pfdBodyAddRelForceAtPos;
 pfdBodyAddRelForceAtPos          dBodyAddRelForceAtPos;
 
 /**
  * @brief Add force at specified point in body in local coordinates.
  * @ingroup bodies
  */
-typedef void function(dBodyID, dReal fx, dReal fy, dReal fz, dReal px, dReal py, dReal pz) pfdBodyAddRelForceAtRelPos;
+extern(C) alias void function(dBodyID, dReal fx, dReal fy, dReal fz, dReal px, dReal py, dReal pz) pfdBodyAddRelForceAtRelPos;
 pfdBodyAddRelForceAtRelPos          dBodyAddRelForceAtRelPos;
 
 /**
@@ -863,7 +863,7 @@
  * body system.
  * @ingroup bodies
  */
-typedef dReal* function(dBodyID) pfdBodyGetForce;
+extern(C) alias dReal* function(dBodyID) pfdBodyGetForce;
 pfdBodyGetForce          dBodyGetForce;
 
 /**
@@ -875,7 +875,7 @@
  * body system.
  * @ingroup bodies
  */
-typedef dReal* function(dBodyID) pfdBodyGetTorque;
+extern(C) alias dReal* function(dBodyID) pfdBodyGetTorque;
 pfdBodyGetTorque          dBodyGetTorque;
 
 /**
@@ -886,7 +886,7 @@
  * were called on them while they were deactivated.
  * @ingroup bodies
  */
-typedef void function(dBodyID b, dReal x, dReal y, dReal z) pfdBodySetForce;
+extern(C) alias void function(dBodyID b, dReal x, dReal y, dReal z) pfdBodySetForce;
 pfdBodySetForce          dBodySetForce;
 
 /**
@@ -897,7 +897,7 @@
  * were called on them while they were deactivated.
  * @ingroup bodies
  */
-typedef void function(dBodyID b, dReal x, dReal y, dReal z) pfdBodySetTorque;
+extern(C) alias void function(dBodyID b, dReal x, dReal y, dReal z) pfdBodySetTorque;
 pfdBodySetTorque          dBodySetTorque;
 
 /**
@@ -905,7 +905,7 @@
  * @ingroup bodies
  * @param result will contain the result.
  */
-typedef void function(dBodyID, dReal px, dReal py, dReal pz, dVector3 result) pfdBodyGetRelPointPos;
+extern(C) alias void function(dBodyID, dReal px, dReal py, dReal pz, dVector3 result) pfdBodyGetRelPointPos;
 pfdBodyGetRelPointPos          dBodyGetRelPointPos;
 
 /**
@@ -913,7 +913,7 @@
  * @ingroup bodies
  * @param result will contain the result.
  */
-typedef void function(dBodyID, dReal px, dReal py, dReal pz, dVector3 result) pfdBodyGetRelPointVel;
+extern(C) alias void function(dBodyID, dReal px, dReal py, dReal pz, dVector3 result) pfdBodyGetRelPointVel;
 pfdBodyGetRelPointVel          dBodyGetRelPointVel;
 
 /**
@@ -922,7 +922,7 @@
  * @ingroup bodies
  * @param result will contain the result.
  */
-typedef void function(dBodyID, dReal px, dReal py, dReal pz, dVector3 result) pfdBodyGetPointVel;
+extern(C) alias void function(dBodyID, dReal px, dReal py, dReal pz, dVector3 result) pfdBodyGetPointVel;
 pfdBodyGetPointVel          dBodyGetPointVel;
 
 /**
@@ -933,7 +933,7 @@
  * @ingroup bodies
  * @param result will contain the result.
  */
-typedef void function(dBodyID, dReal px, dReal py, dReal pz, dVector3 result) pfdBodyGetPosRelPoint;
+extern(C) alias void function(dBodyID, dReal px, dReal py, dReal pz, dVector3 result) pfdBodyGetPosRelPoint;
 pfdBodyGetPosRelPoint          dBodyGetPosRelPoint;
 
 /**
@@ -941,7 +941,7 @@
  * @ingroup bodies
  * @param result will contain the result.
  */
-typedef void function(dBodyID, dReal px, dReal py, dReal pz, dVector3 result) pfdBodyVectorToWorld;
+extern(C) alias void function(dBodyID, dReal px, dReal py, dReal pz, dVector3 result) pfdBodyVectorToWorld;
 pfdBodyVectorToWorld          dBodyVectorToWorld;
 
 /**
@@ -949,7 +949,7 @@
  * @ingroup bodies
  * @param result will contain the result.
  */
-typedef void function(dBodyID, dReal px, dReal py, dReal pz, dVector3 result) pfdBodyVectorFromWorld;
+extern(C) alias void function(dBodyID, dReal px, dReal py, dReal pz, dVector3 result) pfdBodyVectorFromWorld;
 pfdBodyVectorFromWorld          dBodyVectorFromWorld;
 
 /**
@@ -969,7 +969,7 @@
  * error in a simulation, and the finite mode will only fix one of those
  * sources of error.
  */
-typedef void function(dBodyID, int mode) pfdBodySetFiniteRotationMode;
+extern(C) alias void function(dBodyID, int mode) pfdBodySetFiniteRotationMode;
 pfdBodySetFiniteRotationMode          dBodySetFiniteRotationMode;
 
 /**
@@ -988,7 +988,7 @@
  * you can call this function with the wheel's hinge axis as the argument to
  * try and improve its behavior.
  */
-typedef void function(dBodyID, dReal x, dReal y, dReal z) pfdBodySetFiniteRotationAxis;
+extern(C) alias void function(dBodyID, dReal x, dReal y, dReal z) pfdBodySetFiniteRotationAxis;
 pfdBodySetFiniteRotationAxis          dBodySetFiniteRotationAxis;
 
 /**
@@ -996,7 +996,7 @@
  * @ingroup bodies
  * @return the mode 0 (infitesimal) or 1 (finite).
  */
-typedef int function(dBodyID) pfdBodyGetFiniteRotationMode;
+extern(C) alias int function(dBodyID) pfdBodyGetFiniteRotationMode;
 pfdBodyGetFiniteRotationMode          dBodyGetFiniteRotationMode;
 
 /**
@@ -1004,7 +1004,7 @@
  * @param result will contain the axis.
  * @ingroup bodies
  */
-typedef void function(dBodyID, dVector3 result) pfdBodyGetFiniteRotationAxis;
+extern(C) alias void function(dBodyID, dVector3 result) pfdBodyGetFiniteRotationAxis;
 pfdBodyGetFiniteRotationAxis          dBodyGetFiniteRotationAxis;
 
 /**
@@ -1012,7 +1012,7 @@
  * @ingroup bodies
  * @return nr of joints
  */
-typedef int function(dBodyID b) pfdBodyGetNumJoints;
+extern(C) alias int function(dBodyID b) pfdBodyGetNumJoints;
 pfdBodyGetNumJoints          dBodyGetNumJoints;
 
 /**
@@ -1021,7 +1021,7 @@
  * @param index valid range is  0 to n-1 where n is the value returned by
  * dBodyGetNumJoints().
  */
-typedef dJointID function(dBodyID, int index) pfdBodyGetJoint;
+extern(C) alias dJointID function(dBodyID, int index) pfdBodyGetJoint;
 pfdBodyGetJoint          dBodyGetJoint;
 
 /**
@@ -1029,7 +1029,7 @@
  * @param dBodyID identification of body.
  * @ingroup bodies
  */
-typedef void function(dBodyID) pfdBodyEnable;
+extern(C) alias void function(dBodyID) pfdBodyEnable;
 pfdBodyEnable          dBodyEnable;
 
 /**
@@ -1039,7 +1039,7 @@
  * A disabled body that is connected through a joint to an enabled body will
  * be automatically re-enabled at the next simulation step.
  */
-typedef void function(dBodyID) pfdBodyDisable;
+extern(C) alias void function(dBodyID) pfdBodyDisable;
 pfdBodyDisable          dBodyDisable;
 
 /**
@@ -1047,7 +1047,7 @@
  * @ingroup bodies
  * @return 1 if a body is currently enabled or 0 if it is disabled.
  */
-typedef int function(dBodyID) pfdBodyIsEnabled;
+extern(C) alias int function(dBodyID) pfdBodyIsEnabled;
 pfdBodyIsEnabled          dBodyIsEnabled;
 
 /**
@@ -1057,7 +1057,7 @@
  * @remarks
  * Newly created bodies are always influenced by the world's gravity.
  */
-typedef void function(dBodyID b, int mode) pfdBodySetGravityMode;
+extern(C) alias void function(dBodyID b, int mode) pfdBodySetGravityMode;
 pfdBodySetGravityMode          dBodySetGravityMode;
 
 /**
@@ -1065,7 +1065,7 @@
  * @ingroup bodies
  * @return nonzero means gravity affects this body.
  */
-typedef int function(dBodyID b) pfdBodyGetGravityMode;
+extern(C) alias int function(dBodyID b) pfdBodyGetGravityMode;
 pfdBodyGetGravityMode          dBodyGetGravityMode;
 
 
@@ -1145,7 +1145,7 @@
  * @param dJointGroupID set to 0 to allocate the joint normally.
  * If it is nonzero the joint is allocated in the given joint group.
  */
-typedef dJointID function(dWorldID, dJointGroupID) pfdJointCreateBall;
+extern(C) alias dJointID function(dWorldID, dJointGroupID) pfdJointCreateBall;
 pfdJointCreateBall          dJointCreateBall;
 
 /**
@@ -1154,7 +1154,7 @@
  * @param dJointGroupID set to 0 to allocate the joint normally.
  * If it is nonzero the joint is allocated in the given joint group.
  */
-typedef dJointID function(dWorldID, dJointGroupID) pfdJointCreateHinge;
+extern(C) alias dJointID function(dWorldID, dJointGroupID) pfdJointCreateHinge;
 pfdJointCreateHinge          dJointCreateHinge;
 
 /**
@@ -1163,7 +1163,7 @@
  * @param dJointGroupID set to 0 to allocate the joint normally.
  * If it is nonzero the joint is allocated in the given joint group.
  */
-typedef dJointID function(dWorldID, dJointGroupID) pfdJointCreateSlider;
+extern(C) alias dJointID function(dWorldID, dJointGroupID) pfdJointCreateSlider;
 pfdJointCreateSlider          dJointCreateSlider;
 
 /**
@@ -1172,7 +1172,7 @@
  * @param dJointGroupID set to 0 to allocate the joint normally.
  * If it is nonzero the joint is allocated in the given joint group.
  */
-typedef dJointID function(dWorldID, dJointGroupID, dContact*) pfdJointCreateContact;
+extern(C) alias dJointID function(dWorldID, dJointGroupID, dContact*) pfdJointCreateContact;
 pfdJointCreateContact          dJointCreateContact;
 
 /**
@@ -1181,7 +1181,7 @@
  * @param dJointGroupID set to 0 to allocate the joint normally.
  * If it is nonzero the joint is allocated in the given joint group.
  */
-typedef dJointID function(dWorldID, dJointGroupID) pfdJointCreateHinge2;
+extern(C) alias dJointID function(dWorldID, dJointGroupID) pfdJointCreateHinge2;
 pfdJointCreateHinge2          dJointCreateHinge2;
 
 /**
@@ -1190,7 +1190,7 @@
  * @param dJointGroupID set to 0 to allocate the joint normally.
  * If it is nonzero the joint is allocated in the given joint group.
  */
-typedef dJointID function(dWorldID, dJointGroupID) pfdJointCreateUniversal;
+extern(C) alias dJointID function(dWorldID, dJointGroupID) pfdJointCreateUniversal;
 pfdJointCreateUniversal          dJointCreateUniversal;
 
 /**
@@ -1199,7 +1199,7 @@
  * @param dJointGroupID set to 0 to allocate the joint normally.
  * If it is nonzero the joint is allocated in the given joint group.
  */
-typedef dJointID function(dWorldID, dJointGroupID) pfdJointCreatePR;
+extern(C) alias dJointID function(dWorldID, dJointGroupID) pfdJointCreatePR;
 pfdJointCreatePR          dJointCreatePR;
 
 /**
@@ -1208,10 +1208,10 @@
  * @param dJointGroupID set to 0 to allocate the joint normally.
  * If it is nonzero the joint is allocated in the given joint group.
  */
-typedef dJointID function(dWorldID, dJointGroupID) pfdJointCreateFixed;
+extern(C) alias dJointID function(dWorldID, dJointGroupID) pfdJointCreateFixed;
 pfdJointCreateFixed          dJointCreateFixed;
 
-typedef dJointID function(dWorldID, dJointGroupID) pfdJointCreateNull;
+extern(C) alias dJointID function(dWorldID, dJointGroupID) pfdJointCreateNull;
 pfdJointCreateNull          dJointCreateNull;
 
 /**
@@ -1220,7 +1220,7 @@
  * @param dJointGroupID set to 0 to allocate the joint normally.
  * If it is nonzero the joint is allocated in the given joint group.
  */
-typedef dJointID function(dWorldID, dJointGroupID) pfdJointCreateAMotor;
+extern(C) alias dJointID function(dWorldID, dJointGroupID) pfdJointCreateAMotor;
 pfdJointCreateAMotor          dJointCreateAMotor;
 
 /**
@@ -1229,7 +1229,7 @@
  * @param dJointGroupID set to 0 to allocate the joint normally.
  * If it is nonzero the joint is allocated in the given joint group.
  */
-typedef dJointID function(dWorldID, dJointGroupID) pfdJointCreateLMotor;
+extern(C) alias dJointID function(dWorldID, dJointGroupID) pfdJointCreateLMotor;
 pfdJointCreateLMotor          dJointCreateLMotor;
 
 /**
@@ -1238,7 +1238,7 @@
  * @param dJointGroupID set to 0 to allocate the joint normally.
  * If it is nonzero the joint is allocated in the given joint group.
  */
-typedef dJointID function(dWorldID, dJointGroupID) pfdJointCreatePlane2D;
+extern(C) alias dJointID function(dWorldID, dJointGroupID) pfdJointCreatePlane2D;
 pfdJointCreatePlane2D          dJointCreatePlane2D;
 
 /**
@@ -1249,7 +1249,7 @@
  * However, if the joint is a member of a group then this function has no
  * effect - to destroy that joint the group must be emptied or destroyed.
  */
-typedef void function(dJointID) pfdJointDestroy;
+extern(C) alias void function(dJointID) pfdJointDestroy;
 pfdJointDestroy          dJointDestroy;
 
 
@@ -1258,7 +1258,7 @@
  * @ingroup joints
  * @param max_size deprecated. Set to 0.
  */
-typedef dJointGroupID function(int max_size) pfdJointGroupCreate;
+extern(C) alias dJointGroupID function(int max_size) pfdJointGroupCreate;
 pfdJointGroupCreate          dJointGroupCreate;
 
 /**
@@ -1267,7 +1267,7 @@
  *
  * All joints in the joint group will be destroyed.
  */
-typedef void function(dJointGroupID) pfdJointGroupDestroy;
+extern(C) alias void function(dJointGroupID) pfdJointGroupDestroy;
 pfdJointGroupDestroy          dJointGroupDestroy;
 
 /**
@@ -1277,7 +1277,7 @@
  * All joints in the joint group will be destroyed,
  * but the joint group itself will not be destroyed.
  */
-typedef void function(dJointGroupID) pfdJointGroupEmpty;
+extern(C) alias void function(dJointGroupID) pfdJointGroupEmpty;
 pfdJointGroupEmpty          dJointGroupEmpty;
 
 /**
@@ -1293,21 +1293,21 @@
  * @remarks
  * Some joints, like hinge-2 need to be attached to two bodies to work.
  */
-typedef void function(dJointID, dBodyID body1, dBodyID body2) pfdJointAttach;
+extern(C) alias void function(dJointID, dBodyID body1, dBodyID body2) pfdJointAttach;
 pfdJointAttach          dJointAttach;
 
 /**
  * @brief Set the user-data pointer
  * @ingroup joints
  */
-typedef void function(dJointID, void *data) pfdJointSetData;
+extern(C) alias void function(dJointID, void *data) pfdJointSetData;
 pfdJointSetData          dJointSetData;
 
 /**
  * @brief Get the user-data pointer
  * @ingroup joints
  */
-typedef void* function(dJointID) pfdJointGetData;
+extern(C) alias void* function(dJointID) pfdJointGetData;
 pfdJointGetData          dJointGetData;
 
 /**
@@ -1324,7 +1324,7 @@
  * \li JointTypeAMotor
  * \li JointTypeLMotor
  */
-typedef int function(dJointID) pfdJointGetType;
+extern(C) alias int function(dJointID) pfdJointGetType;
 pfdJointGetType          dJointGetType;
 
 /**
@@ -1337,7 +1337,7 @@
  * If both body IDs are zero, the joint is in ``limbo'' and has no effect on
  * the simulation.
  */
-typedef dBodyID function(dJointID, int index) pfdJointGetBody;
+extern(C) alias dBodyID function(dJointID, int index) pfdJointGetBody;
 pfdJointGetBody          dJointGetBody;
 
 /**
@@ -1347,14 +1347,14 @@
  * much force an individual joint exerts.
  * @ingroup joints
  */
-typedef void function(dJointID, dJointFeedback *) pfdJointSetFeedback;
+extern(C) alias void function(dJointID, dJointFeedback *) pfdJointSetFeedback;
 pfdJointSetFeedback          dJointSetFeedback;
 
 /**
  * @brief Gets the datastructure that is to receive the feedback.
  * @ingroup joints
  */
-typedef dJointFeedback* function(dJointID) pfdJointGetFeedback;
+extern(C) alias dJointFeedback* function(dJointID) pfdJointGetFeedback;
 pfdJointGetFeedback          dJointGetFeedback;
 
 /**
@@ -1364,38 +1364,38 @@
  * The joint will try to keep this point on each body
  * together. The input is specified in world coordinates.
  */
-typedef void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetBallAnchor;
+extern(C) alias void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetBallAnchor;
 pfdJointSetBallAnchor          dJointSetBallAnchor;
 
 /**
  * @brief Set the joint anchor point.
  * @ingroup joints
  */
-typedef void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetBallAnchor2;
+extern(C) alias void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetBallAnchor2;
 pfdJointSetBallAnchor2          dJointSetBallAnchor2;
 
 /**
  * @brief Set hinge anchor parameter.
  * @ingroup joints
  */
-typedef void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetHingeAnchor;
+extern(C) alias void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetHingeAnchor;
 pfdJointSetHingeAnchor          dJointSetHingeAnchor;
 
-typedef void function(dJointID, dReal x, dReal y, dReal z, dReal ax, dReal ay, dReal az) pfdJointSetHingeAnchorDelta;
+extern(C) alias void function(dJointID, dReal x, dReal y, dReal z, dReal ax, dReal ay, dReal az) pfdJointSetHingeAnchorDelta;
 pfdJointSetHingeAnchorDelta          dJointSetHingeAnchorDelta;
 
 /**
  * @brief Set hinge axis.
  * @ingroup joints
  */
-typedef void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetHingeAxis;
+extern(C) alias void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetHingeAxis;
 pfdJointSetHingeAxis          dJointSetHingeAxis;
 
 /**
  * @brief set joint parameter
  * @ingroup joints
  */
-typedef void function(dJointID, int parameter, dReal value) pfdJointSetHingeParam;
+extern(C) alias void function(dJointID, int parameter, dReal value) pfdJointSetHingeParam;
 pfdJointSetHingeParam          dJointSetHingeParam;
 
 /**
@@ -1406,27 +1406,27 @@
  * direction to body 2. This function is just a wrapper for dBodyAddTorque()}
  * @ingroup joints
  */
-typedef void function(dJointID joint, dReal torque) pfdJointAddHingeTorque;
+extern(C) alias void function(dJointID joint, dReal torque) pfdJointAddHingeTorque;
 pfdJointAddHingeTorque          dJointAddHingeTorque;
 
 /**
  * @brief set the joint axis
  * @ingroup joints
  */
-typedef void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetSliderAxis;
+extern(C) alias void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetSliderAxis;
 pfdJointSetSliderAxis          dJointSetSliderAxis;
 
 /**
  * @ingroup joints
  */
-typedef void function(dJointID, dReal x, dReal y, dReal z, dReal ax, dReal ay, dReal az) pfdJointSetSliderAxisDelta;
+extern(C) alias void function(dJointID, dReal x, dReal y, dReal z, dReal ax, dReal ay, dReal az) pfdJointSetSliderAxisDelta;
 pfdJointSetSliderAxisDelta          dJointSetSliderAxisDelta;
 
 /**
  * @brief set joint parameter
  * @ingroup joints
  */
-typedef void function(dJointID, int parameter, dReal value) pfdJointSetSliderParam;
+extern(C) alias void function(dJointID, int parameter, dReal value) pfdJointSetSliderParam;
 pfdJointSetSliderParam          dJointSetSliderParam;
 
 /**
@@ -1437,35 +1437,35 @@
  * direction to body2.  This function is just a wrapper for dBodyAddForce().
  * @ingroup joints
  */
-typedef void function(dJointID joint, dReal force) pfdJointAddSliderForce;
+extern(C) alias void function(dJointID joint, dReal force) pfdJointAddSliderForce;
 pfdJointAddSliderForce          dJointAddSliderForce;
 
 /**
  * @brief set anchor
  * @ingroup joints
  */
-typedef void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetHinge2Anchor;
+extern(C) alias void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetHinge2Anchor;
 pfdJointSetHinge2Anchor          dJointSetHinge2Anchor;
 
 /**
  * @brief set axis
  * @ingroup joints
  */
-typedef void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetHinge2Axis1;
+extern(C) alias void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetHinge2Axis1;
 pfdJointSetHinge2Axis1          dJointSetHinge2Axis1;
 
 /**
  * @brief set axis
  * @ingroup joints
  */
-typedef void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetHinge2Axis2;
+extern(C) alias void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetHinge2Axis2;
 pfdJointSetHinge2Axis2          dJointSetHinge2Axis2;
 
 /**
  * @brief set joint parameter
  * @ingroup joints
  */
-typedef void function(dJointID, int parameter, dReal value) pfdJointSetHinge2Param;
+extern(C) alias void function(dJointID, int parameter, dReal value) pfdJointSetHinge2Param;
 pfdJointSetHinge2Param          dJointSetHinge2Param;
 
 /**
@@ -1474,35 +1474,35 @@
  * @remarks  This function is just a wrapper for dBodyAddTorque().
  * @ingroup joints
  */
-typedef void function(dJointID joint, dReal torque1, dReal torque2) pfdJointAddHinge2Torques;
+extern(C) alias void function(dJointID joint, dReal torque1, dReal torque2) pfdJointAddHinge2Torques;
 pfdJointAddHinge2Torques          dJointAddHinge2Torques;
 
 /**
  * @brief set anchor
  * @ingroup joints
  */
-typedef void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetUniversalAnchor;
+extern(C) alias void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetUniversalAnchor;
 pfdJointSetUniversalAnchor          dJointSetUniversalAnchor;
 
 /**
  * @brief set axis
  * @ingroup joints
  */
-typedef void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetUniversalAxis1;
+extern(C) alias void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetUniversalAxis1;
 pfdJointSetUniversalAxis1          dJointSetUniversalAxis1;
 
 /**
  * @brief set axis
  * @ingroup joints
  */
-typedef void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetUniversalAxis2;
+extern(C) alias void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetUniversalAxis2;
 pfdJointSetUniversalAxis2          dJointSetUniversalAxis2;
 
 /**
  * @brief set joint parameter
  * @ingroup joints
  */
-typedef void function(dJointID, int parameter, dReal value) pfdJointSetUniversalParam;
+extern(C) alias void function(dJointID, int parameter, dReal value) pfdJointSetUniversalParam;
 pfdJointSetUniversalParam          dJointSetUniversalParam;
 
 /**
@@ -1511,28 +1511,28 @@
  * @remarks This function is just a wrapper for dBodyAddTorque().
  * @ingroup joints
  */
-typedef void function(dJointID joint, dReal torque1, dReal torque2) pfdJointAddUniversalTorques;
+extern(C) alias void function(dJointID joint, dReal torque1, dReal torque2) pfdJointAddUniversalTorques;
 pfdJointAddUniversalTorques          dJointAddUniversalTorques;
 
 /**
  * @brief set anchor
  * @ingroup joints
  */
-typedef void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetPRAnchor;
+extern(C) alias void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetPRAnchor;
 pfdJointSetPRAnchor          dJointSetPRAnchor;
 
 /**
  * @brief set the axis for the prismatic articulation
  * @ingroup joints
  */
-typedef void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetPRAxis1;
+extern(C) alias void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetPRAxis1;
 pfdJointSetPRAxis1          dJointSetPRAxis1;
 
 /**
  * @brief set the axis for the rotoide articulation
  * @ingroup joints
  */
-typedef void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetPRAxis2;
+extern(C) alias void function(dJointID, dReal x, dReal y, dReal z) pfdJointSetPRAxis2;
 pfdJointSetPRAxis2          dJointSetPRAxis2;
 
 /**
@@ -1541,7 +1541,7 @@
  *
  * @note parameterX where X equal 2 refer to parameter for the rotoide articulation
  */
-typedef void function(dJointID, int parameter, dReal value) pfdJointSetPRParam;
+extern(C) alias void function(dJointID, int parameter, dReal value) pfdJointSetPRParam;
 pfdJointSetPRParam          dJointSetPRParam;
 
 /**
@@ -1552,7 +1552,7 @@
  * direction to body 2. This function is just a wrapper for dBodyAddTorque()}
  * @ingroup joints
  */
-typedef void function(dJointID j, dReal torque) pfdJointAddPRTorque;
+extern(C) alias void function(dJointID j, dReal torque) pfdJointAddPRTorque;
 pfdJointAddPRTorque          dJointAddPRTorque;
 
 /**
@@ -1561,7 +1561,7 @@
  * rotation between the bodies.
  * @ingroup joints
  */
-typedef void function(dJointID) pfdJointSetFixed;
+extern(C) alias void function(dJointID) pfdJointSetFixed;
 pfdJointSetFixed          dJointSetFixed;
 
 /**
@@ -1569,14 +1569,14 @@
  * @param num 0..3
  * @ingroup joints
  */
-typedef void function(dJointID, int num) pfdJointSetAMotorNumAxes;
+extern(C) alias void function(dJointID, int num) pfdJointSetAMotorNumAxes;
 pfdJointSetAMotorNumAxes          dJointSetAMotorNumAxes;
 
 /**
  * @brief set axis
  * @ingroup joints
  */
-typedef void function(dJointID, int anum, int rel, dReal x, dReal y, dReal z) pfdJointSetAMotorAxis;
+extern(C) alias void function(dJointID, int anum, int rel, dReal x, dReal y, dReal z) pfdJointSetAMotorAxis;
 pfdJointSetAMotorAxis          dJointSetAMotorAxis;
 
 /**
@@ -1588,21 +1588,21 @@
  * but it is not needed for axis motors.
  * @ingroup joints
  */
-typedef void function(dJointID, int anum, dReal angle) pfdJointSetAMotorAngle;
+extern(C) alias void function(dJointID, int anum, dReal angle) pfdJointSetAMotorAngle;
 pfdJointSetAMotorAngle          dJointSetAMotorAngle;
 
 /**
  * @brief set joint parameter
  * @ingroup joints
  */
-typedef void function(dJointID, int parameter, dReal value) pfdJointSetAMotorParam;
+extern(C) alias void function(dJointID, int parameter, dReal value) pfdJointSetAMotorParam;
 pfdJointSetAMotorParam          dJointSetAMotorParam;
 
 /**
  * @brief set mode
  * @ingroup joints
  */
-typedef void function(dJointID, int mode) pfdJointSetAMotorMode;
+extern(C) alias void function(dJointID, int mode) pfdJointSetAMotorMode;
 pfdJointSetAMotorMode          dJointSetAMotorMode;
 
 /**
@@ -1613,7 +1613,7 @@
  * This function is just a wrapper for dBodyAddTorque().
  * @ingroup joints
  */
-typedef void function(dJointID, dReal torque1, dReal torque2, dReal torque3) pfdJointAddAMotorTorques;
+extern(C) alias void function(dJointID, dReal torque1, dReal torque2, dReal torque3) pfdJointAddAMotorTorques;
 pfdJointAddAMotorTorques          dJointAddAMotorTorques;
 
 /**
@@ -1621,7 +1621,7 @@
  * @param num can range from 0 (which effectively deactivates the joint) to 3.
  * @ingroup joints
  */
-typedef void function(dJointID, int num) pfdJointSetLMotorNumAxes;
+extern(C) alias void function(dJointID, int num) pfdJointSetLMotorNumAxes;
 pfdJointSetLMotorNumAxes          dJointSetLMotorNumAxes;
 
 /**
@@ -1635,32 +1635,32 @@
  * regardless of the setting of rel.
  * @ingroup joints
  */
-typedef void function(dJointID, int anum, int rel, dReal x, dReal y, dReal z) pfdJointSetLMotorAxis;
+extern(C) alias void function(dJointID, int anum, int rel, dReal x, dReal y, dReal z) pfdJointSetLMotorAxis;
 pfdJointSetLMotorAxis          dJointSetLMotorAxis;
 
 /**
  * @brief set joint parameter
  * @ingroup joints
  */
-typedef void function(dJointID, int parameter, dReal value) pfdJointSetLMotorParam;
+extern(C) alias void function(dJointID, int parameter, dReal value) pfdJointSetLMotorParam;
 pfdJointSetLMotorParam          dJointSetLMotorParam;
 
 /**
  * @ingroup joints
  */
-typedef void function(dJointID, int parameter, dReal value) pfdJointSetPlane2DXParam;
+extern(C) alias void function(dJointID, int parameter, dReal value) pfdJointSetPlane2DXParam;
 pfdJointSetPlane2DXParam          dJointSetPlane2DXParam;
 
 /**
  * @ingroup joints
  */
-typedef void function(dJointID, int parameter, dReal value) pfdJointSetPlane2DYParam;
+extern(C) alias void function(dJointID, int parameter, dReal value) pfdJointSetPlane2DYParam;
 pfdJointSetPlane2DYParam          dJointSetPlane2DYParam;
 
 /**
  * @ingroup joints
  */
-typedef void function(dJointID, int parameter, dReal value) pfdJointSetPlane2DAngleParam;
+extern(C) alias void function(dJointID, int parameter, dReal value) pfdJointSetPlane2DAngleParam;
 pfdJointSetPlane2DAngleParam          dJointSetPlane2DAngleParam;
 
 /**
@@ -1669,7 +1669,7 @@
  * This returns the point on body 1. If the joint is perfectly satisfied,
  * this will be the same as the point on body 2.
  */
-typedef void function(dJointID, dVector3 result) pfdJointGetBallAnchor;
+extern(C) alias void function(dJointID, dVector3 result) pfdJointGetBallAnchor;
 pfdJointGetBallAnchor          dJointGetBallAnchor;
 
 /**
@@ -1682,7 +1682,7 @@
  * within roundoff errors. dJointGetBallAnchor2() can be used, along with
  * dJointGetBallAnchor(), to see how far the joint has come apart.
  */
-typedef void function(dJointID, dVector3 result) pfdJointGetBallAnchor2;
+extern(C) alias void function(dJointID, dVector3 result) pfdJointGetBallAnchor2;
 pfdJointGetBallAnchor2          dJointGetBallAnchor2;
 
 /**
@@ -1692,7 +1692,7 @@
  * this will be the same as the point on body 2.
  * @ingroup joints
  */
-typedef void function(dJointID, dVector3 result) pfdJointGetHingeAnchor;
+extern(C) alias void function(dJointID, dVector3 result) pfdJointGetHingeAnchor;
 pfdJointGetHingeAnchor          dJointGetHingeAnchor;
 
 /**
@@ -1703,21 +1703,21 @@
  * This can be used, for example, to see how far the joint has come apart.
  * @ingroup joints
  */
-typedef void function(dJointID, dVector3 result) pfdJointGetHingeAnchor2;
+extern(C) alias void function(dJointID, dVector3 result) pfdJointGetHingeAnchor2;
 pfdJointGetHingeAnchor2          dJointGetHingeAnchor2;
 
 /**
  * @brief get axis
  * @ingroup joints
  */
-typedef void function(dJointID, dVector3 result) pfdJointGetHingeAxis;
+extern(C) alias void function(dJointID, dVector3 result) pfdJointGetHingeAxis;
 pfdJointGetHingeAxis          dJointGetHingeAxis;
 
 /**
  * @brief get joint parameter
  * @ingroup joints
  */
-typedef dReal function(dJointID, int parameter) pfdJointGetHingeParam;
+extern(C) alias dReal function(dJointID, int parameter) pfdJointGetHingeParam;
 pfdJointGetHingeParam          dJointGetHingeParam;
 
 /**
@@ -1730,14 +1730,14 @@
  * bodies is examined and that position will be the zero angle.
  * @ingroup joints
  */
-typedef dReal function(dJointID) pfdJointGetHingeAngle;
+extern(C) alias dReal function(dJointID) pfdJointGetHingeAngle;
 pfdJointGetHingeAngle          dJointGetHingeAngle;
 
 /**
  * @brief Get the hinge angle time derivative.
  * @ingroup joints
  */
-typedef dReal function(dJointID) pfdJointGetHingeAngleRate;
+extern(C) alias dReal function(dJointID) pfdJointGetHingeAngleRate;
 pfdJointGetHingeAngleRate          dJointGetHingeAngleRate;
 
 /**
@@ -1747,28 +1747,28 @@
  * examined and that position will be the zero position.
  * @ingroup joints
  */
-typedef dReal function(dJointID) pfdJointGetSliderPosition;
+extern(C) alias dReal function(dJointID) pfdJointGetSliderPosition;
 pfdJointGetSliderPosition          dJointGetSliderPosition;
 
 /**
  * @brief Get the slider linear position's time derivative.
  * @ingroup joints
  */
-typedef dReal function(dJointID) pfdJointGetSliderPositionRate;
+extern(C) alias dReal function(dJointID) pfdJointGetSliderPositionRate;
 pfdJointGetSliderPositionRate          dJointGetSliderPositionRate;
 
 /**
  * @brief Get the slider axis
  * @ingroup joints
  */
-typedef void function(dJointID, dVector3 result) pfdJointGetSliderAxis;
+extern(C) alias void function(dJointID, dVector3 result) pfdJointGetSliderAxis;
 pfdJointGetSliderAxis          dJointGetSliderAxis;
 
 /**
  * @brief get joint parameter
  * @ingroup joints
  */
-typedef dReal function(dJointID, int parameter) pfdJointGetSliderParam;
+extern(C) alias dReal function(dJointID, int parameter) pfdJointGetSliderParam;
 pfdJointGetSliderParam          dJointGetSliderParam;
 
 /**
@@ -1777,7 +1777,7 @@
  * this will be the same as the point on body 2.
  * @ingroup joints
  */
-typedef void function(dJointID, dVector3 result) pfdJointGetHinge2Anchor;
+extern(C) alias void function(dJointID, dVector3 result) pfdJointGetHinge2Anchor;
 pfdJointGetHinge2Anchor          dJointGetHinge2Anchor;
 
 /**
@@ -1788,49 +1788,49 @@
  * This can be used, for example, to see how far the joint has come apart.
  * @ingroup joints
  */
-typedef void function(dJointID, dVector3 result) pfdJointGetHinge2Anchor2;
+extern(C) alias void function(dJointID, dVector3 result) pfdJointGetHinge2Anchor2;
 pfdJointGetHinge2Anchor2          dJointGetHinge2Anchor2;
 
 /**
  * @brief Get joint axis
  * @ingroup joints
  */
-typedef void function(dJointID, dVector3 result) pfdJointGetHinge2Axis1;
+extern(C) alias void function(dJointID, dVector3 result) pfdJointGetHinge2Axis1;
 pfdJointGetHinge2Axis1          dJointGetHinge2Axis1;
 
 /**
  * @brief Get joint axis
  * @ingroup joints
  */
-typedef void function(dJointID, dVector3 result) pfdJointGetHinge2Axis2;
+extern(C) alias void function(dJointID, dVector3 result) pfdJointGetHinge2Axis2;
 pfdJointGetHinge2Axis2          dJointGetHinge2Axis2;
 
 /**
  * @brief get joint parameter
  * @ingroup joints
  */
-typedef dReal function(dJointID, int parameter) pfdJointGetHinge2Param;
+extern(C) alias dReal function(dJointID, int parameter) pfdJointGetHinge2Param;
 pfdJointGetHinge2Param          dJointGetHinge2Param;
 
 /**
  * @brief Get angle
  * @ingroup joints
  */
-typedef dReal function(dJointID) pfdJointGetHinge2Angle1;
+extern(C) alias dReal function(dJointID) pfdJointGetHinge2Angle1;
 pfdJointGetHinge2Angle1          dJointGetHinge2Angle1;
 
 /**
  * @brief Get time derivative of angle
  * @ingroup joints
  */
-typedef dReal function(dJointID) pfdJointGetHinge2Angle1Rate;
+extern(C) alias dReal function(dJointID) pfdJointGetHinge2Angle1Rate;
 pfdJointGetHinge2Angle1Rate          dJointGetHinge2Angle1Rate;
 
 /**
  * @brief Get time derivative of angle
  * @ingroup joints
  */
-typedef dReal function(dJointID) pfdJointGetHinge2Angle2Rate;
+extern(C) alias dReal function(dJointID) pfdJointGetHinge2Angle2Rate;
 pfdJointGetHinge2Angle2Rate          dJointGetHinge2Angle2Rate;
 
 /**
@@ -1839,7 +1839,7 @@
  * this will be the same as the point on body 2.
  * @ingroup joints
  */
-typedef void function(dJointID, dVector3 result) pfdJointGetUniversalAnchor;
+extern(C) alias void function(dJointID, dVector3 result) pfdJointGetUniversalAnchor;
 pfdJointGetUniversalAnchor          dJointGetUniversalAnchor;
 
 /**
@@ -1855,21 +1855,21 @@
  * dJointGetUniversalAnchor(), to see how far the joint has come apart.
  * @ingroup joints
  */
-typedef void function(dJointID, dVector3 result) pfdJointGetUniversalAnchor2;
+extern(C) alias void function(dJointID, dVector3 result) pfdJointGetUniversalAnchor2;
 pfdJointGetUniversalAnchor2          dJointGetUniversalAnchor2;
 
 /**
  * @brief Get axis
  * @ingroup joints
  */
-typedef void function(dJointID, dVector3 result) pfdJointGetUniversalAxis1;
+extern(C) alias void function(dJointID, dVector3 result) pfdJointGetUniversalAxis1;
 pfdJointGetUniversalAxis1          dJointGetUniversalAxis1;
 
 /**
  * @brief Get axis
  * @ingroup joints
  */
-typedef void function(dJointID, dVector3 result) pfdJointGetUniversalAxis2;
+extern(C) alias void function(dJointID, dVector3 result) pfdJointGetUniversalAxis2;
 pfdJointGetUniversalAxis2          dJointGetUniversalAxis2;
 
 
@@ -1877,7 +1877,7 @@
  * @brief get joint parameter
  * @ingroup joints
  */
-typedef dReal function(dJointID, int parameter) pfdJointGetUniversalParam;
+extern(C) alias dReal function(dJointID, int parameter) pfdJointGetUniversalParam;
 pfdJointGetUniversalParam          dJointGetUniversalParam;
 
 /**
@@ -1891,35 +1891,35 @@
  * @note This function combine getUniversalAngle1 and getUniversalAngle2 together
  *       and try to avoid redundant calculation
  */
-typedef void function(dJointID, dReal *angle1, dReal *angle2) pfdJointGetUniversalAngles;
+extern(C) alias void function(dJointID, dReal *angle1, dReal *angle2) pfdJointGetUniversalAngles;
 pfdJointGetUniversalAngles          dJointGetUniversalAngles;
 
 /**
  * @brief Get angle
  * @ingroup joints
  */
-typedef dReal function(dJointID) pfdJointGetUniversalAngle1;
+extern(C) alias dReal function(dJointID) pfdJointGetUniversalAngle1;
 pfdJointGetUniversalAngle1          dJointGetUniversalAngle1;
 
 /**
  * @brief Get angle
  * @ingroup joints
  */
-typedef dReal function(dJointID) pfdJointGetUniversalAngle2;
+extern(C) alias dReal function(dJointID) pfdJointGetUniversalAngle2;
 pfdJointGetUniversalAngle2          dJointGetUniversalAngle2;
 
 /**
  * @brief Get time derivative of angle
  * @ingroup joints
  */
-typedef dReal function(dJointID) pfdJointGetUniversalAngle1Rate;
+extern(C) alias dReal function(dJointID) pfdJointGetUniversalAngle1Rate;
 pfdJointGetUniversalAngle1Rate          dJointGetUniversalAngle1Rate;
 
 /**
  * @brief Get time derivative of angle
  * @ingroup joints
  */
-typedef dReal function(dJointID) pfdJointGetUniversalAngle2Rate;
+extern(C) alias dReal function(dJointID) pfdJointGetUniversalAngle2Rate;
 pfdJointGetUniversalAngle2Rate          dJointGetUniversalAngle2Rate;
 
 /**
@@ -1928,7 +1928,7 @@
  * this will be the same as the point on body 2.
  * @ingroup joints
  */
-typedef void function(dJointID, dVector3 result) pfdJointGetPRAnchor;
+extern(C) alias void function(dJointID, dVector3 result) pfdJointGetPRAnchor;
 pfdJointGetPRAnchor          dJointGetPRAnchor;
 
 /**
@@ -1942,7 +1942,7 @@
  *
  * @ingroup joints
  */
-typedef dReal function(dJointID) pfdJointGetPRPosition;
+extern(C) alias dReal function(dJointID) pfdJointGetPRPosition;
 pfdJointGetPRPosition          dJointGetPRPosition;
 
 /**
@@ -1950,7 +1950,7 @@
  *
  * @ingroup joints
  */
-typedef dReal function(dJointID) pfdJointGetPRPositionRate;
+extern(C) alias dReal function(dJointID) pfdJointGetPRPositionRate;
 pfdJointGetPRPositionRate          dJointGetPRPositionRate;
 
 
@@ -1958,21 +1958,21 @@
  * @brief Get the prismatic axis
  * @ingroup joints
  */
-typedef void function(dJointID, dVector3 result) pfdJointGetPRAxis1;
+extern(C) alias void function(dJointID, dVector3 result) pfdJointGetPRAxis1;
 pfdJointGetPRAxis1          dJointGetPRAxis1;
 
 /**
  * @brief Get the Rotoide axis
  * @ingroup joints
  */
-typedef void function(dJointID, dVector3 result) pfdJointGetPRAxis2;
+extern(C) alias void function(dJointID, dVector3 result) pfdJointGetPRAxis2;
 pfdJointGetPRAxis2          dJointGetPRAxis2;
 
 /**
  * @brief get joint parameter
  * @ingroup joints
  */
-typedef dReal function(dJointID, int parameter) pfdJointGetPRParam;
+extern(C) alias dReal function(dJointID, int parameter) pfdJointGetPRParam;
 pfdJointGetPRParam          dJointGetPRParam;
 
 /**
@@ -1983,7 +1983,7 @@
  * This is automatically set to 3 in dAMotorEuler mode.
  * @ingroup joints
  */
-typedef int function(dJointID) pfdJointGetAMotorNumAxes;
+extern(C) alias int function(dJointID) pfdJointGetAMotorNumAxes;
 pfdJointGetAMotorNumAxes          dJointGetAMotorNumAxes;
 
 /**
@@ -1995,7 +1995,7 @@
  * \li 2: The axis is anchored to the second body.
  * @ingroup joints
  */
-typedef void function(dJointID, int anum, dVector3 result) pfdJointGetAMotorAxis;
+extern(C) alias void function(dJointID, int anum, dVector3 result) pfdJointGetAMotorAxis;
 pfdJointGetAMotorAxis          dJointGetAMotorAxis;
 
 /**
@@ -2014,7 +2014,7 @@
     to the second body.
  * @ingroup joints
  */
-typedef int function(dJointID, int anum) pfdJointGetAMotorAxisRel;
+extern(C) alias int function(dJointID, int anum) pfdJointGetAMotorAxisRel;
 pfdJointGetAMotorAxisRel          dJointGetAMotorAxisRel;
 
 /**
@@ -2025,7 +2025,7 @@
  * In dAMotorEuler mode this is the corresponding euler angle.
  * @ingroup joints
  */
-typedef dReal function(dJointID, int anum) pfdJointGetAMotorAngle;
+extern(C) alias dReal function(dJointID, int anum) pfdJointGetAMotorAngle;
 pfdJointGetAMotorAngle          dJointGetAMotorAngle;
 
 /**
@@ -2036,14 +2036,14 @@
  * In dAMotorEuler mode this is the corresponding euler angle rate.
  * @ingroup joints
  */
-typedef dReal function(dJointID, int anum) pfdJointGetAMotorAngleRate;
+extern(C) alias dReal function(dJointID, int anum) pfdJointGetAMotorAngleRate;
 pfdJointGetAMotorAngleRate          dJointGetAMotorAngleRate;
 
 /**
  * @brief get joint parameter
  * @ingroup joints
  */
-typedef dReal function(dJointID, int parameter) pfdJointGetAMotorParam;
+extern(C) alias dReal function(dJointID, int parameter) pfdJointGetAMotorParam;
 pfdJointGetAMotorParam          dJointGetAMotorParam;
 
 /**
@@ -2059,41 +2059,41 @@
  * of the bodies will correspond to all euler angles at zero.
  * @ingroup joints
  */
-typedef int function(dJointID) pfdJointGetAMotorMode;
+extern(C) alias int function(dJointID) pfdJointGetAMotorMode;
 pfdJointGetAMotorMode          dJointGetAMotorMode;
 
 /**
  * @brief Get nr of axes.
  * @ingroup joints
  */
-typedef int function(dJointID) pfdJointGetLMotorNumAxes;
+extern(C) alias int function(dJointID) pfdJointGetLMotorNumAxes;
 pfdJointGetLMotorNumAxes          dJointGetLMotorNumAxes;
 
 /**
  * @brief Get axis.
  * @ingroup joints
  */
-typedef void function(dJointID, int anum, dVector3 result) pfdJointGetLMotorAxis;
+extern(C) alias void function(dJointID, int anum, dVector3 result) pfdJointGetLMotorAxis;
 pfdJointGetLMotorAxis          dJointGetLMotorAxis;
 
 /**
  * @brief get joint parameter
  * @ingroup joints
  */
-typedef dReal function(dJointID, int parameter) pfdJointGetLMotorParam;
+extern(C) alias dReal function(dJointID, int parameter) pfdJointGetLMotorParam;
 pfdJointGetLMotorParam          dJointGetLMotorParam;
 
 
 /**
  * @ingroup joints
  */
-typedef dJointID function(dBodyID, dBodyID) pfdConnectingJoint;
+extern(C) alias dJointID function(dBodyID, dBodyID) pfdConnectingJoint;
 pfdConnectingJoint          dConnectingJoint;
 
 /**
  * @ingroup joints
  */
-typedef int function(dBodyID, dBodyID, dJointID*) pfdConnectingJointList;
+extern(C) alias int function(dBodyID, dBodyID, dJointID*) pfdConnectingJointList;
 pfdConnectingJointList          dConnectingJointList;
 
 /**
@@ -2102,7 +2102,7 @@
  * a joint, otherwise return 0.
  * @ingroup joints
  */
-typedef int function(dBodyID, dBodyID) pfdAreConnected;
+extern(C) alias int function(dBodyID, dBodyID) pfdAreConnected;
 pfdAreConnected          dAreConnected;
 
 /**
@@ -2118,6 +2118,6 @@
  * bodies that already have contacts.
  * @ingroup joints
  */
-typedef int function(dBodyID body1, dBodyID body2, int joint_type) pfdAreConnectedExcluding;
+extern(C) alias int function(dBodyID body1, dBodyID body2, int joint_type) pfdAreConnectedExcluding;
 pfdAreConnectedExcluding          dAreConnectedExcluding;
 
Index: DerelictODE/derelict/ode/error.d
===================================================================
--- DerelictODE/derelict/ode/error.d	(revision 318)
+++ DerelictODE/derelict/ode/error.d	(working copy)
@@ -54,35 +54,37 @@
 /* all user defined error functions have this type. error and debug functions
  * should not return.
  */
-//typedef void function(int, char*, ...) dMessageFunction;
-typedef void function(int, char*, va_list ap) dMessageFunction;
+//alias void function(int, char*, ...) dMessageFunction;
+alias void function(int, char*, va_list ap) dMessageFunction;
 
-extern(C):
+extern(C) {
 
 /* set a new error, debug or warning handler. if fn is 0, the default handlers
  * are used.
  */
-typedef void function(dMessageFunction*) pfdSetErrorHandler;
-typedef void function(dMessageFunction*) pfdSetDebugHandler;
-typedef void function(dMessageFunction*) pfdSetMessageHandler;
-pfdSetErrorHandler          dSetErrorHandler;
-pfdSetDebugHandler          dSetDebugHandler;
-pfdSetMessageHandler        dSetMessageHandler;
+alias void function(dMessageFunction*) pfdSetErrorHandler;
+alias void function(dMessageFunction*) pfdSetDebugHandler;
+alias void function(dMessageFunction*) pfdSetMessageHandler;
 
 /* return the current error, debug or warning handler. if the return value is
  * 0, the default handlers are in place.
  */
-typedef dMessageFunction* function() pfdGetErrorHandler;
-typedef dMessageFunction* function() pfdGetDebugHandler;
-typedef dMessageFunction* function() pfdGetMessageHandler;
+alias dMessageFunction* function() pfdGetErrorHandler;
+alias dMessageFunction* function() pfdGetDebugHandler;
+alias dMessageFunction* function() pfdGetMessageHandler;
+
+/* generate a fatal error, debug trap or a message. */
+alias void function(int, char*, ...) pfdError;
+alias void function(int, char*, ...) pfdDebug;
+alias void function(int, char*, ...) pfdMessage;
+}
+
+pfdSetErrorHandler          dSetErrorHandler;
+pfdSetDebugHandler          dSetDebugHandler;
+pfdSetMessageHandler        dSetMessageHandler;
 pfdGetErrorHandler          dGetErrorHandler;
 pfdGetDebugHandler          dGetDebugHandler;
 pfdGetMessageHandler        dGetMessageHandler;
-
-/* generate a fatal error, debug trap or a message. */
-typedef void function(int, char*, ...) pfdError;
-typedef void function(int, char*, ...) pfdDebug;
-typedef void function(int, char*, ...) pfdMessage;
 pfdError          dError;
 pfdDebug          dDebug;
 pfdMessage        dMessage;
Index: DerelictODE/derelict/ode/misc.d
===================================================================
--- DerelictODE/derelict/ode/misc.d	(revision 318)
+++ DerelictODE/derelict/ode/misc.d	(working copy)
@@ -54,56 +54,58 @@
 // FUNCTIONS
 //==============================================================================
 
-extern(C):
+extern(C) {
 
 /* return 1 if the random number generator is working. */
-typedef int function() pfdTestRand;
-pfdTestRand          dTestRand;
+alias int function() pfdTestRand;
 
 /* return next 32 bit random number. this uses a not-very-random linear
  * congruential method.
  */
-typedef ulong function() pfdRand;
-pfdRand          dRand;
+alias ulong function() pfdRand;
 
 /* get and set the current random number seed. */
-typedef ulong function() pfdRandGetSeed;
-pfdRandGetSeed          dRandGetSeed;
-typedef void function(ulong s) pfdRandSetSeed;
-pfdRandSetSeed          dRandSetSeed;
+alias ulong function() pfdRandGetSeed;
+alias void function(ulong s) pfdRandSetSeed;
 
 /* return a random integer between 0..n-1. the distribution will get worse
  * as n approaches 2^32.
  */
-typedef int function(int n) pfdRandInt;
-pfdRandInt          dRandInt;
+alias int function(int n) pfdRandInt;
 
 /* return a random real number between 0..1 */
-typedef dReal function() pfdRandReal;
-pfdRandReal          dRandReal;
+alias dReal function() pfdRandReal;
 
 /* print out a matrix */
-typedef void function(dReal *A, int n, int m, char *fmt, FILE *f) pfdPrintMatrix;
-pfdPrintMatrix          dPrintMatrix;
+alias void function(dReal *A, int n, int m, char *fmt, FILE *f) pfdPrintMatrix;
 
 /* make a random vector with entries between +/- range. A has n elements. */
-typedef void function(dReal *A, int n, dReal range) pfdMakeRandomVector;
-pfdMakeRandomVector          dMakeRandomVector;
+alias void function(dReal *A, int n, dReal range) pfdMakeRandomVector;
 
 /* make a random matrix with entries between +/- range. A has size n*m. */
-typedef void function(dReal *A, int n, int m, dReal range) pfdMakeRandomMatrix;
-pfdMakeRandomMatrix          dMakeRandomMatrix;
+alias void function(dReal *A, int n, int m, dReal range) pfdMakeRandomMatrix;
 
 /* clear the upper triangle of a square matrix */
-typedef void function(dReal *A, int n) pfdClearUpperTriangle;
-pfdClearUpperTriangle          dClearUpperTriangle;
+alias void function(dReal *A, int n) pfdClearUpperTriangle;
 
 /* return the maximum element difference between the two n*m matrices */
-typedef dReal function(dReal *A, dReal *B, int n, int m) pfdMaxDifference;
-pfdMaxDifference          dMaxDifference;
+alias dReal function(dReal *A, dReal *B, int n, int m) pfdMaxDifference;
 
 /* return the maximum element difference between the lower triangle of two
  * n*n matrices */
-typedef dReal function(dReal *A, dReal *B, int n) pfdMaxDifferenceLowerTriangle;
+alias dReal function(dReal *A, dReal *B, int n) pfdMaxDifferenceLowerTriangle;
+}
+
+pfdTestRand          dTestRand;
+pfdRand          dRand;
+pfdRandGetSeed          dRandGetSeed;
+pfdRandSetSeed          dRandSetSeed;
+pfdRandInt          dRandInt;
+pfdRandReal          dRandReal;
+pfdPrintMatrix          dPrintMatrix;
+pfdMakeRandomVector          dMakeRandomVector;
+pfdMakeRandomMatrix          dMakeRandomMatrix;
+pfdClearUpperTriangle          dClearUpperTriangle;
+pfdMaxDifference          dMaxDifference;
 pfdMaxDifferenceLowerTriangle          dMaxDifferenceLowerTriangle;
 
Index: DerelictODE/derelict/ode/collision.d
===================================================================
--- DerelictODE/derelict/ode/collision.d	(revision 318)
+++ DerelictODE/derelict/ode/collision.d	(working copy)
@@ -97,7 +97,7 @@
 //==============================================================================
 // FUNCTIONS
 //==============================================================================
-extern(C):
+// extern(C):
 
 /**
  * @defgroup collide Collision Detection
@@ -130,7 +130,7 @@
  * @param geom the geom to be destroyed.
  * @ingroup collide
  */
-typedef void function(dGeomID geom) pfdGeomDestroy;
+extern(C) alias void function(dGeomID geom) pfdGeomDestroy;
 pfdGeomDestroy          dGeomDestroy;
 
 
@@ -141,7 +141,7 @@
  * @param data the data pointer to be stored
  * @ingroup collide
  */
-typedef void function(dGeomID geom, void* data) pfdGeomSetData;
+extern(C) alias void function(dGeomID geom, void* data) pfdGeomSetData;
 pfdGeomSetData          dGeomSetData;
 
 
@@ -151,7 +151,7 @@
  * @param geom the geom containing the data
  * @ingroup collide
  */
-typedef void* function(dGeomID geom) pfdGeomGetData;
+extern(C) alias void* function(dGeomID geom) pfdGeomGetData;
 pfdGeomGetData          dGeomGetData;
 
 
@@ -173,7 +173,7 @@
  * @param body the body to attach to the geom
  * @ingroup collide
  */
-typedef void function(dGeomID geom, dBodyID bodyid) pfdGeomSetBody;
+extern(C) alias void function(dGeomID geom, dBodyID bodyid) pfdGeomSetBody;
 pfdGeomSetBody          dGeomSetBody;
 
 
@@ -183,7 +183,7 @@
  * @sa dGeomSetBody
  * @ingroup collide
  */
-typedef dBodyID function(dGeomID geom) pfdGeomGetBody;
+extern(C) alias dBodyID function(dGeomID geom) pfdGeomGetBody;
 pfdGeomGetBody          dGeomGetBody;
 
 
@@ -201,7 +201,7 @@
  * @sa dBodySetPosition
  * @ingroup collide
  */
-typedef void function(dGeomID geom, dReal x, dReal y, dReal z) pfdGeomSetPosition;
+extern(C) alias void function(dGeomID geom, dReal x, dReal y, dReal z) pfdGeomSetPosition;
 pfdGeomSetPosition          dGeomSetPosition;
 
 
@@ -217,7 +217,7 @@
  * @sa dBodySetRotation
  * @ingroup collide
  */
-typedef void function(dGeomID geom, dMatrix3 R) pfdGeomSetRotation;
+extern(C) alias void function(dGeomID geom, dMatrix3 R) pfdGeomSetRotation;
 pfdGeomSetRotation          dGeomSetRotation;
 
 
@@ -234,7 +234,7 @@
  * @sa dBodySetQuaternion
  * @ingroup collide
  */
-typedef void function(dGeomID geom, dQuaternion Q) pfdGeomSetQuaternion;
+extern(C) alias void function(dGeomID geom, dQuaternion Q) pfdGeomSetQuaternion;
 pfdGeomSetQuaternion          dGeomSetQuaternion;
 
 
@@ -254,7 +254,7 @@
  * @sa dBodyGetPosition
  * @ingroup collide
  */
-typedef dReal* function(dGeomID geom) pfdGeomGetPosition;
+extern(C) alias dReal* function(dGeomID geom) pfdGeomGetPosition;
 pfdGeomGetPosition          dGeomGetPosition;
 
 /**
@@ -264,7 +264,7 @@
  * @param pos   a copy of the geom position
  * @sa dGeomGetPosition
  */
-typedef void function(dGeomID geom, dVector3 pos) pfdGeomCopyPosition;
+extern(C) alias void function(dGeomID geom, dVector3 pos) pfdGeomCopyPosition;
 pfdGeomCopyPosition          dGeomCopyPosition;
 
 /**
@@ -283,7 +283,7 @@
  * @sa dBodyGetRotation
  * @ingroup collide
  */
-typedef dReal* function(dGeomID geom) pfdGeomGetRotation;
+extern(C) alias dReal* function(dGeomID geom) pfdGeomGetRotation;
 pfdGeomGetRotation          dGeomGetRotation;
 
 /**
@@ -299,7 +299,7 @@
  * @sa dGeomGetRotation
  * @ingroup collide
  */
-typedef void function(dGeomID geom, dMatrix3 R) pfdGeomCopyRotation;
+extern(C) alias void function(dGeomID geom, dMatrix3 R) pfdGeomCopyRotation;
 pfdGeomCopyRotation          dGeomCopyRotation;
 
 /**
@@ -315,7 +315,7 @@
  * @sa dBodyGetQuaternion
  * @ingroup collide
  */
-typedef void function(dGeomID geom, dQuaternion result) pfdGeomGetQuaternion;
+extern(C) alias void function(dGeomID geom, dQuaternion result) pfdGeomGetQuaternion;
 pfdGeomGetQuaternion          dGeomGetQuaternion;
 
 
@@ -335,7 +335,7 @@
  * @param aabb the returned bounding box
  * @ingroup collide
  */
-typedef void function(dGeomID geom, dReal aabb[6]) pfdGeomGetAABB;
+extern(C) alias void function(dGeomID geom, dReal aabb[6]) pfdGeomGetAABB;
 pfdGeomGetAABB          dGeomGetAABB;
 
 
@@ -345,7 +345,7 @@
  * @returns Non-zero if the geom is a space, zero otherwise.
  * @ingroup collide
  */
-typedef int function(dGeomID geom) pfdGeomIsSpace;
+extern(C) alias int function(dGeomID geom) pfdGeomIsSpace;
 pfdGeomIsSpace          dGeomIsSpace;
 
 
@@ -356,7 +356,7 @@
  *          not contained by a space.
  * @ingroup collide
  */
-typedef dSpaceID function(dGeomID) pfdGeomGetSpace;
+extern(C) alias dSpaceID function(dGeomID) pfdGeomGetSpace;
 pfdGeomGetSpace          dGeomGetSpace;
 
 
@@ -384,7 +384,7 @@
  * @returns The geom class ID.
  * @ingroup collide
  */
-typedef int function(dGeomID geom) pfdGeomGetClass;
+extern(C) alias int function(dGeomID geom) pfdGeomGetClass;
 pfdGeomGetClass          dGeomGetClass;
 
 
@@ -400,7 +400,7 @@
  * @param bits the new bitfield value
  * @ingroup collide
  */
-typedef void function(dGeomID geom, ulong bits) pfdGeomSetCategoryBits;
+extern(C) alias void function(dGeomID geom, ulong bits) pfdGeomSetCategoryBits;
 pfdGeomSetCategoryBits          dGeomSetCategoryBits;
 
 
@@ -416,7 +416,7 @@
  * @param bits the new bitfield value
  * @ingroup collide
  */
-typedef void function(dGeomID geom, ulong bits) pfdGeomSetCollideBits;
+extern(C) alias void function(dGeomID geom, ulong bits) pfdGeomSetCollideBits;
 pfdGeomSetCollideBits          dGeomSetCollideBits;
 
 
@@ -428,7 +428,7 @@
  * @sa dGeomSetCategoryBits
  * @ingroup collide
  */
-typedef ulong function(dGeomID) pfdGeomGetCategoryBits;
+extern(C) alias ulong function(dGeomID) pfdGeomGetCategoryBits;
 pfdGeomGetCategoryBits          dGeomGetCategoryBits;
 
 
@@ -440,7 +440,7 @@
  * @sa dGeomSetCollideBits
  * @ingroup collide
  */
-typedef ulong function(dGeomID) pfdGeomGetCollideBits;
+extern(C) alias ulong function(dGeomID) pfdGeomGetCollideBits;
 pfdGeomGetCollideBits          dGeomGetCollideBits;
 
 
@@ -456,7 +456,7 @@
  * @sa dGeomIsEnabled
  * @ingroup collide
  */
-typedef void function(dGeomID geom) pfdGeomEnable;
+extern(C) alias void function(dGeomID geom) pfdGeomEnable;
 pfdGeomEnable          dGeomEnable;
 
 
@@ -472,7 +472,7 @@
  * @sa dGeomIsEnabled
  * @ingroup collide
  */
-typedef void function(dGeomID geom) pfdGeomDisable;
+extern(C) alias void function(dGeomID geom) pfdGeomDisable;
 pfdGeomDisable          dGeomDisable;
 
 
@@ -489,7 +489,7 @@
  * @sa dGeomIsEnabled
  * @ingroup collide
  */
-typedef int function(dGeomID geom) pfdGeomIsEnabled;
+extern(C) alias int function(dGeomID geom) pfdGeomIsEnabled;
 pfdGeomIsEnabled          dGeomIsEnabled;
 
 /* ************************************************************************ */
@@ -510,7 +510,7 @@
  * @param z the new Z coordinate.
  * @ingroup collide
  */
-typedef void function(dGeomID geom, dReal x, dReal y, dReal z) pfdGeomSetOffsetPosition;
+extern(C) alias void function(dGeomID geom, dReal x, dReal y, dReal z) pfdGeomSetOffsetPosition;
 pfdGeomSetOffsetPosition          dGeomSetOffsetPosition;
 
 
@@ -527,7 +527,7 @@
  * @param R the new rotation matrix.
  * @ingroup collide
  */
-typedef void function(dGeomID geom, dMatrix3 R) pfdGeomSetOffsetRotation;
+extern(C) alias void function(dGeomID geom, dMatrix3 R) pfdGeomSetOffsetRotation;
 pfdGeomSetOffsetRotation          dGeomSetOffsetRotation;
 
 
@@ -544,7 +544,7 @@
  * @param Q the new rotation.
  * @ingroup collide
  */
-typedef void function(dGeomID geom, dQuaternion Q) pfdGeomSetOffsetQuaternion;
+extern(C) alias void function(dGeomID geom, dQuaternion Q) pfdGeomSetOffsetQuaternion;
 pfdGeomSetOffsetQuaternion          dGeomSetOffsetQuaternion;
 
 
@@ -564,7 +564,7 @@
  * @param z the new Z coordinate.
  * @ingroup collide
  */
-typedef void function(dGeomID geom, dReal x, dReal y, dReal z) pfdGeomSetOffsetWorldPosition;
+extern(C) alias void function(dGeomID geom, dReal x, dReal y, dReal z) pfdGeomSetOffsetWorldPosition;
 pfdGeomSetOffsetWorldPosition          dGeomSetOffsetWorldPosition;
 
 
@@ -582,7 +582,7 @@
  * @param R the new rotation matrix.
  * @ingroup collide
  */
-typedef void function(dGeomID geom, dMatrix3 R) pfdGeomSetOffsetWorldRotation;
+extern(C) alias void function(dGeomID geom, dMatrix3 R) pfdGeomSetOffsetWorldRotation;
 pfdGeomSetOffsetWorldRotation          dGeomSetOffsetWorldRotation;
 
 
@@ -600,7 +600,7 @@
  * @param Q the new rotation.
  * @ingroup collide
  */
-typedef void function(dGeomID geom, dQuaternion) pfdGeomSetOffsetWorldQuaternion;
+extern(C) alias void function(dGeomID geom, dQuaternion) pfdGeomSetOffsetWorldQuaternion;
 pfdGeomSetOffsetWorldQuaternion          dGeomSetOffsetWorldQuaternion;
 
 
@@ -617,7 +617,7 @@
  * @param geom the geom to have its offset destroyed.
  * @ingroup collide
  */
-typedef void function(dGeomID geom) pfdGeomClearOffset;
+extern(C) alias void function(dGeomID geom) pfdGeomClearOffset;
 pfdGeomClearOffset          dGeomClearOffset;
 
 
@@ -636,7 +636,7 @@
  * @returns Non-zero if the geom has an offset, zero otherwise.
  * @ingroup collide
  */
-typedef int function(dGeomID geom) pfdGeomIsOffset;
+extern(C) alias int function(dGeomID geom) pfdGeomIsOffset;
 pfdGeomIsOffset          dGeomIsOffset;
 
 /**
@@ -652,7 +652,7 @@
  *          to the geom.
  * @ingroup collide
  */
-typedef dReal* function(dGeomID geom) pfdGeomGetOffsetPosition;
+extern(C) alias dReal* function(dGeomID geom) pfdGeomGetOffsetPosition;
 pfdGeomGetOffsetPosition          dGeomGetOffsetPosition;
 
 /**
@@ -665,7 +665,7 @@
  * @param pos    returns the offset position
  * @ingroup collide
  */
-typedef void function(dGeomID geom, dVector3 pos) pfdGeomCopyOffsetPosition;
+extern(C) alias void function(dGeomID geom, dVector3 pos) pfdGeomCopyOffsetPosition;
 pfdGeomCopyOffsetPosition          dGeomCopyOffsetPosition;
 
 /**
@@ -681,7 +681,7 @@
  *          to the geom.
  * @ingroup collide
  */
-typedef dReal* function(dGeomID geom) pfdGeomGetOffsetRotation;
+extern(C) alias dReal* function(dGeomID geom) pfdGeomGetOffsetRotation;
 pfdGeomGetOffsetRotation          dGeomGetOffsetRotation;
 
 /**
@@ -695,7 +695,7 @@
  * @param R      returns the rotation matrix.
  * @ingroup collide
  */
-typedef void function(dGeomID geom, dMatrix3 R) pfdGeomCopyOffsetRotation;
+extern(C) alias void function(dGeomID geom, dMatrix3 R) pfdGeomCopyOffsetRotation;
 pfdGeomCopyOffsetRotation          dGeomCopyOffsetRotation;
 
 /**
@@ -708,7 +708,7 @@
  * @param result a copy of the rotation quaternion.
  * @ingroup collide
  */
-typedef void function(dGeomID geom, dQuaternion result) pfdGeomGetOffsetQuaternion;
+extern(C) alias void function(dGeomID geom, dQuaternion result) pfdGeomGetOffsetQuaternion;
 pfdGeomGetOffsetQuaternion          dGeomGetOffsetQuaternion;
 
 /* ************************************************************************ */
@@ -760,7 +760,7 @@
  *
  * @ingroup collide
  */
-typedef int function(dGeomID o1, dGeomID o2, int flags, dContactGeom* contact, int skip) pfdCollide;
+extern(C) alias int function(dGeomID o1, dGeomID o2, int flags, dContactGeom* contact, int skip) pfdCollide;
 pfdCollide          dCollide;
 
 /**
@@ -790,7 +790,7 @@
  * @sa dSpaceCollide2
  * @ingroup collide
  */
-typedef void function(dSpaceID space, void* data, dNearCallback* callback) pfdSpaceCollide;
+extern(C) alias void function(dSpaceID space, void* data, dNearCallback* callback) pfdSpaceCollide;
 pfdSpaceCollide          dSpaceCollide;
 
 
@@ -828,7 +828,7 @@
  * @sa dSpaceCollide
  * @ingroup collide
  */
-typedef void function(dGeomID space1, dGeomID space2, void* data, dNearCallback* callback) pfdSpaceCollide2;
+extern(C) alias void function(dGeomID space1, dGeomID space2, void* data, dNearCallback* callback) pfdSpaceCollide2;
 pfdSpaceCollide2          dSpaceCollide2;
 
 
@@ -851,7 +851,7 @@
  * @sa dGeomSphereSetRadius
  * @ingroup collide_sphere
  */
-typedef dGeomID function(dSpaceID space, dReal radius) pfdCreateSphere;
+extern(C) alias dGeomID function(dSpaceID space, dReal radius) pfdCreateSphere;
 pfdCreateSphere          dCreateSphere;
 
 
@@ -864,7 +864,7 @@
  * @sa dGeomSphereGetRadius
  * @ingroup collide_sphere
  */
-typedef void function(dGeomID space, dReal radius) pfdGeomSphereSetRadius;
+extern(C) alias void function(dGeomID space, dReal radius) pfdGeomSphereSetRadius;
 pfdGeomSphereSetRadius          dGeomSphereSetRadius;
 
 
@@ -876,7 +876,7 @@
  * @sa dGeomSphereSetRadius
  * @ingroup collide_sphere
  */
-typedef dReal function(dGeomID sphere) pfdGeomSphereGetRadius;
+extern(C) alias dReal function(dGeomID sphere) pfdGeomSphereGetRadius;
 pfdGeomSphereGetRadius          dGeomSphereGetRadius;
 
 
@@ -894,15 +894,15 @@
  *
  * @ingroup collide_sphere
  */
-typedef dReal function(dGeomID sphere, dReal x, dReal y, dReal z) pfdGeomSpherePointDepth;
+extern(C) alias dReal function(dGeomID sphere, dReal x, dReal y, dReal z) pfdGeomSpherePointDepth;
 pfdGeomSpherePointDepth          dGeomSpherePointDepth;
 
 
 //--> Convex Functions
-typedef dGeomID function(dSpaceID space, dReal* _planes, uint _planecount, dReal* _points, uint _pointcount, uint* _polygons) pfdCreateConvex;
+extern(C) alias dGeomID function(dSpaceID space, dReal* _planes, uint _planecount, dReal* _points, uint _pointcount, uint* _polygons) pfdCreateConvex;
 pfdCreateConvex          dCreateConvex;
 
-typedef void function(dGeomID g, dReal *_planes, uint _count, dReal *_points, uint _pointcount, uint *_polygons) pfdGeomSetConvex;
+extern(C) alias void function(dGeomID g, dReal *_planes, uint _count, dReal *_points, uint _pointcount, uint *_polygons) pfdGeomSetConvex;
 pfdGeomSetConvex          dGeomSetConvex;
 //<-- Convex Functions
 
@@ -927,7 +927,7 @@
  * @sa dGeomBoxSetLengths
  * @ingroup collide_box
  */
-typedef dGeomID function(dSpaceID space, dReal lx, dReal ly, dReal lz) pfdCreateBox;
+extern(C) alias dGeomID function(dSpaceID space, dReal lx, dReal ly, dReal lz) pfdCreateBox;
 pfdCreateBox          dCreateBox;
 
 
@@ -942,7 +942,7 @@
  * @sa dGeomBoxGetLengths
  * @ingroup collide_box
  */
-typedef void function(dGeomID box, dReal lx, dReal ly, dReal lz) pfdGeomBoxSetLengths;
+extern(C) alias void function(dGeomID box, dReal lx, dReal ly, dReal lz) pfdGeomBoxSetLengths;
 pfdGeomBoxSetLengths          dGeomBoxSetLengths;
 
 
@@ -955,7 +955,7 @@
  * @sa dGeomBoxSetLengths
  * @ingroup collide_box
  */
-typedef void function(dGeomID box, dVector3 result) pfdGeomBoxGetLengths;
+extern(C) alias void function(dGeomID box, dVector3 result) pfdGeomBoxGetLengths;
 pfdGeomBoxGetLengths          dGeomBoxGetLengths;
 
 
@@ -971,32 +971,32 @@
  * positive depth, points outside it will have a negative depth, and points
  * on the surface will have a depth of zero.
  */
-typedef dReal function(dGeomID box, dReal x, dReal y, dReal z) pfdGeomBoxPointDepth;
+extern(C) alias dReal function(dGeomID box, dReal x, dReal y, dReal z) pfdGeomBoxPointDepth;
 pfdGeomBoxPointDepth          dGeomBoxPointDepth;
 
 
-typedef dGeomID function(dSpaceID space, dReal a, dReal b, dReal c, dReal d) pfdCreatePlane;
+extern(C) alias dGeomID function(dSpaceID space, dReal a, dReal b, dReal c, dReal d) pfdCreatePlane;
 pfdCreatePlane          dCreatePlane;
 
-typedef void function(dGeomID plane, dReal a, dReal b, dReal c, dReal d) pfdGeomPlaneSetParams;
+extern(C) alias void function(dGeomID plane, dReal a, dReal b, dReal c, dReal d) pfdGeomPlaneSetParams;
 pfdGeomPlaneSetParams          dGeomPlaneSetParams;
 
-typedef void function(dGeomID plane, dVector4 result) pfdGeomPlaneGetParams;
+extern(C) alias void function(dGeomID plane, dVector4 result) pfdGeomPlaneGetParams;
 pfdGeomPlaneGetParams          dGeomPlaneGetParams;
 
-typedef dReal function(dGeomID plane, dReal x, dReal y, dReal z) pfdGeomPlanePointDepth;
+extern(C) alias dReal function(dGeomID plane, dReal x, dReal y, dReal z) pfdGeomPlanePointDepth;
 pfdGeomPlanePointDepth          dGeomPlanePointDepth;
 
-typedef dGeomID function(dSpaceID space, dReal radius, dReal length) pfdCreateCapsule;
+extern(C) alias dGeomID function(dSpaceID space, dReal radius, dReal length) pfdCreateCapsule;
 pfdCreateCapsule          dCreateCapsule;
 
-typedef void function(dGeomID ccylinder, dReal radius, dReal length) pfdGeomCapsuleSetParams;
+extern(C) alias void function(dGeomID ccylinder, dReal radius, dReal length) pfdGeomCapsuleSetParams;
 pfdGeomCapsuleSetParams          dGeomCapsuleSetParams;
 
-typedef void function(dGeomID ccylinder, dReal* radius, dReal* length) pfdGeomCapsuleGetParams;
+extern(C) alias void function(dGeomID ccylinder, dReal* radius, dReal* length) pfdGeomCapsuleGetParams;
 pfdGeomCapsuleGetParams          dGeomCapsuleGetParams;
 
-typedef dReal function(dGeomID ccylinder, dReal x, dReal y, dReal z) pfdGeomCapsulePointDepth;
+extern(C) alias dReal function(dGeomID ccylinder, dReal x, dReal y, dReal z) pfdGeomCapsulePointDepth;
 pfdGeomCapsulePointDepth          dGeomCapsulePointDepth;
 
 // For now we want to have a backwards compatible C-API, note: C++ API is not.
@@ -1006,28 +1006,28 @@
 alias dGeomCapsulePointDepth  dGeomCCylinderPointDepth;
 alias dCapsuleClass           dCCylinderClass;
 
-typedef dGeomID function(dSpaceID space, dReal radius, dReal length) pfdCreateCylinder;
+extern(C) alias dGeomID function(dSpaceID space, dReal radius, dReal length) pfdCreateCylinder;
 pfdCreateCylinder          dCreateCylinder;
 
-typedef void function(dGeomID cylinder, dReal radius, dReal length) pfdGeomCylinderSetParams;
+extern(C) alias void function(dGeomID cylinder, dReal radius, dReal length) pfdGeomCylinderSetParams;
 pfdGeomCylinderSetParams          dGeomCylinderSetParams;
 
-typedef void function(dGeomID cylinder, dReal* radius, dReal* length) pfdGeomCylinderGetParams;
+extern(C) alias void function(dGeomID cylinder, dReal* radius, dReal* length) pfdGeomCylinderGetParams;
 pfdGeomCylinderGetParams          dGeomCylinderGetParams;
 
-typedef dGeomID function(dSpaceID space, dReal length) pfdCreateRay;
+extern(C) alias dGeomID function(dSpaceID space, dReal length) pfdCreateRay;
 pfdCreateRay          dCreateRay;
 
-typedef void function(dGeomID ray, dReal length) pfdGeomRaySetLength;
+extern(C) alias void function(dGeomID ray, dReal length) pfdGeomRaySetLength;
 pfdGeomRaySetLength          dGeomRaySetLength;
 
-typedef dReal function(dGeomID ray) pfdGeomRayGetLength;
+extern(C) alias dReal function(dGeomID ray) pfdGeomRayGetLength;
 pfdGeomRayGetLength          dGeomRayGetLength;
 
-typedef void function(dGeomID ray, dReal px, dReal py, dReal pz, dReal dx, dReal dy, dReal dz) pfdGeomRaySet;
+extern(C) alias void function(dGeomID ray, dReal px, dReal py, dReal pz, dReal dx, dReal dy, dReal dz) pfdGeomRaySet;
 pfdGeomRaySet          dGeomRaySet;
 
-typedef void function(dGeomID ray, dVector3 start, dVector3 dir) pfdGeomRayGet;
+extern(C) alias void function(dGeomID ray, dVector3 start, dVector3 dir) pfdGeomRayGet;
 pfdGeomRayGet          dGeomRayGet;
 
 /*
@@ -1035,38 +1035,38 @@
  * These flags are currently only noticed by the trimesh collider, because
  * they can make a major differences there.
  */
-typedef void function(dGeomID g, int FirstContact, int BackfaceCull) pfdGeomRaySetParams;
+extern(C) alias void function(dGeomID g, int FirstContact, int BackfaceCull) pfdGeomRaySetParams;
 pfdGeomRaySetParams          dGeomRaySetParams;
 
-typedef void function(dGeomID g, int* FirstContact, int* BackfaceCull) pfdGeomRayGetParams;
+extern(C) alias void function(dGeomID g, int* FirstContact, int* BackfaceCull) pfdGeomRayGetParams;
 pfdGeomRayGetParams          dGeomRayGetParams;
 
-typedef void function(dGeomID g, int closestHit) pfdGeomRaySetClosestHit;
+extern(C) alias void function(dGeomID g, int closestHit) pfdGeomRaySetClosestHit;
 pfdGeomRaySetClosestHit          dGeomRaySetClosestHit;
 
-typedef int function(dGeomID g) pfdGeomRayGetClosestHit;
+extern(C) alias int function(dGeomID g) pfdGeomRayGetClosestHit;
 pfdGeomRayGetClosestHit          dGeomRayGetClosestHit;
 
 
-typedef dGeomID function(dSpaceID space) pfdCreateGeomTransform;
+extern(C) alias dGeomID function(dSpaceID space) pfdCreateGeomTransform;
 pfdCreateGeomTransform          dCreateGeomTransform;
 
-typedef void function(dGeomID g, dGeomID obj) pfdGeomTransformSetGeom;
+extern(C) alias void function(dGeomID g, dGeomID obj) pfdGeomTransformSetGeom;
 pfdGeomTransformSetGeom          dGeomTransformSetGeom;
 
-typedef dGeomID function(dGeomID g) pfdGeomTransformGetGeom;
+extern(C) alias dGeomID function(dGeomID g) pfdGeomTransformGetGeom;
 pfdGeomTransformGetGeom          dGeomTransformGetGeom;
 
-typedef void function(dGeomID g, int mode) pfdGeomTransformSetCleanup;
+extern(C) alias void function(dGeomID g, int mode) pfdGeomTransformSetCleanup;
 pfdGeomTransformSetCleanup          dGeomTransformSetCleanup;
 
-typedef int function(dGeomID g) pfdGeomTransformGetCleanup;
+extern(C) alias int function(dGeomID g) pfdGeomTransformGetCleanup;
 pfdGeomTransformGetCleanup          dGeomTransformGetCleanup;
 
-typedef void function(dGeomID g, int mode) pfdGeomTransformSetInfo;
+extern(C) alias void function(dGeomID g, int mode) pfdGeomTransformSetInfo;
 pfdGeomTransformSetInfo          dGeomTransformSetInfo;
 
-typedef int function(dGeomID g) pfdGeomTransformGetInfo;
+extern(C) alias int function(dGeomID g) pfdGeomTransformGetInfo;
 pfdGeomTransformGetInfo          dGeomTransformGetInfo;
 
 
@@ -1076,7 +1076,7 @@
 
 // Data storage for heightfield data.
 private struct dxHeightfieldData {}
-typedef dxHeightfieldData* dHeightfieldDataID;
+alias dxHeightfieldData* dHeightfieldDataID;
 
 
 /**
@@ -1096,7 +1096,7 @@
  *
  * @ingroup collide
  */
-typedef dReal function( void* p_user_data, int x, int z ) dHeightfieldGetHeight;
+extern(C) alias dReal function( void* p_user_data, int x, int z ) dHeightfieldGetHeight;
 
 
 
@@ -1119,7 +1119,7 @@
  *
  * @ingroup collide
  */
-typedef dGeomID function(dSpaceID space, dHeightfieldDataID data, int bPlaceable) pfdCreateHeightfield;
+extern(C) alias dGeomID function(dSpaceID space, dHeightfieldDataID data, int bPlaceable) pfdCreateHeightfield;
 pfdCreateHeightfield          dCreateHeightfield;
 
 
@@ -1135,7 +1135,7 @@
  * dGeomHeightfieldDataBuildFloat.
  * @ingroup collide
  */
-typedef dHeightfieldDataID function() pfdGeomHeightfieldDataCreate;
+extern(C) alias dHeightfieldDataID function() pfdGeomHeightfieldDataCreate;
 pfdGeomHeightfieldDataCreate          dGeomHeightfieldDataCreate;
 
 
@@ -1147,7 +1147,7 @@
  * @param d A dHeightfieldDataID created by dGeomHeightfieldDataCreate
  * @ingroup collide
  */
-typedef void function(dHeightfieldDataID d) pfdGeomHeightfieldDataDestroy;
+extern(C) alias void function(dHeightfieldDataID d) pfdGeomHeightfieldDataDestroy;
 pfdGeomHeightfieldDataDestroy          dGeomHeightfieldDataDestroy;
 
 
@@ -1191,7 +1191,7 @@
  *
  * @ingroup collide
  */
-typedef void function(dHeightfieldDataID d, void* pUserData, dHeightfieldGetHeight* pCallback, dReal width, dReal depth, int widthSamples, int depthSamples, dReal scale, dReal offset, dReal thickness, int bWrap) pfdGeomHeightfieldDataBuildCallback;
+extern(C) alias void function(dHeightfieldDataID d, void* pUserData, dHeightfieldGetHeight* pCallback, dReal width, dReal depth, int widthSamples, int depthSamples, dReal scale, dReal offset, dReal thickness, int bWrap) pfdGeomHeightfieldDataBuildCallback;
 pfdGeomHeightfieldDataBuildCallback          dGeomHeightfieldDataBuildCallback;
 
 /**
@@ -1237,7 +1237,7 @@
  *
  * @ingroup collide
  */
-typedef void function(dHeightfieldDataID d, ubyte* pHeightData, int bCopyHeightData, dReal width, dReal depth, int widthSamples, int depthSamples, dReal scale, dReal offset, dReal thickness, int bWrap) pfdGeomHeightfieldDataBuildByte;
+extern(C) alias void function(dHeightfieldDataID d, ubyte* pHeightData, int bCopyHeightData, dReal width, dReal depth, int widthSamples, int depthSamples, dReal scale, dReal offset, dReal thickness, int bWrap) pfdGeomHeightfieldDataBuildByte;
 pfdGeomHeightfieldDataBuildByte          dGeomHeightfieldDataBuildByte;
 
 /**
@@ -1283,7 +1283,7 @@
  *
  * @ingroup collide
  */
-typedef void function(dHeightfieldDataID d, short* pHeightData, int bCopyHeightData, dReal width, dReal depth, int widthSamples, int depthSamples, dReal scale, dReal offset, dReal thickness, int bWrap) pfdGeomHeightfieldDataBuildShort;
+extern(C) alias void function(dHeightfieldDataID d, short* pHeightData, int bCopyHeightData, dReal width, dReal depth, int widthSamples, int depthSamples, dReal scale, dReal offset, dReal thickness, int bWrap) pfdGeomHeightfieldDataBuildShort;
 pfdGeomHeightfieldDataBuildShort          dGeomHeightfieldDataBuildShort;
 
 /**
@@ -1331,7 +1331,7 @@
  *
  * @ingroup collide
  */
-typedef void function(dHeightfieldDataID d, float* pHeightData, int bCopyHeightData, dReal width, dReal depth, int widthSamples, int depthSamples, dReal scale, dReal offset, dReal thickness, int bWrap) pfdGeomHeightfieldDataBuildSingle;
+extern(C) alias void function(dHeightfieldDataID d, float* pHeightData, int bCopyHeightData, dReal width, dReal depth, int widthSamples, int depthSamples, dReal scale, dReal offset, dReal thickness, int bWrap) pfdGeomHeightfieldDataBuildSingle;
 pfdGeomHeightfieldDataBuildSingle          dGeomHeightfieldDataBuildSingle;
 
 /**
@@ -1379,7 +1379,7 @@
  *
  * @ingroup collide
  */
-typedef void function(dHeightfieldDataID d, double* pHeightData, int bCopyHeightData, dReal width, dReal depth, int widthSamples, int depthSamples, dReal scale, dReal offset, dReal thickness, int bWrap) pfdGeomHeightfieldDataBuildDouble;
+extern(C) alias void function(dHeightfieldDataID d, double* pHeightData, int bCopyHeightData, dReal width, dReal depth, int widthSamples, int depthSamples, dReal scale, dReal offset, dReal thickness, int bWrap) pfdGeomHeightfieldDataBuildDouble;
 pfdGeomHeightfieldDataBuildDouble          dGeomHeightfieldDataBuildDouble;
 
 /**
@@ -1399,7 +1399,7 @@
  * @param max_height The new maximum height value. Scale and offset is then applied.
  * @ingroup collide
  */
-typedef void function(dHeightfieldDataID d, dReal minHeight, dReal maxHeight) pfdGeomHeightfieldDataSetBounds;
+extern(C) alias void function(dHeightfieldDataID d, dReal minHeight, dReal maxHeight) pfdGeomHeightfieldDataSetBounds;
 pfdGeomHeightfieldDataSetBounds          dGeomHeightfieldDataSetBounds;
 
 
@@ -1413,7 +1413,7 @@
  * @param d A dHeightfieldDataID created by dGeomHeightfieldDataCreate
  * @ingroup collide
  */
-typedef void function(dGeomID g, dHeightfieldDataID d) pfdGeomHeightfieldSetHeightfieldData;
+extern(C) alias void function(dGeomID g, dHeightfieldDataID d) pfdGeomHeightfieldSetHeightfieldData;
 pfdGeomHeightfieldSetHeightfieldData          dGeomHeightfieldSetHeightfieldData;
 
 
@@ -1426,38 +1426,38 @@
  * @return The dHeightfieldDataID which may be NULL if none was assigned.
  * @ingroup collide
  */
-typedef dHeightfieldDataID function(dGeomID g) pfdGeomHeightfieldGetHeightfieldData;
+extern(C) alias dHeightfieldDataID function(dGeomID g) pfdGeomHeightfieldGetHeightfieldData;
 pfdGeomHeightfieldGetHeightfieldData          dGeomHeightfieldGetHeightfieldData;
 
 
 
 /* ************************************************************************ */
 /* utility functions */
-typedef void function(dVector3 a1, dVector3 a2, dVector3 b1, dVector3 b2, dVector3 cp1, dVector3 cp2) pfdClosestLineSegmentPoints;
+extern(C) alias void function(dVector3 a1, dVector3 a2, dVector3 b1, dVector3 b2, dVector3 cp1, dVector3 cp2) pfdClosestLineSegmentPoints;
 pfdClosestLineSegmentPoints          dClosestLineSegmentPoints;
 
-typedef int function(dVector3 _p1, dMatrix3 R1, dVector3 side1, dVector3 _p2, dMatrix3 R2, dVector3 side2) pfdBoxTouchesBox;
+extern(C) alias int function(dVector3 _p1, dMatrix3 R1, dVector3 side1, dVector3 _p2, dMatrix3 R2, dVector3 side2) pfdBoxTouchesBox;
 pfdBoxTouchesBox          dBoxTouchesBox;
 
-typedef int function(dVector3 p1, dMatrix3 R1, dVector3 side1, dVector3 p2, dMatrix3 R2, dVector3 side2, dVector3 normal, dReal* depth, int* return_code, int maxc, dContactGeom* contact, int skip) pfdBoxBox;
+extern(C) alias int function(dVector3 p1, dMatrix3 R1, dVector3 side1, dVector3 p2, dMatrix3 R2, dVector3 side2, dVector3 normal, dReal* depth, int* return_code, int maxc, dContactGeom* contact, int skip) pfdBoxBox;
 pfdBoxBox          dBoxBox;
 
-typedef void function(dGeomID geom, dReal aabb[6]) pfdInfiniteAABB;
+extern(C) alias void function(dGeomID geom, dReal aabb[6]) pfdInfiniteAABB;
 pfdInfiniteAABB          dInfiniteAABB;
 
-typedef void function() pfdInitODE;
+extern(C) alias void function() pfdInitODE;
 pfdInitODE          dInitODE;
 
-typedef void function() pfdCloseODE;
+extern(C) alias void function() pfdCloseODE;
 pfdCloseODE          dCloseODE;
 
-typedef int function(dGeomClass* classptr) pfdCreateGeomClass;
+extern(C) alias int function(dGeomClass* classptr) pfdCreateGeomClass;
 pfdCreateGeomClass          dCreateGeomClass;
 
-typedef void* function(dGeomID) pfdGeomGetClassData;
+extern(C) alias void* function(dGeomID) pfdGeomGetClassData;
 pfdGeomGetClassData          dGeomGetClassData;
 
-typedef dGeomID function(int classnum) pfdCreateGeom;
+extern(C) alias dGeomID function(int classnum) pfdCreateGeom;
 pfdCreateGeom          dCreateGeom;
 
 
Index: DerelictFT/derelict/freetype/ftfuncs.d
===================================================================
--- DerelictFT/derelict/freetype/ftfuncs.d	(revision 318)
+++ DerelictFT/derelict/freetype/ftfuncs.d	(working copy)
@@ -349,300 +349,301 @@
 
 
 // C calling convention for BOTH linux and Windows
-extern(C):
+extern(C) {
 
 
-//BEGIN Typedefs
+//BEGIN aliass
 // freetype.h (FT_FREETYPE_H)
-typedef FT_Error function( FT_Library *alibrary ) pfFT_Init_FreeType;
-typedef FT_Error function( FT_Library library ) pfFT_Done_FreeType;
-typedef FT_Error function( FT_Library library, char* filepathname, FT_Long face_index, FT_Face *aface ) pfFT_New_Face;
-typedef FT_Error function( FT_Library library, FT_Byte* file_base, FT_Long file_size, FT_Long face_index, FT_Face *aface ) pfFT_New_Memory_Face;
-typedef FT_Error function( FT_Library library, FT_Open_Args* args, FT_Long face_index, FT_Face *aface ) pfFT_Open_Face;
-typedef FT_Error function( FT_Face face, char* filepathname ) pfFT_Attach_File;
-typedef FT_Error function( FT_Face face, FT_Open_Args* parameters ) pfFT_Attach_Stream;
-typedef FT_Error function( FT_Face face ) pfFT_Done_Face;
-typedef FT_Error function( FT_Face face, FT_Int strike_index ) pfFT_Select_Size;
-typedef FT_Error function( FT_Face face, FT_Size_Request req ) pfFT_Request_Size;
-typedef FT_Error function( FT_Face face, FT_F26Dot6 char_width, FT_F26Dot6 char_height, FT_UInt horz_resolution, FT_UInt vert_resolution ) pfFT_Set_Char_Size;
-typedef FT_Error function( FT_Face face, FT_UInt pixel_width, FT_UInt pixel_height ) pfFT_Set_Pixel_Sizes;
-typedef FT_Error function( FT_Face face, FT_UInt glyph_index, FT_Int32 load_flags ) pfFT_Load_Glyph;
-typedef FT_Error function( FT_Face face, FT_ULong char_code, FT_Int32 load_flags ) pfFT_Load_Char;
-typedef void function( FT_Face face, FT_Matrix* matrix, FT_Vector* delta ) pfFT_Set_Transform;
-typedef FT_Error function( FT_GlyphSlot slot, FT_Render_Mode render_mode ) pfFT_Render_Glyph;
-typedef FT_Error function( FT_Face face, FT_UInt left_glyph, FT_UInt right_glyph, FT_UInt kern_mode, FT_Vector *akerning ) pfFT_Get_Kerning;
-typedef FT_Error function( FT_Face face, FT_Fixed point_size, FT_Int degree, FT_Fixed* akerning ) pfFT_Get_Track_Kerning;
-typedef FT_Error function( FT_Face face, FT_UInt glyph_index, FT_Pointer buffer, FT_UInt buffer_max ) pfFT_Get_Glyph_Name;
-typedef char* function( FT_Face face ) pfFT_Get_Postscript_Name;
-typedef FT_Error function( FT_Face face, FT_Encoding encoding ) pfFT_Select_Charmap;
-typedef FT_Error function( FT_Face face, FT_CharMap charmap ) pfFT_Set_Charmap;
-typedef FT_Int function( FT_CharMap charmap ) pfFT_Get_Charmap_Index;
-typedef FT_UInt function( FT_Face face, FT_ULong charcode ) pfFT_Get_Char_Index;
-typedef FT_ULong function( FT_Face face, FT_UInt *agindex ) pfFT_Get_First_Char;
-typedef FT_ULong function( FT_Face face, FT_ULong char_code, FT_UInt *agindex ) pfFT_Get_Next_Char;
-typedef FT_UInt function( FT_Face face, FT_String* glyph_name ) pfFT_Get_Name_Index;
-typedef FT_Long function( FT_Long a, FT_Long b, FT_Long c ) pfFT_MulDiv;
-typedef FT_Long function( FT_Long a, FT_Long b ) pfFT_MulFix;
-typedef FT_Long function( FT_Long a, FT_Long b ) pfFT_DivFix;
-typedef FT_Fixed function( FT_Fixed a ) pfFT_RoundFix;
-typedef FT_Fixed function( FT_Fixed a ) pfFT_CeilFix;
-typedef FT_Fixed function( FT_Fixed a ) pfFT_FloorFix;
-typedef void function( FT_Vector* vec, FT_Matrix* matrix ) pfFT_Vector_Transform;
-typedef void function( FT_Library library, FT_Int *amajor, FT_Int *aminor, FT_Int *apatch ) pfFT_Library_Version;
-typedef FT_Bool function( FT_Face face ) pfFT_Face_CheckTrueTypePatents;
-typedef FT_Bool function( FT_Face face, FT_Bool value ) pfFT_Face_SetUnpatentedHinting;
+alias FT_Error function( FT_Library *alibrary ) pfFT_Init_FreeType;
+alias FT_Error function( FT_Library library ) pfFT_Done_FreeType;
+alias FT_Error function( FT_Library library, char* filepathname, FT_Long face_index, FT_Face *aface ) pfFT_New_Face;
+alias FT_Error function( FT_Library library, FT_Byte* file_base, FT_Long file_size, FT_Long face_index, FT_Face *aface ) pfFT_New_Memory_Face;
+alias FT_Error function( FT_Library library, FT_Open_Args* args, FT_Long face_index, FT_Face *aface ) pfFT_Open_Face;
+alias FT_Error function( FT_Face face, char* filepathname ) pfFT_Attach_File;
+alias FT_Error function( FT_Face face, FT_Open_Args* parameters ) pfFT_Attach_Stream;
+alias FT_Error function( FT_Face face ) pfFT_Done_Face;
+alias FT_Error function( FT_Face face, FT_Int strike_index ) pfFT_Select_Size;
+alias FT_Error function( FT_Face face, FT_Size_Request req ) pfFT_Request_Size;
+alias FT_Error function( FT_Face face, FT_F26Dot6 char_width, FT_F26Dot6 char_height, FT_UInt horz_resolution, FT_UInt vert_resolution ) pfFT_Set_Char_Size;
+alias FT_Error function( FT_Face face, FT_UInt pixel_width, FT_UInt pixel_height ) pfFT_Set_Pixel_Sizes;
+alias FT_Error function( FT_Face face, FT_UInt glyph_index, FT_Int32 load_flags ) pfFT_Load_Glyph;
+alias FT_Error function( FT_Face face, FT_ULong char_code, FT_Int32 load_flags ) pfFT_Load_Char;
+alias void function( FT_Face face, FT_Matrix* matrix, FT_Vector* delta ) pfFT_Set_Transform;
+alias FT_Error function( FT_GlyphSlot slot, FT_Render_Mode render_mode ) pfFT_Render_Glyph;
+alias FT_Error function( FT_Face face, FT_UInt left_glyph, FT_UInt right_glyph, FT_UInt kern_mode, FT_Vector *akerning ) pfFT_Get_Kerning;
+alias FT_Error function( FT_Face face, FT_Fixed point_size, FT_Int degree, FT_Fixed* akerning ) pfFT_Get_Track_Kerning;
+alias FT_Error function( FT_Face face, FT_UInt glyph_index, FT_Pointer buffer, FT_UInt buffer_max ) pfFT_Get_Glyph_Name;
+alias char* function( FT_Face face ) pfFT_Get_Postscript_Name;
+alias FT_Error function( FT_Face face, FT_Encoding encoding ) pfFT_Select_Charmap;
+alias FT_Error function( FT_Face face, FT_CharMap charmap ) pfFT_Set_Charmap;
+alias FT_Int function( FT_CharMap charmap ) pfFT_Get_Charmap_Index;
+alias FT_UInt function( FT_Face face, FT_ULong charcode ) pfFT_Get_Char_Index;
+alias FT_ULong function( FT_Face face, FT_UInt *agindex ) pfFT_Get_First_Char;
+alias FT_ULong function( FT_Face face, FT_ULong char_code, FT_UInt *agindex ) pfFT_Get_Next_Char;
+alias FT_UInt function( FT_Face face, FT_String* glyph_name ) pfFT_Get_Name_Index;
+alias FT_Long function( FT_Long a, FT_Long b, FT_Long c ) pfFT_MulDiv;
+alias FT_Long function( FT_Long a, FT_Long b ) pfFT_MulFix;
+alias FT_Long function( FT_Long a, FT_Long b ) pfFT_DivFix;
+alias FT_Fixed function( FT_Fixed a ) pfFT_RoundFix;
+alias FT_Fixed function( FT_Fixed a ) pfFT_CeilFix;
+alias FT_Fixed function( FT_Fixed a ) pfFT_FloorFix;
+alias void function( FT_Vector* vec, FT_Matrix* matrix ) pfFT_Vector_Transform;
+alias void function( FT_Library library, FT_Int *amajor, FT_Int *aminor, FT_Int *apatch ) pfFT_Library_Version;
+alias FT_Bool function( FT_Face face ) pfFT_Face_CheckTrueTypePatents;
+alias FT_Bool function( FT_Face face, FT_Bool value ) pfFT_Face_SetUnpatentedHinting;
 
 // ftlist.h (FT_LIST_H)
-typedef FT_ListNode function( FT_List list, void* data ) pfFT_List_Find;
-typedef void function( FT_List list, FT_ListNode node ) pfFT_List_Add;
-typedef void function( FT_List list, FT_ListNode node ) pfFT_List_Insert;
-typedef void function( FT_List list, FT_ListNode node ) pfFT_List_Remove;
-typedef void function( FT_List list, FT_ListNode node ) pfFT_List_Up;
-typedef FT_Error function( FT_List list, FT_List_Iterator iterator, void* user ) pfFT_List_Iterate;
-typedef void function( FT_List list, FT_List_Destructor destroy, FT_Memory memory, void* user ) pfFT_List_Finalize;
+alias FT_ListNode function( FT_List list, void* data ) pfFT_List_Find;
+alias void function( FT_List list, FT_ListNode node ) pfFT_List_Add;
+alias void function( FT_List list, FT_ListNode node ) pfFT_List_Insert;
+alias void function( FT_List list, FT_ListNode node ) pfFT_List_Remove;
+alias void function( FT_List list, FT_ListNode node ) pfFT_List_Up;
+alias FT_Error function( FT_List list, FT_List_Iterator iterator, void* user ) pfFT_List_Iterate;
+alias void function( FT_List list, FT_List_Destructor destroy, FT_Memory memory, void* user ) pfFT_List_Finalize;
 
 // ftoutln.h (FT_OUTLINE_H, FT_STROKER_H)
-typedef FT_Error function( FT_Outline* outline, FT_Outline_Funcs* func_interface, void* user ) pfFT_Outline_Decompose;
-typedef FT_Error function( FT_Library library, FT_UInt numPoints, FT_Int numContours, FT_Outline *anoutline ) pfFT_Outline_New;
-typedef FT_Error function( FT_Memory memory, FT_UInt numPoints, FT_Int numContours, FT_Outline *anoutline ) pfFT_Outline_New_Internal;
-typedef FT_Error function( FT_Library library, FT_Outline* outline ) pfFT_Outline_Done;
-typedef FT_Error function( FT_Memory memory, FT_Outline* outline ) pfFT_Outline_Done_Internal;
-typedef FT_Error function( FT_Outline* outline ) pfFT_Outline_Check;
-typedef void function( FT_Outline* outline, FT_BBox *acbox ) pfFT_Outline_Get_CBox;
-typedef void function( FT_Outline* outline, FT_Pos xOffset, FT_Pos yOffset ) pfFT_Outline_Translate;
-typedef FT_Error function( FT_Outline* source, FT_Outline *target ) pfFT_Outline_Copy;
-typedef void function( FT_Outline* outline, FT_Matrix* matrix ) pfFT_Outline_Transform;
-typedef FT_Error function( FT_Outline* outline, FT_Pos strength ) pfFT_Outline_Embolden;
-typedef void function( FT_Outline* outline ) pfFT_Outline_Reverse;
-typedef FT_Error function( FT_Library library, FT_Outline* outline, FT_Bitmap *abitmap ) pfFT_Outline_Get_Bitmap;
-typedef FT_Error function( FT_Library library, FT_Outline* outline, FT_Raster_Params* params ) pfFT_Outline_Render;
-typedef FT_Orientation function( FT_Outline* outline ) pfFT_Outline_Get_Orientation;
+alias FT_Error function( FT_Outline* outline, FT_Outline_Funcs* func_interface, void* user ) pfFT_Outline_Decompose;
+alias FT_Error function( FT_Library library, FT_UInt numPoints, FT_Int numContours, FT_Outline *anoutline ) pfFT_Outline_New;
+alias FT_Error function( FT_Memory memory, FT_UInt numPoints, FT_Int numContours, FT_Outline *anoutline ) pfFT_Outline_New_Internal;
+alias FT_Error function( FT_Library library, FT_Outline* outline ) pfFT_Outline_Done;
+alias FT_Error function( FT_Memory memory, FT_Outline* outline ) pfFT_Outline_Done_Internal;
+alias FT_Error function( FT_Outline* outline ) pfFT_Outline_Check;
+alias void function( FT_Outline* outline, FT_BBox *acbox ) pfFT_Outline_Get_CBox;
+alias void function( FT_Outline* outline, FT_Pos xOffset, FT_Pos yOffset ) pfFT_Outline_Translate;
+alias FT_Error function( FT_Outline* source, FT_Outline *target ) pfFT_Outline_Copy;
+alias void function( FT_Outline* outline, FT_Matrix* matrix ) pfFT_Outline_Transform;
+alias FT_Error function( FT_Outline* outline, FT_Pos strength ) pfFT_Outline_Embolden;
+alias void function( FT_Outline* outline ) pfFT_Outline_Reverse;
+alias FT_Error function( FT_Library library, FT_Outline* outline, FT_Bitmap *abitmap ) pfFT_Outline_Get_Bitmap;
+alias FT_Error function( FT_Library library, FT_Outline* outline, FT_Raster_Params* params ) pfFT_Outline_Render;
+alias FT_Orientation function( FT_Outline* outline ) pfFT_Outline_Get_Orientation;
 
 // ftsizes.h (FT_SIZES_H)
-typedef FT_Error function( FT_Face face, FT_Size* size ) pfFT_New_Size;
-typedef FT_Error function( FT_Size size ) pfFT_Done_Size;
-typedef FT_Error function( FT_Size size ) pfFT_Activate_Size;
+alias FT_Error function( FT_Face face, FT_Size* size ) pfFT_New_Size;
+alias FT_Error function( FT_Size size ) pfFT_Done_Size;
+alias FT_Error function( FT_Size size ) pfFT_Activate_Size;
 
 // ftmodapi.h (FT_MODULE_H, FT_RENDER_H)
-typedef FT_Error function( FT_Library library, FT_Module_Class* clazz ) pfFT_Add_Module;
-typedef FT_Module function( FT_Library library, char* module_name ) pfFT_Get_Module;
-typedef FT_Error function( FT_Library library, FT_Module mod ) pfFT_Remove_Module;
-typedef FT_Error function( FT_Memory memory, FT_Library *alibrary ) pfFT_New_Library;
-typedef FT_Error function( FT_Library library ) pfFT_Done_Library;
-typedef void function( FT_Library library, FT_UInt hook_index, FT_DebugHook_Func debug_hook ) pfFT_Set_Debug_Hook;
-typedef void function( FT_Library library ) pfFT_Add_Default_Modules;
-typedef FT_TrueTypeEngineType function( FT_Library library ) pfFT_Get_TrueType_Engine_Type;
+alias FT_Error function( FT_Library library, FT_Module_Class* clazz ) pfFT_Add_Module;
+alias FT_Module function( FT_Library library, char* module_name ) pfFT_Get_Module;
+alias FT_Error function( FT_Library library, FT_Module mod ) pfFT_Remove_Module;
+alias FT_Error function( FT_Memory memory, FT_Library *alibrary ) pfFT_New_Library;
+alias FT_Error function( FT_Library library ) pfFT_Done_Library;
+alias void function( FT_Library library, FT_UInt hook_index, FT_DebugHook_Func debug_hook ) pfFT_Set_Debug_Hook;
+alias void function( FT_Library library ) pfFT_Add_Default_Modules;
+alias FT_TrueTypeEngineType function( FT_Library library ) pfFT_Get_TrueType_Engine_Type;
 
 // ftrender.h (FT_RENDER_H)
-typedef FT_Renderer function( FT_Library library, FT_Glyph_Format format ) pfFT_Get_Renderer;
-typedef FT_Error function( FT_Library library, FT_Renderer renderer, FT_UInt num_params, FT_Parameter* parameters ) pfFT_Set_Renderer;
+alias FT_Renderer function( FT_Library library, FT_Glyph_Format format ) pfFT_Get_Renderer;
+alias FT_Error function( FT_Library library, FT_Renderer renderer, FT_UInt num_params, FT_Parameter* parameters ) pfFT_Set_Renderer;
 
 // t1tables.h (FT_TYPE1_TABLES_H)
-typedef FT_Int function( FT_Face face ) pfFT_Has_PS_Glyph_Names;
-typedef FT_Error function( FT_Face face, PS_FontInfoRec *afont_info ) pfFT_Get_PS_Font_Info;
-typedef FT_Error function( FT_Face face, PS_PrivateRec *afont_private ) pfFT_Get_PS_Font_Private;
+alias FT_Int function( FT_Face face ) pfFT_Has_PS_Glyph_Names;
+alias FT_Error function( FT_Face face, PS_FontInfoRec *afont_info ) pfFT_Get_PS_Font_Info;
+alias FT_Error function( FT_Face face, PS_PrivateRec *afont_private ) pfFT_Get_PS_Font_Private;
 
 // tttables.h (FT_TRUETYPE_TABLES_H)
-typedef void* function( FT_Face face, FT_Sfnt_Tag tag ) pfFT_Get_Sfnt_Table;
-typedef FT_Error function( FT_Face face, FT_ULong tag, FT_Long offset, FT_Byte* buffer, FT_ULong* length ) pfFT_Load_Sfnt_Table;
-typedef FT_Error function( FT_Face face, FT_UInt table_index, FT_ULong *tag, FT_ULong *length ) pfFT_Sfnt_Table_Info;
-typedef FT_ULong function( FT_CharMap charmap ) pfFT_Get_CMap_Language_ID;
-typedef FT_ULong function( FT_CharMap charmap ) pfFT_Get_CMap_Format;
+alias void* function( FT_Face face, FT_Sfnt_Tag tag ) pfFT_Get_Sfnt_Table;
+alias FT_Error function( FT_Face face, FT_ULong tag, FT_Long offset, FT_Byte* buffer, FT_ULong* length ) pfFT_Load_Sfnt_Table;
+alias FT_Error function( FT_Face face, FT_UInt table_index, FT_ULong *tag, FT_ULong *length ) pfFT_Sfnt_Table_Info;
+alias FT_ULong function( FT_CharMap charmap ) pfFT_Get_CMap_Language_ID;
+alias FT_ULong function( FT_CharMap charmap ) pfFT_Get_CMap_Format;
 
 // ftbdf.h (FT_BDF_H)
-typedef FT_Error function( FT_Face face, char* *acharset_encoding, char* *acharset_registry ) pfFT_Get_BDF_Charset_ID;
-typedef FT_Error function( FT_Face face, char* prop_name, BDF_PropertyRec *aproperty ) pfFT_Get_BDF_Property;
+alias FT_Error function( FT_Face face, char* *acharset_encoding, char* *acharset_registry ) pfFT_Get_BDF_Charset_ID;
+alias FT_Error function( FT_Face face, char* prop_name, BDF_PropertyRec *aproperty ) pfFT_Get_BDF_Property;
 
 // ftgzip.h (FT_GZIP_H)
-typedef FT_Error function( FT_Stream stream, FT_Stream source ) pfFT_Stream_OpenGzip;
+alias FT_Error function( FT_Stream stream, FT_Stream source ) pfFT_Stream_OpenGzip;
 
 // ftlzw.h (FT_LZW_H)
-typedef FT_Error function( FT_Stream stream, FT_Stream source ) pfFT_Stream_OpenLZW;
+alias FT_Error function( FT_Stream stream, FT_Stream source ) pfFT_Stream_OpenLZW;
 
 // ftwinfnt.h (FT_WINFONTS_H)
-typedef FT_Error function( FT_Face face, FT_WinFNT_HeaderRec *aheader ) pfFT_Get_WinFNT_Header;
+alias FT_Error function( FT_Face face, FT_WinFNT_HeaderRec *aheader ) pfFT_Get_WinFNT_Header;
 
 // ftglyph.h (FT_GLYPH_H, FT_CACHE_H, FT_STROKER_H)
-typedef FT_Error function( FT_GlyphSlot slot, FT_Glyph *aglyph ) pfFT_Get_Glyph;
-typedef FT_Error function( FT_Glyph source, FT_Glyph *target ) pfFT_Glyph_Copy;
-typedef FT_Error function( FT_Glyph glyph, FT_Matrix* matrix, FT_Vector* delta ) pfFT_Glyph_Transform;
-typedef void function( FT_Glyph glyph, FT_UInt bbox_mode, FT_BBox *acbox ) pfFT_Glyph_Get_CBox;
-typedef FT_Error function( FT_Glyph* the_glyph, FT_Render_Mode render_mode, FT_Vector* origin, FT_Bool destroy ) pfFT_Glyph_To_Bitmap;
-typedef void function( FT_Glyph glyph ) pfFT_Done_Glyph;
-typedef void function( FT_Matrix* a, FT_Matrix* b ) pfFT_Matrix_Multiply;
-typedef FT_Error function( FT_Matrix* matrix ) pfFT_Matrix_Invert;
+alias FT_Error function( FT_GlyphSlot slot, FT_Glyph *aglyph ) pfFT_Get_Glyph;
+alias FT_Error function( FT_Glyph source, FT_Glyph *target ) pfFT_Glyph_Copy;
+alias FT_Error function( FT_Glyph glyph, FT_Matrix* matrix, FT_Vector* delta ) pfFT_Glyph_Transform;
+alias void function( FT_Glyph glyph, FT_UInt bbox_mode, FT_BBox *acbox ) pfFT_Glyph_Get_CBox;
+alias FT_Error function( FT_Glyph* the_glyph, FT_Render_Mode render_mode, FT_Vector* origin, FT_Bool destroy ) pfFT_Glyph_To_Bitmap;
+alias void function( FT_Glyph glyph ) pfFT_Done_Glyph;
+alias void function( FT_Matrix* a, FT_Matrix* b ) pfFT_Matrix_Multiply;
+alias FT_Error function( FT_Matrix* matrix ) pfFT_Matrix_Invert;
 
 // ftbitmap.h (FT_BITMAP_H)
-typedef void function( FT_Bitmap *abitmap ) pfFT_Bitmap_New;
-typedef FT_Error function( FT_Library library, FT_Bitmap *source, FT_Bitmap *target) pfFT_Bitmap_Copy;
-typedef FT_Error function( FT_Library library, FT_Bitmap* bitmap, FT_Pos xStrength, FT_Pos yStrength ) pfFT_Bitmap_Embolden;
-typedef FT_Error function( FT_Library library, FT_Bitmap *source, FT_Bitmap *target, FT_Int alignment ) pfFT_Bitmap_Convert;
-typedef FT_Error function( FT_Library library, FT_Bitmap *bitmap ) pfFT_Bitmap_Done;
+alias void function( FT_Bitmap *abitmap ) pfFT_Bitmap_New;
+alias FT_Error function( FT_Library library, FT_Bitmap *source, FT_Bitmap *target) pfFT_Bitmap_Copy;
+alias FT_Error function( FT_Library library, FT_Bitmap* bitmap, FT_Pos xStrength, FT_Pos yStrength ) pfFT_Bitmap_Embolden;
+alias FT_Error function( FT_Library library, FT_Bitmap *source, FT_Bitmap *target, FT_Int alignment ) pfFT_Bitmap_Convert;
+alias FT_Error function( FT_Library library, FT_Bitmap *bitmap ) pfFT_Bitmap_Done;
 
 // ftbbox.h (FT_BBOX_H)
-typedef FT_Error function( FT_Outline* outline, FT_BBox *abbox ) pfFT_Outline_Get_BBox;
+alias FT_Error function( FT_Outline* outline, FT_BBox *abbox ) pfFT_Outline_Get_BBox;
 
 // ftcache.h (FT_CACHE_H)
-typedef FT_Error function( FT_Library library, FT_UInt max_faces, FT_UInt max_sizes, FT_ULong max_bytes, FTC_Face_Requester requester, FT_Pointer req_data, FTC_Manager *amanager ) pfFTC_Manager_New;
-typedef void function( FTC_Manager manager ) pfFTC_Manager_Reset;
-typedef void function( FTC_Manager manager ) pfFTC_Manager_Done;
-typedef FT_Error function( FTC_Manager manager, FTC_FaceID face_id, FT_Face *aface ) pfFTC_Manager_LookupFace;
-typedef FT_Error function( FTC_Manager manager, FTC_Scaler scaler, FT_Size *asize ) pfFTC_Manager_LookupSize;
-typedef void function( FTC_Node node, FTC_Manager manager ) pfFTC_Node_Unref;
-typedef void function( FTC_Manager manager, FTC_FaceID face_id ) pfFTC_Manager_RemoveFaceID;
-typedef FT_Error function( FTC_Manager manager, FTC_CMapCache *acache ) pfFTC_CMapCache_New;
-typedef FT_UInt function( FTC_CMapCache cache, FTC_FaceID face_id, FT_Int cmap_index, FT_UInt32 char_code ) pfFTC_CMapCache_Lookup;
-typedef FT_Error function( FTC_Manager manager, FTC_ImageCache *acache ) pfFTC_ImageCache_New;
-typedef FT_Error function( FTC_ImageCache cache, FTC_ImageType type, FT_UInt gindex, FT_Glyph *aglyph, FTC_Node *anode ) pfFTC_ImageCache_Lookup;
-typedef FT_Error function( FTC_ImageCache cache, FTC_Scaler scaler, FT_ULong load_flags, FT_UInt gindex, FT_Glyph *aglyph, FTC_Node *anode ) pfFTC_ImageCache_LookupScaler;
-typedef FT_Error function( FTC_Manager manager, FTC_SBitCache *acache ) pfFTC_SBitCache_New;
-typedef FT_Error function( FTC_SBitCache cache, FTC_ImageType type, FT_UInt gindex, FTC_SBit *sbit, FTC_Node *anode ) pfFTC_SBitCache_Lookup;
-typedef FT_Error function( FTC_SBitCache cache, FTC_Scaler scaler, FT_ULong load_flags, FT_UInt gindex, FTC_SBit *sbit,FTC_Node *anode ) pfFTC_SBitCache_LookupScaler;
+alias FT_Error function( FT_Library library, FT_UInt max_faces, FT_UInt max_sizes, FT_ULong max_bytes, FTC_Face_Requester requester, FT_Pointer req_data, FTC_Manager *amanager ) pfFTC_Manager_New;
+alias void function( FTC_Manager manager ) pfFTC_Manager_Reset;
+alias void function( FTC_Manager manager ) pfFTC_Manager_Done;
+alias FT_Error function( FTC_Manager manager, FTC_FaceID face_id, FT_Face *aface ) pfFTC_Manager_LookupFace;
+alias FT_Error function( FTC_Manager manager, FTC_Scaler scaler, FT_Size *asize ) pfFTC_Manager_LookupSize;
+alias void function( FTC_Node node, FTC_Manager manager ) pfFTC_Node_Unref;
+alias void function( FTC_Manager manager, FTC_FaceID face_id ) pfFTC_Manager_RemoveFaceID;
+alias FT_Error function( FTC_Manager manager, FTC_CMapCache *acache ) pfFTC_CMapCache_New;
+alias FT_UInt function( FTC_CMapCache cache, FTC_FaceID face_id, FT_Int cmap_index, FT_UInt32 char_code ) pfFTC_CMapCache_Lookup;
+alias FT_Error function( FTC_Manager manager, FTC_ImageCache *acache ) pfFTC_ImageCache_New;
+alias FT_Error function( FTC_ImageCache cache, FTC_ImageType type, FT_UInt gindex, FT_Glyph *aglyph, FTC_Node *anode ) pfFTC_ImageCache_Lookup;
+alias FT_Error function( FTC_ImageCache cache, FTC_Scaler scaler, FT_ULong load_flags, FT_UInt gindex, FT_Glyph *aglyph, FTC_Node *anode ) pfFTC_ImageCache_LookupScaler;
+alias FT_Error function( FTC_Manager manager, FTC_SBitCache *acache ) pfFTC_SBitCache_New;
+alias FT_Error function( FTC_SBitCache cache, FTC_ImageType type, FT_UInt gindex, FTC_SBit *sbit, FTC_Node *anode ) pfFTC_SBitCache_Lookup;
+alias FT_Error function( FTC_SBitCache cache, FTC_Scaler scaler, FT_ULong load_flags, FT_UInt gindex, FTC_SBit *sbit,FTC_Node *anode ) pfFTC_SBitCache_LookupScaler;
 
 // ftmm.h (FT_MULTIPLE_MASTERS_H)
-typedef FT_Error function( FT_Face face, FT_Multi_Master *amaster ) pfFT_Get_Multi_Master;
-typedef FT_Error function( FT_Face face, FT_MM_Var* *amaster ) pfFT_Get_MM_Var;
-typedef FT_Error function( FT_Face face, FT_UInt num_coords, FT_Long* coords ) pfFT_Set_MM_Design_Coordinates;
-typedef FT_Error function( FT_Face face, FT_UInt num_coords, FT_Fixed* coords ) pfFT_Set_Var_Design_Coordinates;
-typedef FT_Error function( FT_Face face, FT_UInt num_coords, FT_Fixed* coords ) pfFT_Set_MM_Blend_Coordinates;
-typedef FT_Error function( FT_Face face, FT_UInt num_coords, FT_Fixed* coords ) pfFT_Set_Var_Blend_Coordinates;
+alias FT_Error function( FT_Face face, FT_Multi_Master *amaster ) pfFT_Get_Multi_Master;
+alias FT_Error function( FT_Face face, FT_MM_Var* *amaster ) pfFT_Get_MM_Var;
+alias FT_Error function( FT_Face face, FT_UInt num_coords, FT_Long* coords ) pfFT_Set_MM_Design_Coordinates;
+alias FT_Error function( FT_Face face, FT_UInt num_coords, FT_Fixed* coords ) pfFT_Set_Var_Design_Coordinates;
+alias FT_Error function( FT_Face face, FT_UInt num_coords, FT_Fixed* coords ) pfFT_Set_MM_Blend_Coordinates;
+alias FT_Error function( FT_Face face, FT_UInt num_coords, FT_Fixed* coords ) pfFT_Set_Var_Blend_Coordinates;
 
 // ftsnames.h (FT_SFNT_NAMES_H)
-typedef FT_UInt function( FT_Face face ) pfFT_Get_Sfnt_Name_Count;
-typedef FT_Error function( FT_Face face, FT_UInt idx, FT_SfntName *aname ) pfFT_Get_Sfnt_Name;
+alias FT_UInt function( FT_Face face ) pfFT_Get_Sfnt_Name_Count;
+alias FT_Error function( FT_Face face, FT_UInt idx, FT_SfntName *aname ) pfFT_Get_Sfnt_Name;
 
 // ftotval.h (FT_OPENTYPE_VALIDATE_H)
-typedef FT_Error function( FT_Face face, FT_UInt validation_flags, FT_Bytes *BASE_table, FT_Bytes *GDEF_table, FT_Bytes *GPOS_table, FT_Bytes *GSUB_table, FT_Bytes *JSTF_table ) pfFT_OpenType_Validate;
-typedef void function ( FT_Face face, FT_Bytes table ) pfFT_OpenType_Free;
+alias FT_Error function( FT_Face face, FT_UInt validation_flags, FT_Bytes *BASE_table, FT_Bytes *GDEF_table, FT_Bytes *GPOS_table, FT_Bytes *GSUB_table, FT_Bytes *JSTF_table ) pfFT_OpenType_Validate;
+alias void function ( FT_Face face, FT_Bytes table ) pfFT_OpenType_Free;
 // ftotval.h (FT_OPENTYPE_VALIDATE_H)
 
 // ftgxval.h (FT_GX_VALIDATE_H)
-typedef FT_Error function( FT_Face face, FT_UInt validation_flags, FT_Bytes tables[FT_VALIDATE_GX_LENGTH], FT_UInt table_length ) pfFT_TrueTypeGX_Validate;
-typedef void function( FT_Face face, FT_Bytes table ) pfFT_TrueTypeGX_Free;
-typedef FT_Error function( FT_Face face, FT_UInt validation_flags, FT_Bytes *ckern_table ) pfFT_ClassicKern_Validate;
-typedef void function( FT_Face face, FT_Bytes table ) pfFT_ClassicKern_Free;
+alias FT_Error function( FT_Face face, FT_UInt validation_flags, FT_Bytes tables[FT_VALIDATE_GX_LENGTH], FT_UInt table_length ) pfFT_TrueTypeGX_Validate;
+alias void function( FT_Face face, FT_Bytes table ) pfFT_TrueTypeGX_Free;
+alias FT_Error function( FT_Face face, FT_UInt validation_flags, FT_Bytes *ckern_table ) pfFT_ClassicKern_Validate;
+alias void function( FT_Face face, FT_Bytes table ) pfFT_ClassicKern_Free;
 
 // ftpfr (FT_PFR_H)
-typedef FT_Error function( FT_Face face, FT_UInt *aoutline_resolution, FT_UInt *ametrics_resolution, FT_Fixed *ametrics_x_scale, FT_Fixed *ametrics_y_scale ) pfFT_Get_PFR_Metrics;
-typedef FT_Error function( FT_Face face, FT_UInt left, FT_UInt right, FT_Vector *avector ) pfFT_Get_PFR_Kerning;
-typedef FT_Error function( FT_Face face, FT_UInt gindex, FT_Pos *aadvance ) pfFT_Get_PFR_Advance;
+alias FT_Error function( FT_Face face, FT_UInt *aoutline_resolution, FT_UInt *ametrics_resolution, FT_Fixed *ametrics_x_scale, FT_Fixed *ametrics_y_scale ) pfFT_Get_PFR_Metrics;
+alias FT_Error function( FT_Face face, FT_UInt left, FT_UInt right, FT_Vector *avector ) pfFT_Get_PFR_Kerning;
+alias FT_Error function( FT_Face face, FT_UInt gindex, FT_Pos *aadvance ) pfFT_Get_PFR_Advance;
 
 // ftstroke.h (FT_STROKER_H)
-typedef FT_StrokerBorder function( FT_Outline* outline ) pfFT_Outline_GetInsideBorder;
-typedef FT_StrokerBorder function( FT_Outline* outline ) pfFT_Outline_GetOutsideBorder;
-typedef FT_Error function( FT_Memory memory, FT_Stroker *astroker ) pfFT_Stroker_New;
-typedef void function( FT_Stroker stroker, FT_Fixed radius, FT_Stroker_LineCap line_cap, FT_Stroker_LineJoin line_join, FT_Fixed miter_limit ) pfFT_Stroker_Set;
-typedef void function( FT_Stroker stroker ) pfFT_Stroker_Rewind;
-typedef FT_Error function( FT_Stroker stroker, FT_Outline* outline, FT_Bool opened ) pfFT_Stroker_ParseOutline;
-typedef FT_Error function( FT_Stroker stroker, FT_Vector* to, FT_Bool open ) pfFT_Stroker_BeginSubPath;
-typedef FT_Error function( FT_Stroker stroker ) pfFT_Stroker_EndSubPath;
-typedef FT_Error function( FT_Stroker stroker, FT_Vector* to ) pfFT_Stroker_LineTo;
-typedef FT_Error function( FT_Stroker stroker, FT_Vector* control, FT_Vector* to ) pfFT_Stroker_ConicTo;
-typedef FT_Error function( FT_Stroker stroker, FT_Vector* control1, FT_Vector* control2, FT_Vector* to ) pfFT_Stroker_CubicTo;
-typedef FT_Error function( FT_Stroker stroker, FT_StrokerBorder border, FT_UInt *anum_points, FT_UInt *anum_contours ) pfFT_Stroker_GetBorderCounts;
-typedef void function( FT_Stroker stroker, FT_StrokerBorder border, FT_Outline* outline ) pfFT_Stroker_ExportBorder;
-typedef FT_Error function( FT_Stroker stroker, FT_UInt *anum_points, FT_UInt *anum_contours ) pfFT_Stroker_GetCounts;
-typedef void function( FT_Stroker stroker, FT_Outline* outline ) pfFT_Stroker_Export;
-typedef void function( FT_Stroker stroker ) pfFT_Stroker_Done;
-typedef FT_Error function( FT_Glyph *pglyph, FT_Stroker stroker, FT_Bool destroy ) pfFT_Glyph_Stroke;
-typedef FT_Error function( FT_Glyph *pglyph, FT_Stroker stroker, FT_Bool inside, FT_Bool destroy ) pfFT_Glyph_StrokeBorder;
+alias FT_StrokerBorder function( FT_Outline* outline ) pfFT_Outline_GetInsideBorder;
+alias FT_StrokerBorder function( FT_Outline* outline ) pfFT_Outline_GetOutsideBorder;
+alias FT_Error function( FT_Memory memory, FT_Stroker *astroker ) pfFT_Stroker_New;
+alias void function( FT_Stroker stroker, FT_Fixed radius, FT_Stroker_LineCap line_cap, FT_Stroker_LineJoin line_join, FT_Fixed miter_limit ) pfFT_Stroker_Set;
+alias void function( FT_Stroker stroker ) pfFT_Stroker_Rewind;
+alias FT_Error function( FT_Stroker stroker, FT_Outline* outline, FT_Bool opened ) pfFT_Stroker_ParseOutline;
+alias FT_Error function( FT_Stroker stroker, FT_Vector* to, FT_Bool open ) pfFT_Stroker_BeginSubPath;
+alias FT_Error function( FT_Stroker stroker ) pfFT_Stroker_EndSubPath;
+alias FT_Error function( FT_Stroker stroker, FT_Vector* to ) pfFT_Stroker_LineTo;
+alias FT_Error function( FT_Stroker stroker, FT_Vector* control, FT_Vector* to ) pfFT_Stroker_ConicTo;
+alias FT_Error function( FT_Stroker stroker, FT_Vector* control1, FT_Vector* control2, FT_Vector* to ) pfFT_Stroker_CubicTo;
+alias FT_Error function( FT_Stroker stroker, FT_StrokerBorder border, FT_UInt *anum_points, FT_UInt *anum_contours ) pfFT_Stroker_GetBorderCounts;
+alias void function( FT_Stroker stroker, FT_StrokerBorder border, FT_Outline* outline ) pfFT_Stroker_ExportBorder;
+alias FT_Error function( FT_Stroker stroker, FT_UInt *anum_points, FT_UInt *anum_contours ) pfFT_Stroker_GetCounts;
+alias void function( FT_Stroker stroker, FT_Outline* outline ) pfFT_Stroker_Export;
+alias void function( FT_Stroker stroker ) pfFT_Stroker_Done;
+alias FT_Error function( FT_Glyph *pglyph, FT_Stroker stroker, FT_Bool destroy ) pfFT_Glyph_Stroke;
+alias FT_Error function( FT_Glyph *pglyph, FT_Stroker stroker, FT_Bool inside, FT_Bool destroy ) pfFT_Glyph_StrokeBorder;
 
 // ftsynth.h (FT_SYNTHESIS_H) (WARNING: ALPHA CODE)
-typedef FT_Error function( FT_GlyphSlot slot ) pfFT_GlyphSlot_Own_Bitmap;
-typedef void function( FT_GlyphSlot slot ) pfFT_GlyphSlot_Embolden;
-typedef void function( FT_GlyphSlot slot ) pfFT_GlyphSlot_Oblique;
+alias FT_Error function( FT_GlyphSlot slot ) pfFT_GlyphSlot_Own_Bitmap;
+alias void function( FT_GlyphSlot slot ) pfFT_GlyphSlot_Embolden;
+alias void function( FT_GlyphSlot slot ) pfFT_GlyphSlot_Oblique;
 
 // ftxf86.h (FT_XFREE86_H)
-typedef char* function( FT_Face face ) pfFT_Get_X11_Font_Format;
+alias char* function( FT_Face face ) pfFT_Get_X11_Font_Format;
 
 // fttrigon.h (FT_TRIGONOMETRY_H)
-typedef FT_Fixed function( FT_Angle angle ) pfFT_Sin;
-typedef FT_Fixed function( FT_Angle angle ) pfFT_Cos;
-typedef FT_Fixed function( FT_Angle angle ) pfFT_Tan;
-typedef FT_Angle function( FT_Fixed x,FT_Fixed y ) pfFT_Atan2;
-typedef FT_Angle function( FT_Angle angle1, FT_Angle angle2 ) pfFT_Angle_Diff;
-typedef void function( FT_Vector* vec, FT_Angle angle ) pfFT_Vector_Unit;
-typedef void function( FT_Vector* vec, FT_Angle angle ) pfFT_Vector_Rotate;
-typedef FT_Fixed function( FT_Vector* vec ) pfFT_Vector_Length;
-typedef void function( FT_Vector* vec, FT_Fixed *length, FT_Angle *angle ) pfFT_Vector_Polarize;
-typedef void function( FT_Vector* vec, FT_Fixed length, FT_Angle angle ) pfFT_Vector_From_Polar;
+alias FT_Fixed function( FT_Angle angle ) pfFT_Sin;
+alias FT_Fixed function( FT_Angle angle ) pfFT_Cos;
+alias FT_Fixed function( FT_Angle angle ) pfFT_Tan;
+alias FT_Angle function( FT_Fixed x,FT_Fixed y ) pfFT_Atan2;
+alias FT_Angle function( FT_Angle angle1, FT_Angle angle2 ) pfFT_Angle_Diff;
+alias void function( FT_Vector* vec, FT_Angle angle ) pfFT_Vector_Unit;
+alias void function( FT_Vector* vec, FT_Angle angle ) pfFT_Vector_Rotate;
+alias FT_Fixed function( FT_Vector* vec ) pfFT_Vector_Length;
+alias void function( FT_Vector* vec, FT_Fixed *length, FT_Angle *angle ) pfFT_Vector_Polarize;
+alias void function( FT_Vector* vec, FT_Fixed length, FT_Angle angle ) pfFT_Vector_From_Polar;
 
 // ftlcdfil.h (FT_LCD_FILTER_H)
-typedef FT_Error function( FT_Library library, FT_LcdFilter filter) pfFT_Library_SetLcdFilter;
+alias FT_Error function( FT_Library library, FT_LcdFilter filter) pfFT_Library_SetLcdFilter;
 
 // ftgasp.h (FT_GASP_H)
-typedef FT_Int function( FT_Face face, FT_UInt ppem ) pfFT_Get_Gasp;
+alias FT_Int function( FT_Face face, FT_UInt ppem ) pfFT_Get_Gasp;
 
 /+ other
-typedef FT_Error function( FT_Memory memory, FT_Long size, void* *P ) pfFT_Alloc;
-typedef FT_Error function( FT_Memory memory, FT_Long size, void* *p ) pfFT_QAlloc;
-typedef FT_Error function( FT_Memory memory, FT_Long current, FT_Long size, void* *P ) pfFT_Realloc;
-typedef FT_Error function( FT_Memory memory, FT_Long current, FT_Long size, void* *p ) pfFT_QRealloc;
-typedef void function( FT_Memory memory, void* *P ) pfFT_Free;
-typedef FT_Error function( FT_Memory memory, FT_GlyphLoader *aloader ) pfFT_GlyphLoader_New;
-typedef FT_Error function( FT_GlyphLoader loader ) pfFT_GlyphLoader_CreateExtra;
-typedef void function( FT_GlyphLoader loader ) pfFT_GlyphLoader_Done;
-typedef void function( FT_GlyphLoader loader ) pfFT_GlyphLoader_Reset;
-typedef void function( FT_GlyphLoader loader ) pfFT_GlyphLoader_Rewind;
-typedef FT_Error function( FT_GlyphLoader loader, FT_UInt n_points, FT_UInt n_contours ) pfFT_GlyphLoader_CheckPoints;
-typedef FT_Error function( FT_GlyphLoader loader, FT_UInt n_subs ) pfFT_GlyphLoader_CheckSubGlyphs;
-typedef void function( FT_GlyphLoader loader ) pfFT_GlyphLoader_Prepare;
-typedef void function( FT_GlyphLoader loader ) pfFT_GlyphLoader_Add;
-typedef FT_Error function( FT_GlyphLoader target, FT_GlyphLoader source ) pfFT_GlyphLoader_CopyPoints;
-typedef FT_Pointer function( FT_ServiceDesc service_descriptors, char* service_id ) pfft_service_list_lookup;
-typedef FT_Error function( FT_CMap_Class clazz, FT_Pointer init_data, FT_CharMap charmap, FT_CMap *acmap ) pfFT_CMap_New;
-typedef void function( FT_CMap cmap ) pfFT_CMap_Done;
-typedef void* function( FT_Library library, char* mod_name ) pfFT_Get_Module_Interface;
-typedef FT_Pointer function( FT_Module mod, char* service_id ) pfft_module_get_service;
-typedef FT_Error function( FT_Face face, FT_GlyphSlot *aslot ) pfFT_New_GlyphSlot;
-typedef void function( FT_GlyphSlot slot ) pfFT_Done_GlyphSlot;
-typedef void function( FT_GlyphSlot slot ) pfft_glyphslot_free_bitmap;
-typedef FT_Error function( FT_GlyphSlot slot, FT_ULong size ) pfft_glyphslot_alloc_bitmap;
-typedef void function( FT_GlyphSlot slot, FT_Byte* buffer ) pfft_glyphslot_set_bitmap;
-typedef FT_Renderer function( FT_Library library, FT_Glyph_Format format, FT_ListNode* node ) pfFT_Lookup_Renderer;
-typedef FT_Error function( FT_Library library, FT_GlyphSlot slot, FT_Render_Mode render_mode ) pfFT_Render_Glyph_Internal;
-typedef FT_Memory function() pfFT_New_Memory;
-typedef void function( FT_Memory memory ) pfFT_Done_Memory;
-typedef FT_Error function( FT_Stream stream, char* filepathname ) pfFT_Stream_Open;
-typedef FT_Error function( FT_Library library, FT_Open_Args* args, FT_Stream *astream ) pfFT_Stream_New;
-typedef void function( FT_Stream stream, FT_Int external ) pfFT_Stream_Free;
-typedef void function( FT_Stream stream, FT_Byte* base, FT_ULong size ) pfFT_Stream_OpenMemory;
-typedef void function( FT_Stream stream ) pfFT_Stream_Close;
-typedef FT_Error function( FT_Stream stream, FT_ULong pos ) pfFT_Stream_Seek;
-typedef FT_Error function( FT_Stream stream, FT_Long distance ) pfFT_Stream_Skip;
-typedef FT_Long function( FT_Stream stream ) pfFT_Stream_Pos;
-typedef FT_Error function( FT_Stream stream, FT_Byte* buffer, FT_ULong count ) pfFT_Stream_Read;
-typedef FT_Error function( FT_Stream stream, FT_ULong pos, FT_Byte* buffer, FT_ULong count ) pfFT_Stream_ReadAt;
-typedef FT_ULong function( FT_Stream stream, FT_Byte* buffer, FT_ULong count ) pfFT_Stream_TryRead;
-typedef FT_Error function( FT_Stream stream, FT_ULong count ) pfFT_Stream_EnterFrame;
-typedef void function( FT_Stream stream ) pfFT_Stream_ExitFrame;
-typedef FT_Error function( FT_Stream stream, FT_ULong count, FT_Byte** pbytes ) pfFT_Stream_ExtractFrame;
-typedef void function( FT_Stream stream, FT_Byte** pbytes ) pfFT_Stream_ReleaseFrame;
-typedef FT_Char function( FT_Stream stream ) pfFT_Stream_GetChar;
-typedef FT_Short function( FT_Stream stream ) pfFT_Stream_GetShort;
-typedef FT_Long function( FT_Stream stream ) pfFT_Stream_GetOffset;
-typedef FT_Long function( FT_Stream stream ) pfFT_Stream_GetLong;
-typedef FT_Short function( FT_Stream stream ) pfFT_Stream_GetShortLE;
-typedef FT_Long function( FT_Stream stream ) pfFT_Stream_GetLongLE;
-typedef FT_Char function( FT_Stream stream, FT_Error* error ) pfFT_Stream_ReadChar;
-typedef FT_Short function( FT_Stream stream, FT_Error* error ) pfFT_Stream_ReadShort;
-typedef FT_Long function( FT_Stream stream, FT_Error* error ) pfFT_Stream_ReadOffset;
-typedef FT_Long function( FT_Stream stream, FT_Error* error ) pfFT_Stream_ReadLong;
-typedef FT_Short function( FT_Stream stream, FT_Error* error ) pfFT_Stream_ReadShortLE;
-typedef FT_Long function( FT_Stream stream, FT_Error* error ) pfFT_Stream_ReadLongLE;
-typedef FT_Error function( FT_Stream stream, FT_Frame_Field* fields, void* structure ) pfFT_Stream_ReadFields;
-typedef FT_Int function() pfFT_Trace_Get_Count;
-typedef char* function( FT_Int idx ) pfFT_Trace_Get_Name;
-typedef void function() pfft_debug_init;
-typedef FT_Int32 function( FT_Int32 x ) pfFT_SqrtFixed;
-typedef void function( FT_Library library, FT_Stream stream, char* base_name, char** new_names, FT_Long* offsets, FT_Error* errors ) pfFT_Raccess_Guess;
-typedef FT_Error function( FT_Library library, FT_Stream stream, FT_Long rfork_offset, FT_Long *map_offset, FT_Long *rdata_pos ) pfFT_Raccess_Get_HeaderInfo;
-typedef FT_Error function( FT_Library library, FT_Stream stream, FT_Long map_offset, FT_Long rdata_pos, FT_Long tag, FT_Long **offsets, FT_Long *count ) pfFT_Raccess_Get_DataOffsets;
-typedef void function( FT_Validator valid, FT_Byte* base, FT_Byte* limit, FT_ValidationLevel level ) pfft_validator_init;
-typedef FT_Int function( FT_Validator valid ) pfft_validator_run;
-typedef void function( FT_Validator valid, FT_Error error ) pfft_validator_error;
-+/
-//END Typedefs
+alias FT_Error function( FT_Memory memory, FT_Long size, void* *P ) pfFT_Alloc;
+alias FT_Error function( FT_Memory memory, FT_Long size, void* *p ) pfFT_QAlloc;
+alias FT_Error function( FT_Memory memory, FT_Long current, FT_Long size, void* *P ) pfFT_Realloc;
+alias FT_Error function( FT_Memory memory, FT_Long current, FT_Long size, void* *p ) pfFT_QRealloc;
+alias void function( FT_Memory memory, void* *P ) pfFT_Free;
+alias FT_Error function( FT_Memory memory, FT_GlyphLoader *aloader ) pfFT_GlyphLoader_New;
+alias FT_Error function( FT_GlyphLoader loader ) pfFT_GlyphLoader_CreateExtra;
+alias void function( FT_GlyphLoader loader ) pfFT_GlyphLoader_Done;
+alias void function( FT_GlyphLoader loader ) pfFT_GlyphLoader_Reset;
+alias void function( FT_GlyphLoader loader ) pfFT_GlyphLoader_Rewind;
+alias FT_Error function( FT_GlyphLoader loader, FT_UInt n_points, FT_UInt n_contours ) pfFT_GlyphLoader_CheckPoints;
+alias FT_Error function( FT_GlyphLoader loader, FT_UInt n_subs ) pfFT_GlyphLoader_CheckSubGlyphs;
+alias void function( FT_GlyphLoader loader ) pfFT_GlyphLoader_Prepare;
+alias void function( FT_GlyphLoader loader ) pfFT_GlyphLoader_Add;
+alias FT_Error function( FT_GlyphLoader target, FT_GlyphLoader source ) pfFT_GlyphLoader_CopyPoints;
+alias FT_Pointer function( FT_ServiceDesc service_descriptors, char* service_id ) pfft_service_list_lookup;
+alias FT_Error function( FT_CMap_Class clazz, FT_Pointer init_data, FT_CharMap charmap, FT_CMap *acmap ) pfFT_CMap_New;
+alias void function( FT_CMap cmap ) pfFT_CMap_Done;
+alias void* function( FT_Library library, char* mod_name ) pfFT_Get_Module_Interface;
+alias FT_Pointer function( FT_Module mod, char* service_id ) pfft_module_get_service;
+alias FT_Error function( FT_Face face, FT_GlyphSlot *aslot ) pfFT_New_GlyphSlot;
+alias void function( FT_GlyphSlot slot ) pfFT_Done_GlyphSlot;
+alias void function( FT_GlyphSlot slot ) pfft_glyphslot_free_bitmap;
+alias FT_Error function( FT_GlyphSlot slot, FT_ULong size ) pfft_glyphslot_alloc_bitmap;
+alias void function( FT_GlyphSlot slot, FT_Byte* buffer ) pfft_glyphslot_set_bitmap;
+alias FT_Renderer function( FT_Library library, FT_Glyph_Format format, FT_ListNode* node ) pfFT_Lookup_Renderer;
+alias FT_Error function( FT_Library library, FT_GlyphSlot slot, FT_Render_Mode render_mode ) pfFT_Render_Glyph_Internal;
+alias FT_Memory function() pfFT_New_Memory;
+alias void function( FT_Memory memory ) pfFT_Done_Memory;
+alias FT_Error function( FT_Stream stream, char* filepathname ) pfFT_Stream_Open;
+alias FT_Error function( FT_Library library, FT_Open_Args* args, FT_Stream *astream ) pfFT_Stream_New;
+alias void function( FT_Stream stream, FT_Int external ) pfFT_Stream_Free;
+alias void function( FT_Stream stream, FT_Byte* base, FT_ULong size ) pfFT_Stream_OpenMemory;
+alias void function( FT_Stream stream ) pfFT_Stream_Close;
+alias FT_Error function( FT_Stream stream, FT_ULong pos ) pfFT_Stream_Seek;
+alias FT_Error function( FT_Stream stream, FT_Long distance ) pfFT_Stream_Skip;
+alias FT_Long function( FT_Stream stream ) pfFT_Stream_Pos;
+alias FT_Error function( FT_Stream stream, FT_Byte* buffer, FT_ULong count ) pfFT_Stream_Read;
+alias FT_Error function( FT_Stream stream, FT_ULong pos, FT_Byte* buffer, FT_ULong count ) pfFT_Stream_ReadAt;
+alias FT_ULong function( FT_Stream stream, FT_Byte* buffer, FT_ULong count ) pfFT_Stream_TryRead;
+alias FT_Error function( FT_Stream stream, FT_ULong count ) pfFT_Stream_EnterFrame;
+alias void function( FT_Stream stream ) pfFT_Stream_ExitFrame;
+alias FT_Error function( FT_Stream stream, FT_ULong count, FT_Byte** pbytes ) pfFT_Stream_ExtractFrame;
+alias void function( FT_Stream stream, FT_Byte** pbytes ) pfFT_Stream_ReleaseFrame;
+alias FT_Char function( FT_Stream stream ) pfFT_Stream_GetChar;
+alias FT_Short function( FT_Stream stream ) pfFT_Stream_GetShort;
+alias FT_Long function( FT_Stream stream ) pfFT_Stream_GetOffset;
+alias FT_Long function( FT_Stream stream ) pfFT_Stream_GetLong;
+alias FT_Short function( FT_Stream stream ) pfFT_Stream_GetShortLE;
+alias FT_Long function( FT_Stream stream ) pfFT_Stream_GetLongLE;
+alias FT_Char function( FT_Stream stream, FT_Error* error ) pfFT_Stream_ReadChar;
+alias FT_Short function( FT_Stream stream, FT_Error* error ) pfFT_Stream_ReadShort;
+alias FT_Long function( FT_Stream stream, FT_Error* error ) pfFT_Stream_ReadOffset;
+alias FT_Long function( FT_Stream stream, FT_Error* error ) pfFT_Stream_ReadLong;
+alias FT_Short function( FT_Stream stream, FT_Error* error ) pfFT_Stream_ReadShortLE;
+alias FT_Long function( FT_Stream stream, FT_Error* error ) pfFT_Stream_ReadLongLE;
+alias FT_Error function( FT_Stream stream, FT_Frame_Field* fields, void* structure ) pfFT_Stream_ReadFields;
+alias FT_Int function() pfFT_Trace_Get_Count;
+alias char* function( FT_Int idx ) pfFT_Trace_Get_Name;
+alias void function() pfft_debug_init;
+alias FT_Int32 function( FT_Int32 x ) pfFT_SqrtFixed;
+alias void function( FT_Library library, FT_Stream stream, char* base_name, char** new_names, FT_Long* offsets, FT_Error* errors ) pfFT_Raccess_Guess;
+alias FT_Error function( FT_Library library, FT_Stream stream, FT_Long rfork_offset, FT_Long *map_offset, FT_Long *rdata_pos ) pfFT_Raccess_Get_HeaderInfo;
+alias FT_Error function( FT_Library library, FT_Stream stream, FT_Long map_offset, FT_Long rdata_pos, FT_Long tag, FT_Long **offsets, FT_Long *count ) pfFT_Raccess_Get_DataOffsets;
+alias void function( FT_Validator valid, FT_Byte* base, FT_Byte* limit, FT_ValidationLevel level ) pfft_validator_init;
+alias FT_Int function( FT_Validator valid ) pfft_validator_run;
+alias void function( FT_Validator valid, FT_Error error ) pfft_validator_error;
++/
+}
+//END aliass
 
 
 //BEGIN Symbols
Index: DerelictFT/derelict/freetype/sftfuncs.d
===================================================================
--- DerelictFT/derelict/freetype/sftfuncs.d	(revision 318)
+++ DerelictFT/derelict/freetype/sftfuncs.d	(working copy)
@@ -329,4 +329,4 @@
 void FT_validator_init( FT_Validator valid, FT_Byte* base, FT_Byte* limit, FT_ValidationLevel level );
 FT_Int FT_validator_run( FT_Validator valid );
 void FT_validator_error( FT_Validator valid, FT_Error error );
-*/
\ No newline at end of file
+*/
Index: DerelictOgg/derelict/ogg/ogg.d
===================================================================
--- DerelictOgg/derelict/ogg/ogg.d	(revision 318)
+++ DerelictOgg/derelict/ogg/ogg.d	(working copy)
@@ -31,7 +31,7 @@
  */
 module derelict.ogg.ogg;
 
-private 
+private
 {
 	import derelict.util.loader;
 	import derelict.ogg.oggtypes;
@@ -134,143 +134,116 @@
 extern (C)
 {
     // Ogg BITSTREAM PRIMITIVES: bitstream
-    typedef void function(oggpack_buffer *b) pfoggpack_writeinit;
-    typedef void function(oggpack_buffer *b, int  bits) pfoggpack_writetrunc;
-    typedef void function(oggpack_buffer *b) pfoggpack_writealign;
-    typedef void function(oggpack_buffer *b, void *source, int bits) pfoggpack_writecopy;
-    typedef void function(oggpack_buffer *b) pfoggpack_reset;
-    typedef void function(oggpack_buffer *b) pfoggpack_writeclear;
-    typedef void function(oggpack_buffer *b, ubyte *buf, int bytes) pfoggpack_readinit;
-    typedef void function(oggpack_buffer *b, uint value, int bits) pfoggpack_write;
-    typedef int  function(oggpack_buffer *b, int bits) pfoggpack_look;
-    typedef int  function(oggpack_buffer *b) pfoggpack_look1;
-    typedef void function(oggpack_buffer *b, int bits) pfoggpack_adv;
-    typedef void function(oggpack_buffer *b) pfoggpack_adv1;
-    typedef int  function(oggpack_buffer *b, int bits) pfoggpack_read;
-    typedef int  function(oggpack_buffer *b) pfoggpack_read1;
-    typedef int  function(oggpack_buffer *b) pfoggpack_bytes;
-    typedef int  function(oggpack_buffer *b) pfoggpack_bits;
-    typedef ubyte *function(oggpack_buffer *b) pfoggpack_get_buffer;
-    pfoggpack_writeinit         oggpack_writeinit;
-    pfoggpack_writetrunc        oggpack_writetrunc;
-    pfoggpack_writealign        oggpack_writealign;
-    pfoggpack_writecopy         oggpack_writecopy;
-    pfoggpack_reset             oggpack_reset;
-    pfoggpack_writeclear        oggpack_writeclear;
-    pfoggpack_readinit          oggpack_readinit;
-    pfoggpack_write             oggpack_write;
-    pfoggpack_look              oggpack_look;
-    pfoggpack_look1             oggpack_look1;
-    pfoggpack_adv               oggpack_adv;
-    pfoggpack_adv1              oggpack_adv1;
-    pfoggpack_read              oggpack_read;
-    pfoggpack_read1             oggpack_read1;
-    pfoggpack_bytes             oggpack_bytes;
-    pfoggpack_bits              oggpack_bits;
-    pfoggpack_get_buffer        oggpack_get_buffer;
+    alias void function(oggpack_buffer *b) pfoggpack_writeinit;
+    alias void function(oggpack_buffer *b, int  bits) pfoggpack_writetrunc;
+    alias void function(oggpack_buffer *b) pfoggpack_writealign;
+    alias void function(oggpack_buffer *b, void *source, int bits) pfoggpack_writecopy;
+    alias void function(oggpack_buffer *b) pfoggpack_reset;
+    alias void function(oggpack_buffer *b) pfoggpack_writeclear;
+    alias void function(oggpack_buffer *b, ubyte *buf, int bytes) pfoggpack_readinit;
+    alias void function(oggpack_buffer *b, uint value, int bits) pfoggpack_write;
+    alias int  function(oggpack_buffer *b, int bits) pfoggpack_look;
+    alias int  function(oggpack_buffer *b) pfoggpack_look1;
+    alias void function(oggpack_buffer *b, int bits) pfoggpack_adv;
+    alias void function(oggpack_buffer *b) pfoggpack_adv1;
+    alias int  function(oggpack_buffer *b, int bits) pfoggpack_read;
+    alias int  function(oggpack_buffer *b) pfoggpack_read1;
+    alias int  function(oggpack_buffer *b) pfoggpack_bytes;
+    alias int  function(oggpack_buffer *b) pfoggpack_bits;
+    alias ubyte *function(oggpack_buffer *b) pfoggpack_get_buffer;
 
     // Ogg BITSTREAM PRIMITIVES: encoding
-    typedef int     function(ogg_stream_state *os, ogg_packet *op) pfogg_stream_packetin;
-    typedef int     function(ogg_stream_state *os, ogg_page *og) pfogg_stream_pageout;
-    typedef int     function(ogg_stream_state *os, ogg_page *og) pfogg_stream_flush;
-    pfogg_stream_packetin       ogg_stream_packetin;
-    pfogg_stream_pageout        ogg_stream_pageout;
-    pfogg_stream_flush          ogg_stream_flush;
+    alias int     function(ogg_stream_state *os, ogg_packet *op) pfogg_stream_packetin;
+    alias int     function(ogg_stream_state *os, ogg_page *og) pfogg_stream_pageout;
+    alias int     function(ogg_stream_state *os, ogg_page *og) pfogg_stream_flush;
 
     // Ogg BITSTREAM PRIMITIVES: decoding
-    typedef int     function(ogg_sync_state *oy) pfogg_sync_init;
-    typedef int     function(ogg_sync_state *oy) pfogg_sync_clear;
-    typedef int     function(ogg_sync_state *oy) pfogg_sync_reset;
-    typedef int     function(ogg_sync_state *oy) pfogg_sync_destroy;
-    pfogg_sync_init             ogg_sync_init;
-    pfogg_sync_clear            ogg_sync_clear;
-    pfogg_sync_reset            ogg_sync_reset;
-    pfogg_sync_destroy          ogg_sync_destroy;
+    alias int     function(ogg_sync_state *oy) pfogg_sync_init;
+    alias int     function(ogg_sync_state *oy) pfogg_sync_clear;
+    alias int     function(ogg_sync_state *oy) pfogg_sync_reset;
+    alias int     function(ogg_sync_state *oy) pfogg_sync_destroy;
 
-    typedef byte*   function(ogg_sync_state *oy, int size) pfogg_sync_buffer;
-    typedef int     function(ogg_sync_state *oy, int bytes) pfogg_sync_wrote;
-    typedef int     function(ogg_sync_state *oy,ogg_page *og) pfogg_sync_pageseek;
-    typedef int     function(ogg_sync_state *oy, ogg_page *og) pfogg_sync_pageout;
-    typedef int     function(ogg_stream_state *os, ogg_page *og) pfogg_stream_pagein;
-    typedef int     function(ogg_stream_state *os,ogg_packet *op) pfogg_stream_packetout;
-    typedef int     function(ogg_stream_state *os,ogg_packet *op) pfogg_stream_packetpeek;
-    pfogg_sync_buffer           ogg_sync_buffer;
-    pfogg_sync_wrote            ogg_sync_wrote;
-    pfogg_sync_pageseek         ogg_sync_pageseek;
-    pfogg_sync_pageout          ogg_sync_pageout;
-    pfogg_stream_pagein         ogg_stream_pagein;
-    pfogg_stream_packetout      ogg_stream_packetout;
-    pfogg_stream_packetpeek     ogg_stream_packetpeek;
+    alias byte*   function(ogg_sync_state *oy, int size) pfogg_sync_buffer;
+    alias int     function(ogg_sync_state *oy, int bytes) pfogg_sync_wrote;
+    alias int     function(ogg_sync_state *oy,ogg_page *og) pfogg_sync_pageseek;
+    alias int     function(ogg_sync_state *oy, ogg_page *og) pfogg_sync_pageout;
+    alias int     function(ogg_stream_state *os, ogg_page *og) pfogg_stream_pagein;
+    alias int     function(ogg_stream_state *os,ogg_packet *op) pfogg_stream_packetout;
+    alias int     function(ogg_stream_state *os,ogg_packet *op) pfogg_stream_packetpeek;
 
     // Ogg BITSTREAM PRIMITIVES: general
-    typedef int     function(ogg_stream_state *os,int serialno) pfogg_stream_init;
-    typedef int     function(ogg_stream_state *os) pfogg_stream_clear;
-    typedef int     function(ogg_stream_state *os) pfogg_stream_reset;
-    typedef int     function(ogg_stream_state *os,int serialno) pfogg_stream_reset_serialno;
-    typedef int     function(ogg_stream_state *os) pfogg_stream_destroy;
-    typedef int     function(ogg_stream_state *os) pfogg_stream_eos;
-    pfogg_stream_init           ogg_stream_init;
-    pfogg_stream_clear          ogg_stream_clear;
-    pfogg_stream_reset          ogg_stream_reset;
-    pfogg_stream_reset_serialno ogg_stream_reset_serialno;
-    pfogg_stream_destroy        ogg_stream_destroy;
-    pfogg_stream_eos            ogg_stream_eos;
+    alias int     function(ogg_stream_state *os,int serialno) pfogg_stream_init;
+    alias int     function(ogg_stream_state *os) pfogg_stream_clear;
+    alias int     function(ogg_stream_state *os) pfogg_stream_reset;
+    alias int     function(ogg_stream_state *os,int serialno) pfogg_stream_reset_serialno;
+    alias int     function(ogg_stream_state *os) pfogg_stream_destroy;
+    alias int     function(ogg_stream_state *os) pfogg_stream_eos;
 
-    typedef void    function(ogg_page *og) pfogg_page_checksum_set;
-    pfogg_page_checksum_set     ogg_page_checksum_set;
+    alias void    function(ogg_page *og) pfogg_page_checksum_set;
 
-    typedef int     function(ogg_page *og) pfogg_page_version;
-    typedef int     function(ogg_page *og) pfogg_page_continued;
-    typedef int     function(ogg_page *og) pfogg_page_bos;
-    typedef int     function(ogg_page *og) pfogg_page_eos;
-    typedef ogg_int64_t function(ogg_page *og) pfogg_page_granulepos;
-    typedef int     function(ogg_page *og) pfogg_page_serialno;
-    typedef int     function(ogg_page *og) pfogg_page_pageno;
-    typedef int     function(ogg_page *og) pfogg_page_packets;
-    pfogg_page_version          ogg_page_version;
-    pfogg_page_continued        ogg_page_continued;
-    pfogg_page_bos              ogg_page_bos;
-    pfogg_page_eos              ogg_page_eos;
-    pfogg_page_granulepos       ogg_page_granulepos;
-    pfogg_page_serialno         ogg_page_serialno;
-    pfogg_page_pageno           ogg_page_pageno;
-    pfogg_page_packets          ogg_page_packets;
+    alias int     function(ogg_page *og) pfogg_page_version;
+    alias int     function(ogg_page *og) pfogg_page_continued;
+    alias int     function(ogg_page *og) pfogg_page_bos;
+    alias int     function(ogg_page *og) pfogg_page_eos;
+    alias ogg_int64_t function(ogg_page *og) pfogg_page_granulepos;
+    alias int     function(ogg_page *og) pfogg_page_serialno;
+    alias int     function(ogg_page *og) pfogg_page_pageno;
+    alias int     function(ogg_page *og) pfogg_page_packets;
 
-    typedef void    function(ogg_packet *op) pfogg_packet_clear;
-    pfogg_packet_clear          ogg_packet_clear;
-
-
+    alias void    function(ogg_packet *op) pfogg_packet_clear;
 }   // Extern (C)
 
 
+pfoggpack_writeinit         oggpack_writeinit;
+pfoggpack_writetrunc        oggpack_writetrunc;
+pfoggpack_writealign        oggpack_writealign;
+pfoggpack_writecopy         oggpack_writecopy;
+pfoggpack_reset             oggpack_reset;
+pfoggpack_writeclear        oggpack_writeclear;
+pfoggpack_readinit          oggpack_readinit;
+pfoggpack_write             oggpack_write;
+pfoggpack_look              oggpack_look;
+pfoggpack_look1             oggpack_look1;
+pfoggpack_adv               oggpack_adv;
+pfoggpack_adv1              oggpack_adv1;
+pfoggpack_read              oggpack_read;
+pfoggpack_read1             oggpack_read1;
+pfoggpack_bytes             oggpack_bytes;
+pfoggpack_bits              oggpack_bits;
+pfoggpack_get_buffer        oggpack_get_buffer;
 
+pfogg_stream_packetin       ogg_stream_packetin;
+pfogg_stream_pageout        ogg_stream_pageout;
+pfogg_stream_flush          ogg_stream_flush;
+
+pfogg_sync_init             ogg_sync_init;
+pfogg_sync_clear            ogg_sync_clear;
+pfogg_sync_reset            ogg_sync_reset;
+pfogg_sync_destroy          ogg_sync_destroy;
+
+pfogg_sync_buffer           ogg_sync_buffer;
+pfogg_sync_wrote            ogg_sync_wrote;
+pfogg_sync_pageseek         ogg_sync_pageseek;
+pfogg_sync_pageout          ogg_sync_pageout;
+pfogg_stream_pagein         ogg_stream_pagein;
+pfogg_stream_packetout      ogg_stream_packetout;
+pfogg_stream_packetpeek     ogg_stream_packetpeek;
+
+pfogg_stream_init           ogg_stream_init;
+pfogg_stream_clear          ogg_stream_clear;
+pfogg_stream_reset          ogg_stream_reset;
+pfogg_stream_reset_serialno ogg_stream_reset_serialno;
+pfogg_stream_destroy        ogg_stream_destroy;
+pfogg_stream_eos            ogg_stream_eos;
 
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
+pfogg_page_checksum_set     ogg_page_checksum_set;
+
+pfogg_page_version          ogg_page_version;
+pfogg_page_continued        ogg_page_continued;
+pfogg_page_bos              ogg_page_bos;
+pfogg_page_eos              ogg_page_eos;
+pfogg_page_granulepos       ogg_page_granulepos;
+pfogg_page_serialno         ogg_page_serialno;
+pfogg_page_pageno           ogg_page_pageno;
+pfogg_page_packets          ogg_page_packets;
+pfogg_packet_clear          ogg_packet_clear;
Index: DerelictUtil/derelict/util/wrapper.d
===================================================================
--- DerelictUtil/derelict/util/wrapper.d	(revision 318)
+++ DerelictUtil/derelict/util/wrapper.d	(working copy)
@@ -34,7 +34,8 @@
 version(Tango)
 {
     private
-    {
+    {
+        import tango.io.Stdout;
         import tango.stdc.string;
         import tango.text.Util;
         import tango.stdc.stringz;
@@ -67,7 +68,7 @@
     version(Tango)
     {
 	    static if(is(typeof(&fromStringz))) { return fromStringz(cstr); }
-		else { return fromUtf8z(cstr); } 
+		else { return fromUtf8z(cstr); }
     }
     else
     {
@@ -89,7 +90,7 @@
 }
 
 char[][] splitStr(char[] str, char[] delim)
-{
+{
     return split(str, delim);
 }
 
Index: DerelictUtil/derelict/util/loader.d
===================================================================
--- DerelictUtil/derelict/util/loader.d	(revision 318)
+++ DerelictUtil/derelict/util/loader.d	(working copy)
@@ -30,7 +30,7 @@
  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
 module derelict.util.loader;
-
+
 private
 {
     import derelict.util.exception;
@@ -50,10 +50,10 @@
     version = Nix;
 }
 
-version (Nix) 
+version (Nix)
 {
 	// for people using DSSS, tell it to link the executable with libdl
-    version(build) 
+    version(build)
     {
         pragma(link, "dl");
     }
@@ -102,7 +102,7 @@
 {
     SharedLibLoadException exception = null;
     SharedLib lib = null;
-
+
     foreach(char[] libName; libNames)
     {
         try
@@ -111,7 +111,7 @@
             if(lib !is null) break;
         }
         catch(SharedLibLoadException slle)
-        {
+        {
             exception = slle;
         }
     }
@@ -135,7 +135,7 @@
     assert(procName !is null);
 }
 body
-{
+{
     if(lib._handle is null)
         throw new InvalidSharedLibHandleException(lib._name);
     return Platform_GetProc(lib, procName);
@@ -198,11 +198,12 @@
     }
 
     SharedLib Platform_LoadSharedLib(char[] libName)
-    {
-        void* hlib = dlopen(toCString(libName), RTLD_NOW);
-        if(null is hlib)
-            throw new SharedLibLoadException("Failed to load shared library " ~ libName);
-
+    {
+        void* hlib = dlopen(toCString(libName), RTLD_NOW);
+        if(null is hlib) {
+            throw new SharedLibLoadException("Failed to load shared library " ~ libName);
+        }
+
         return new SharedLib(hlib, libName);
     }
 
@@ -213,10 +214,11 @@
     }
 
     void* Platform_GetProc(SharedLib lib, char[] procName)
-    {
+    {
         void* proc = dlsym(lib._handle, toCString(procName));
-        if(null is proc)
-            Derelict_HandleMissingProc(lib._name, procName);
+        if(null is proc) {
+            Derelict_HandleMissingProc(lib._name, procName);
+        }
 
         return proc;
     }
Index: DerelictILUT/derelict/devil/ilutfuncs.d
===================================================================
--- DerelictILUT/derelict/devil/ilutfuncs.d	(revision 318)
+++ DerelictILUT/derelict/devil/ilutfuncs.d	(working copy)
@@ -101,32 +101,32 @@
 }
 
 
-extern(System):
+extern(System) {
+alias ILboolean function(ILenum Mode) pfilutDisable;
+alias ILboolean function(ILenum Mode) pfilutEnable;
+alias ILboolean function(ILenum Mode) pfilutGetBoolean;
+alias ILvoid function(ILenum Mode, ILboolean *Param) pfilutGetBooleanv;
+alias ILint function(ILenum Mode) pfilutGetInteger;
+alias ILvoid function(ILenum Mode, ILint *Param) pfilutGetIntegerv;
+alias ILstring function(ILenum StringName) pfilutGetString;
+alias ILvoid function() pfilutInit;
+alias ILboolean function(ILenum Mode) pfilutIsDisabled;
+alias ILboolean function(ILenum Mode) pfilutIsEnabled;
+alias ILvoid function() pfilutPopAttrib;
+alias ILvoid function(ILuint Bits) pfilutPushAttrib;
+alias ILvoid function(ILenum Mode, ILint Param) pfilutSetInteger;
+alias ILboolean function(ILenum Renderer) pfilutRenderer;
+alias GLuint function() pfilutGLBindTexImage;
+alias GLuint function() pfilutGLBindMipmaps;
+alias ILboolean function() pfilutGLBuildMipmaps;
+alias GLuint function( ILstring FileName) pfilutGLLoadImage;
+alias ILboolean function() pfilutGLScreen;
+alias ILboolean function() pfilutGLScreenie;
+alias ILboolean function( ILstring FileName, GLuint TexID) pfilutGLSaveImage;
+alias ILboolean function(GLuint TexID) pfilutGLSetTex;
+alias ILboolean function(GLuint Level) pfilutGLTexImage;
+}
 
-typedef ILboolean function(ILenum Mode) pfilutDisable;
-typedef ILboolean function(ILenum Mode) pfilutEnable;
-typedef ILboolean function(ILenum Mode) pfilutGetBoolean;
-typedef ILvoid function(ILenum Mode, ILboolean *Param) pfilutGetBooleanv;
-typedef ILint function(ILenum Mode) pfilutGetInteger;
-typedef ILvoid function(ILenum Mode, ILint *Param) pfilutGetIntegerv;
-typedef ILstring function(ILenum StringName) pfilutGetString;
-typedef ILvoid function() pfilutInit;
-typedef ILboolean function(ILenum Mode) pfilutIsDisabled;
-typedef ILboolean function(ILenum Mode) pfilutIsEnabled;
-typedef ILvoid function() pfilutPopAttrib;
-typedef ILvoid function(ILuint Bits) pfilutPushAttrib;
-typedef ILvoid function(ILenum Mode, ILint Param) pfilutSetInteger;
-typedef ILboolean function(ILenum Renderer) pfilutRenderer;
-typedef GLuint function() pfilutGLBindTexImage;
-typedef GLuint function() pfilutGLBindMipmaps;
-typedef ILboolean function() pfilutGLBuildMipmaps;
-typedef GLuint function( ILstring FileName) pfilutGLLoadImage;
-typedef ILboolean function() pfilutGLScreen;
-typedef ILboolean function() pfilutGLScreenie;
-typedef ILboolean function( ILstring FileName, GLuint TexID) pfilutGLSaveImage;
-typedef ILboolean function(GLuint TexID) pfilutGLSetTex;
-typedef ILboolean function(GLuint Level) pfilutGLTexImage;
-
 pfilutDisable ilutDisable;
 pfilutEnable ilutEnable;
 pfilutGetBoolean ilutGetBoolean;
@@ -152,9 +152,9 @@
 pfilutGLTexImage ilutGLTexImage;
 
 // ImageLib Utility Toolkit's SDL Functions
-//typedef SDL_Surface*   function(uint flags) pfilutConvertToSDLSurface;
-//typedef SDL_Surface*   function( ILstring FileName) pfilutSDLSurfaceLoadImage;
-//typedef ILboolean      function(SDL_Surface *Bitmap) pfilutSDLSurfaceFromBitmap;
+//alias SDL_Surface*   function(uint flags) pfilutConvertToSDLSurface;
+//alias SDL_Surface*   function( ILstring FileName) pfilutSDLSurfaceLoadImage;
+//alias ILboolean      function(SDL_Surface *Bitmap) pfilutSDLSurfaceFromBitmap;
 //pfilutConvertToSDLSurface ilutConvertToSDLSurface;
 //pfilutSDLSurfaceLoadImage ilutSDLSurfaceLoadImage;
 //pfilutSDLSurfaceFromBitmap ilutSDLSurfaceFromBitmap;
@@ -173,20 +173,20 @@
     }
 
     extern(Windows):
-    typedef HBITMAP function(HDC hDC) pfilutConvertToHBitmap;
-    typedef ILvoid  function(ILubyte *Data) pfilutFreePaddedData;
-    typedef ILvoid  function(BITMAPINFO *Info) pfilutGetBmpInfo;
-    typedef HPALETTE    function() pfilutGetHPal;
-    typedef ILubyte*    function() pfilutGetPaddedData;
-    typedef ILboolean   function() pfilutGetWinClipboard;
-    typedef ILboolean   function(HINSTANCE hInst, ILint ID,  ILstring ResourceType, ILenum Type) pfilutLoadResource;
-    typedef ILboolean   function(HBITMAP Bitmap) pfilutSetHBitmap;
-    typedef ILboolean   function(HPALETTE Pal) pfilutSetHPal;
-    typedef ILboolean   function() pfilutSetWinClipboard;
-    typedef HBITMAP function( ILstring FileName, HDC hDC) pfilutWinLoadImage;
-    typedef ILboolean   function( ILstring Url) pfilutWinLoadUrl;
-    typedef ILboolean function(ILuint XPos, ILuint YPos, ILuint Width, ILuint Height, HDC hDC) pfilutWinPrint;
-    typedef ILboolean   function( ILstring FileName, HBITMAP Bitmap) pfilutWinSaveImage;
+    alias HBITMAP function(HDC hDC) pfilutConvertToHBitmap;
+    alias ILvoid  function(ILubyte *Data) pfilutFreePaddedData;
+    alias ILvoid  function(BITMAPINFO *Info) pfilutGetBmpInfo;
+    alias HPALETTE    function() pfilutGetHPal;
+    alias ILubyte*    function() pfilutGetPaddedData;
+    alias ILboolean   function() pfilutGetWinClipboard;
+    alias ILboolean   function(HINSTANCE hInst, ILint ID,  ILstring ResourceType, ILenum Type) pfilutLoadResource;
+    alias ILboolean   function(HBITMAP Bitmap) pfilutSetHBitmap;
+    alias ILboolean   function(HPALETTE Pal) pfilutSetHPal;
+    alias ILboolean   function() pfilutSetWinClipboard;
+    alias HBITMAP function( ILstring FileName, HDC hDC) pfilutWinLoadImage;
+    alias ILboolean   function( ILstring Url) pfilutWinLoadUrl;
+    alias ILboolean function(ILuint XPos, ILuint YPos, ILuint Width, ILuint Height, HDC hDC) pfilutWinPrint;
+    alias ILboolean   function( ILstring FileName, HBITMAP Bitmap) pfilutWinSaveImage;
     pfilutConvertToHBitmap ilutConvertToHBitmap;
     pfilutFreePaddedData ilutFreePaddedData;
     pfilutGetBmpInfo ilutGetBmpInfo;
Index: DerelictSDL/derelict/sdl/endian.d
===================================================================
--- DerelictSDL/derelict/sdl/endian.d	(revision 318)
+++ DerelictSDL/derelict/sdl/endian.d	(working copy)
@@ -33,7 +33,8 @@
 
 private import derelict.sdl.types;
 private import derelict.sdl.rwops;
-private import std.intrinsic;
+// private import std.intrinsic;
+private import ldc.bitmanip;
 
 //==============================================================================
 // MACROS
Index: DerelictSDL/derelict/sdl/joystick.d
===================================================================
--- DerelictSDL/derelict/sdl/joystick.d	(revision 318)
+++ DerelictSDL/derelict/sdl/joystick.d	(working copy)
@@ -54,24 +54,25 @@
 //==============================================================================
 // FUNCTIONS
 //==============================================================================
-extern(C):
+extern(C) {
+alias int function() pfSDL_NumJoysticks;
+alias char* function(int) pfSDL_JoystickName;
+alias SDL_Joystick* function(int) pfSDL_JoystickOpen;
+alias int function(int) pfSDL_JoystickOpened;
+alias int function(SDL_Joystick*) pfSDL_JoystickIndex;
+alias int function(SDL_Joystick*) pfSDL_JoystickNumAxes;
+alias int function(SDL_Joystick*) pfSDL_JoystickNumBalls;
+alias int function(SDL_Joystick*) pfSDL_JoystickNumHats;
+alias int function(SDL_Joystick*) pfSDL_JoystickNumButtons;
+alias void function() pfSDL_JoystickUpdate;
+alias int function(int) pfSDL_JoystickEventState;
+alias Sint16 function(SDL_Joystick*,int) pfSDL_JoystickGetAxis;
+alias Uint8 function(SDL_Joystick*,int) pfSDL_JoystickGetHat;
+alias int function(SDL_Joystick*,int,int*,int*) pfSDL_JoystickGetBall;
+alias Uint8 function(SDL_Joystick*,int) pfSDL_JoystickGetButton;
+alias void function(SDL_Joystick*) pfSDL_JoystickClose;
+}
 
-typedef int function() pfSDL_NumJoysticks;
-typedef char* function(int) pfSDL_JoystickName;
-typedef SDL_Joystick* function(int) pfSDL_JoystickOpen;
-typedef int function(int) pfSDL_JoystickOpened;
-typedef int function(SDL_Joystick*) pfSDL_JoystickIndex;
-typedef int function(SDL_Joystick*) pfSDL_JoystickNumAxes;
-typedef int function(SDL_Joystick*) pfSDL_JoystickNumBalls;
-typedef int function(SDL_Joystick*) pfSDL_JoystickNumHats;
-typedef int function(SDL_Joystick*) pfSDL_JoystickNumButtons;
-typedef void function() pfSDL_JoystickUpdate;
-typedef int function(int) pfSDL_JoystickEventState;
-typedef Sint16 function(SDL_Joystick*,int) pfSDL_JoystickGetAxis;
-typedef Uint8 function(SDL_Joystick*,int) pfSDL_JoystickGetHat;
-typedef int function(SDL_Joystick*,int,int*,int*) pfSDL_JoystickGetBall;
-typedef Uint8 function(SDL_Joystick*,int) pfSDL_JoystickGetButton;
-typedef void function(SDL_Joystick*) pfSDL_JoystickClose;
 pfSDL_NumJoysticks              SDL_NumJoysticks;
 pfSDL_JoystickName              SDL_JoystickName;
 pfSDL_JoystickOpen              SDL_JoystickOpen;
@@ -87,4 +88,4 @@
 pfSDL_JoystickGetHat            SDL_JoystickGetHat;
 pfSDL_JoystickGetBall           SDL_JoystickGetBall;
 pfSDL_JoystickGetButton         SDL_JoystickGetButton;
-pfSDL_JoystickClose             SDL_JoystickClose;
\ No newline at end of file
+pfSDL_JoystickClose             SDL_JoystickClose;
Index: DerelictSDL/derelict/sdl/keyboard.d
===================================================================
--- DerelictSDL/derelict/sdl/keyboard.d	(revision 318)
+++ DerelictSDL/derelict/sdl/keyboard.d	(working copy)
@@ -56,19 +56,20 @@
 //==============================================================================
 // FUNCTIONS
 //==============================================================================
-extern(C):
+extern(C) {
+alias int function(int) pfSDL_EnableUNICODE;
+alias int function(int,int) pfSDL_EnableKeyRepeat;
+alias void function(int*,int*) pfSDL_GetKeyRepeat;
+alias Uint8* function(int*) pfSDL_GetKeyState;
+alias SDLMod function() pfSDL_GetModState;
+alias void function(SDLMod) pfSDL_SetModState;
+alias char* function(SDLKey key) pfSDL_GetKeyName;
+}
 
-typedef int function(int) pfSDL_EnableUNICODE;
-typedef int function(int,int) pfSDL_EnableKeyRepeat;
-typedef void function(int*,int*) pfSDL_GetKeyRepeat;
-typedef Uint8* function(int*) pfSDL_GetKeyState;
-typedef SDLMod function() pfSDL_GetModState;
-typedef void function(SDLMod) pfSDL_SetModState;
-typedef char* function(SDLKey key) pfSDL_GetKeyName;
 pfSDL_EnableUNICODE         SDL_EnableUNICODE;
 pfSDL_EnableKeyRepeat       SDL_EnableKeyRepeat;
 pfSDL_GetKeyRepeat          SDL_GetKeyRepeat;
 pfSDL_GetKeyState           SDL_GetKeyState;
 pfSDL_GetModState           SDL_GetModState;
 pfSDL_SetModState           SDL_SetModState;
-pfSDL_GetKeyName            SDL_GetKeyName;
\ No newline at end of file
+pfSDL_GetKeyName            SDL_GetKeyName;
Index: DerelictSDL/derelict/sdl/audio.d
===================================================================
--- DerelictSDL/derelict/sdl/audio.d	(revision 318)
+++ DerelictSDL/derelict/sdl/audio.d	(working copy)
@@ -115,22 +115,23 @@
 //==============================================================================
 // FUNCTIONS
 //==============================================================================
-extern(C):
+extern(C) {
+alias int function(char*) pfSDL_AudioInit;
+alias void function() pfSDL_AudioQuit;
+alias char* function(char*,int) pfSDL_AudioDriverName;
+alias int function(SDL_AudioSpec*,SDL_AudioSpec*) pfSDL_OpenAudio;
+alias SDL_audiostatus function() pfSDL_GetAudioStatus;
+alias void function(int) pfSDL_PauseAudio;
+alias SDL_AudioSpec* function(SDL_RWops*,int,SDL_AudioSpec*,Uint8**,Uint32*) pfSDL_LoadWAV_RW;
+alias void function(Uint8*) pfSDL_FreeWAV;
+alias int function(SDL_AudioCVT*,Uint16,Uint8,int,Uint16,Uint8,int) pfSDL_BuildAudioCVT;
+alias int function(SDL_AudioCVT*) pfSDL_ConvertAudio;
+alias void function(Uint8*,Uint8*,Uint32,int) pfSDL_MixAudio;
+alias void function() pfSDL_LockAudio;
+alias void function() pfSDL_UnlockAudio;
+alias void function() pfSDL_CloseAudio;
+}
 
-typedef int function(char*) pfSDL_AudioInit;
-typedef void function() pfSDL_AudioQuit;
-typedef char* function(char*,int) pfSDL_AudioDriverName;
-typedef int function(SDL_AudioSpec*,SDL_AudioSpec*) pfSDL_OpenAudio;
-typedef SDL_audiostatus function() pfSDL_GetAudioStatus;
-typedef void function(int) pfSDL_PauseAudio;
-typedef SDL_AudioSpec* function(SDL_RWops*,int,SDL_AudioSpec*,Uint8**,Uint32*) pfSDL_LoadWAV_RW;
-typedef void function(Uint8*) pfSDL_FreeWAV;
-typedef int function(SDL_AudioCVT*,Uint16,Uint8,int,Uint16,Uint8,int) pfSDL_BuildAudioCVT;
-typedef int function(SDL_AudioCVT*) pfSDL_ConvertAudio;
-typedef void function(Uint8*,Uint8*,Uint32,int) pfSDL_MixAudio;
-typedef void function() pfSDL_LockAudio;
-typedef void function() pfSDL_UnlockAudio;
-typedef void function() pfSDL_CloseAudio;
 pfSDL_AudioInit             SDL_AudioInit;
 pfSDL_AudioQuit             SDL_AudioQuit;
 pfSDL_AudioDriverName       SDL_AudioDriverName;
@@ -144,4 +145,4 @@
 pfSDL_MixAudio              SDL_MixAudio;
 pfSDL_LockAudio             SDL_LockAudio;
 pfSDL_UnlockAudio           SDL_UnlockAudio;
-pfSDL_CloseAudio            SDL_CloseAudio;
\ No newline at end of file
+pfSDL_CloseAudio            SDL_CloseAudio;
Index: DerelictSDL/derelict/sdl/macinit/SDLMain.d
===================================================================
--- DerelictSDL/derelict/sdl/macinit/SDLMain.d	(revision 318)
+++ DerelictSDL/derelict/sdl/macinit/SDLMain.d	(working copy)
@@ -403,4 +403,4 @@
 
 
 
-} // version(darwin)
\ No newline at end of file
+} // version(darwin)
Index: DerelictSDL/derelict/sdl/mutex.d
===================================================================
--- DerelictSDL/derelict/sdl/mutex.d	(revision 318)
+++ DerelictSDL/derelict/sdl/mutex.d	(working copy)
@@ -62,24 +62,33 @@
 //==============================================================================
 // FUNCTIONS
 //==============================================================================
-extern(C):
+extern(C) {
+alias SDL_mutex* function() pfSDL_CreateMutex;
+alias int function(SDL_mutex*) pfSDL_mutexP;
+alias int function(SDL_mutex*) pfSDL_mutexV;
+alias void function(SDL_mutex*) pfSDL_DestroyMutex;
 
-typedef SDL_mutex* function() pfSDL_CreateMutex;
-typedef int function(SDL_mutex*) pfSDL_mutexP;
-typedef int function(SDL_mutex*) pfSDL_mutexV;
-typedef void function(SDL_mutex*) pfSDL_DestroyMutex;
+alias SDL_sem* function(Uint32) pfSDL_CreateSemaphore;
+alias void function(SDL_sem*) pfSDL_DestroySemaphore;
+alias int function(SDL_sem*) pfSDL_SemWait;
+alias int function(SDL_sem*) pfSDL_SemTryWait;
+alias int function(SDL_sem*,Uint32) pfSDL_SemWaitTimeout;
+alias int function(SDL_sem*) pfSDL_SemPost;
+alias Uint32 function(SDL_sem*) pfSDL_SemValue;
+
+alias SDL_cond* function() pfSDL_CreateCond;
+alias void function(SDL_cond*) pfSDL_DestroyCond;
+alias int function(SDL_cond*) pfSDL_CondSignal;
+alias int function(SDL_cond*) pfSDL_CondBroadcast;
+alias int function(SDL_cond*,SDL_mutex*) pfSDL_CondWait;
+alias int function(SDL_cond*,SDL_mutex*,Uint32) pfSDL_CondWaitTimeout;
+}
+
 pfSDL_CreateMutex           SDL_CreateMutex;
 pfSDL_mutexP                SDL_mutexP;
 pfSDL_mutexV                SDL_mutexV;
 pfSDL_DestroyMutex          SDL_DestroyMutex;
-
-typedef SDL_sem* function(Uint32) pfSDL_CreateSemaphore;
-typedef void function(SDL_sem*) pfSDL_DestroySemaphore;
-typedef int function(SDL_sem*) pfSDL_SemWait;
-typedef int function(SDL_sem*) pfSDL_SemTryWait;
-typedef int function(SDL_sem*,Uint32) pfSDL_SemWaitTimeout;
-typedef int function(SDL_sem*) pfSDL_SemPost;
-typedef Uint32 function(SDL_sem*) pfSDL_SemValue;
+
 pfSDL_CreateSemaphore       SDL_CreateSemaphore;
 pfSDL_DestroySemaphore      SDL_DestroySemaphore;
 pfSDL_SemWait               SDL_SemWait;
@@ -87,16 +96,10 @@
 pfSDL_SemWaitTimeout        SDL_SemWaitTimeout;
 pfSDL_SemPost               SDL_SemPost;
 pfSDL_SemValue              SDL_SemValue;
-
-typedef SDL_cond* function() pfSDL_CreateCond;
-typedef void function(SDL_cond*) pfSDL_DestroyCond;
-typedef int function(SDL_cond*) pfSDL_CondSignal;
-typedef int function(SDL_cond*) pfSDL_CondBroadcast;
-typedef int function(SDL_cond*,SDL_mutex*) pfSDL_CondWait;
-typedef int function(SDL_cond*,SDL_mutex*,Uint32) pfSDL_CondWaitTimeout;
+
 pfSDL_CreateCond            SDL_CreateCond;
 pfSDL_DestroyCond           SDL_DestroyCond;
 pfSDL_CondSignal            SDL_CondSignal;
 pfSDL_CondBroadcast         SDL_CondBroadcast;
 pfSDL_CondWait              SDL_CondWait;
-pfSDL_CondWaitTimeout       SDL_CondWaitTimeout;
\ No newline at end of file
+pfSDL_CondWaitTimeout       SDL_CondWaitTimeout;
Index: DerelictSDL/derelict/sdl/cpuinfo.d
===================================================================
--- DerelictSDL/derelict/sdl/cpuinfo.d	(revision 318)
+++ DerelictSDL/derelict/sdl/cpuinfo.d	(working copy)
@@ -33,16 +33,17 @@
 
 private import derelict.sdl.types;
 
-extern(C):
+extern(C) {
+alias SDL_bool function() pfSDL_HasRDTSC;
+alias SDL_bool function() pfSDL_HasMMX;
+alias SDL_bool function() pfSDL_HasMMXExt;
+alias SDL_bool function() pfSDL_Has3DNow;
+alias SDL_bool function() pfSDL_Has3DNowExt;
+alias SDL_bool function() pfSDL_HasSSE;
+alias SDL_bool function() pfSDL_HasSSE2;
+alias SDL_bool function() pfSDL_HasAltiVec;
+}
 
-typedef SDL_bool function() pfSDL_HasRDTSC;
-typedef SDL_bool function() pfSDL_HasMMX;
-typedef SDL_bool function() pfSDL_HasMMXExt;
-typedef SDL_bool function() pfSDL_Has3DNow;
-typedef SDL_bool function() pfSDL_Has3DNowExt;
-typedef SDL_bool function() pfSDL_HasSSE;
-typedef SDL_bool function() pfSDL_HasSSE2;
-typedef SDL_bool function() pfSDL_HasAltiVec;
 pfSDL_HasRDTSC          SDL_HasRDTSC;
 pfSDL_HasMMX            SDL_HasMMX;
 pfSDL_HasMMXExt         SDL_HasMMXExt;
@@ -50,4 +51,4 @@
 pfSDL_Has3DNowExt       SDL_Has3DNowExt;
 pfSDL_HasSSE            SDL_HasSSE;
 pfSDL_HasSSE2           SDL_HasSSE2;
-pfSDL_HasAltiVec        SDL_HasAltiVec;
\ No newline at end of file
+pfSDL_HasAltiVec        SDL_HasAltiVec;
Index: DerelictSDL/derelict/sdl/events.d
===================================================================
--- DerelictSDL/derelict/sdl/events.d	(revision 318)
+++ DerelictSDL/derelict/sdl/events.d	(working copy)
@@ -225,7 +225,7 @@
     SDL_GETEVENT
 }
 
-extern(C) typedef int function(SDL_Event *event) SDL_EventFilter;
+extern(C) alias int function(SDL_Event *event) SDL_EventFilter;
 
 enum : Uint8
 {
@@ -247,16 +247,17 @@
 //==============================================================================
 // FUNCTIONS
 //==============================================================================
-extern(C):
+extern(C) {
+alias void function() pfSDL_PumpEvents;
+alias int function(SDL_Event*,int,SDL_eventaction,Uint32) pfSDL_PeepEvents;
+alias int function(SDL_Event*) pfSDL_PollEvent;
+alias int function(SDL_Event*) pfSDL_WaitEvent;
+alias int function(SDL_Event*) pfSDL_PushEvent;
+alias void function(SDL_EventFilter) pfSDL_SetEventFilter;
+alias SDL_EventFilter function() pfSDL_GetEventFilter;
+alias Uint8 function(Uint8,int) pfSDL_EventState;
+}
 
-typedef void function() pfSDL_PumpEvents;
-typedef int function(SDL_Event*,int,SDL_eventaction,Uint32) pfSDL_PeepEvents;
-typedef int function(SDL_Event*) pfSDL_PollEvent;
-typedef int function(SDL_Event*) pfSDL_WaitEvent;
-typedef int function(SDL_Event*) pfSDL_PushEvent;
-typedef void function(SDL_EventFilter) pfSDL_SetEventFilter;
-typedef SDL_EventFilter function() pfSDL_GetEventFilter;
-typedef Uint8 function(Uint8,int) pfSDL_EventState;
 pfSDL_PumpEvents            SDL_PumpEvents;
 pfSDL_PeepEvents            SDL_PeepEvents;
 pfSDL_PollEvent             SDL_PollEvent;
@@ -264,4 +265,4 @@
 pfSDL_PushEvent             SDL_PushEvent;
 pfSDL_SetEventFilter        SDL_SetEventFilter;
 pfSDL_GetEventFilter        SDL_GetEventFilter;
-pfSDL_EventState            SDL_EventState;
\ No newline at end of file
+pfSDL_EventState            SDL_EventState;
Index: DerelictSDL/derelict/sdl/cdrom.d
===================================================================
--- DerelictSDL/derelict/sdl/cdrom.d	(revision 318)
+++ DerelictSDL/derelict/sdl/cdrom.d	(working copy)
@@ -101,19 +101,20 @@
 //==============================================================================
 // FUNCTIONS
 //==============================================================================
-extern(C):
+extern(C) {
+alias int function() pfSDL_CDNumDrives;
+alias char* function(int) pfSDL_CDName;
+alias SDL_CD* function(int) pfSDL_CDOpen;
+alias CDstatus function(SDL_CD*) pfSDL_CDStatus;
+alias int function(SDL_CD*,int,int,int,int) pfSDL_CDPlayTracks;
+alias int function(SDL_CD*,int,int) pfSDL_CDPlay;
+alias int function(SDL_CD*) pfSDL_CDPause;
+alias int function(SDL_CD*) pfSDL_CDResume;
+alias int function(SDL_CD*) pfSDL_CDStop;
+alias int function(SDL_CD*) pfSDL_CDEject;
+alias int function(SDL_CD*) pfSDL_CDClose;
+}
 
-typedef int function() pfSDL_CDNumDrives;
-typedef char* function(int) pfSDL_CDName;
-typedef SDL_CD* function(int) pfSDL_CDOpen;
-typedef CDstatus function(SDL_CD*) pfSDL_CDStatus;
-typedef int function(SDL_CD*,int,int,int,int) pfSDL_CDPlayTracks;
-typedef int function(SDL_CD*,int,int) pfSDL_CDPlay;
-typedef int function(SDL_CD*) pfSDL_CDPause;
-typedef int function(SDL_CD*) pfSDL_CDResume;
-typedef int function(SDL_CD*) pfSDL_CDStop;
-typedef int function(SDL_CD*) pfSDL_CDEject;
-typedef int function(SDL_CD*) pfSDL_CDClose;
 pfSDL_CDNumDrives           SDL_CDNumDrives;
 pfSDL_CDName                SDL_CDName;
 pfSDL_CDOpen                SDL_CDOpen;
Index: DerelictSDL/derelict/sdl/video.d
===================================================================
--- DerelictSDL/derelict/sdl/video.d	(revision 318)
+++ DerelictSDL/derelict/sdl/video.d	(working copy)
@@ -213,65 +213,66 @@
 //==============================================================================
 // FUNCTIONS
 //==============================================================================
-extern(C):
+extern(C) {
+alias int function(char*,Uint32) pfSDL_VideoInit;
+alias void function() pfSDL_VideoQuit;
+alias char* function(char*,int) pfSDL_VideoDriverName;
+alias SDL_Surface* function() pfSDL_GetVideoSurface;
+alias SDL_VideoInfo* function() pfSDL_GetVideoInfo;
+alias int function(int,int,int,Uint32) pfSDL_VideoModeOK;
+alias SDL_Rect** function(SDL_PixelFormat*,Uint32) pfSDL_ListModes;
+alias SDL_Surface* function(int,int,int,Uint32) pfSDL_SetVideoMode;
+alias void function(SDL_Surface*,int,SDL_Rect*) pfSDL_UpdateRects;
+alias void function(SDL_Surface*,Sint32,Sint32,Uint32,Uint32) pfSDL_UpdateRect;
+alias int function(SDL_Surface*) pfSDL_Flip;
+alias int function(float,float,float) pfSDL_SetGamma;
+alias int function(Uint16*,Uint16*,Uint16*) pfSDL_SetGammaRamp;
+alias int function(Uint16*,Uint16*,Uint16*) pfSDL_GetGammaRamp;
+alias int function(SDL_Surface*,SDL_Color*,int,int) pfSDL_SetColors;
+alias int function(SDL_Surface*,int,SDL_Color*,int,int) pfSDL_SetPalette;
+alias Uint32 function(SDL_PixelFormat*,Uint8,Uint8,Uint8) pfSDL_MapRGB;
+alias Uint32 function(SDL_PixelFormat*,Uint8,Uint8,Uint8,Uint8) pfSDL_MapRGBA;
+alias void function(Uint32,SDL_PixelFormat*,Uint8*,Uint8*,Uint8*) pfSDL_GetRGB;
+alias void function(Uint32,SDL_PixelFormat*,Uint8*,Uint8*,Uint8*,Uint8*) pfSDL_GetRGBA;
+alias SDL_Surface* function(Uint32,int,int,int,Uint32,Uint32,Uint32,Uint32) pfSDL_CreateRGBSurface;
+alias SDL_Surface* function(void*,int,int,int,int,Uint32,Uint32,Uint32,Uint32) pfSDL_CreateRGBSurfaceFrom;
+alias void function(SDL_Surface*) pfSDL_FreeSurface;
+alias int function(SDL_Surface*) pfSDL_LockSurface;
+alias void function(SDL_Surface*) pfSDL_UnlockSurface;
+alias SDL_Surface* function(SDL_RWops*,int) pfSDL_LoadBMP_RW;
+alias int function(SDL_Surface*,SDL_RWops*,int) pfSDL_SaveBMP_RW;
+alias int function(SDL_Surface*,Uint32,Uint32) pfSDL_SetColorKey;
+alias int function(SDL_Surface*,Uint32,Uint8) pfSDL_SetAlpha;
+alias SDL_bool function(SDL_Surface*,SDL_Rect*) pfSDL_SetClipRect;
+alias void function(SDL_Surface*,SDL_Rect*) pfSDL_GetClipRect;
+alias SDL_Surface* function(SDL_Surface*,SDL_PixelFormat*,Uint32) pfSDL_ConvertSurface;
+alias int function(SDL_Surface*,SDL_Rect*,SDL_Surface*,SDL_Rect*) pfSDL_UpperBlit;
+alias int function(SDL_Surface*,SDL_Rect*,SDL_Surface*,SDL_Rect*) pfSDL_LowerBlit;
+alias int function(SDL_Surface*,SDL_Rect*,Uint32) pfSDL_FillRect;
+alias SDL_Surface* function(SDL_Surface*) pfSDL_DisplayFormat;
+alias SDL_Surface* function(SDL_Surface*) pfSDL_DisplayFormatAlpha;
+alias SDL_Overlay* function(int,int,Uint32,SDL_Surface*) pfSDL_CreateYUVOverlay;
+alias int function(SDL_Overlay*) pfSDL_LockYUVOverlay;
+alias void function(SDL_Overlay*) pfSDL_UnlockYUVOverlay;
+alias int function(SDL_Overlay*,SDL_Rect*) pfSDL_DisplayYUVOverlay;
+alias void function(SDL_Overlay*) pfSDL_FreeYUVOverlay;
+alias int function(char*) pfSDL_GL_LoadLibrary;
+alias void* function(char*) pfSDL_GL_GetProcAddress;
+alias int function(SDL_GLattr,int) pfSDL_GL_SetAttribute;
+alias int function(SDL_GLattr,int*) pfSDL_GL_GetAttribute;
+alias void function() pfSDL_GL_SwapBuffers;
+alias void function(int,SDL_Rect*) pfSDL_GL_UpdateRects;
+alias void function() pfSDL_GL_Lock;
+alias void function() pfSDL_GL_Unlock;
+alias void function(char*,char*) pfSDL_WM_SetCaption;
+alias void function(char**,char**) pfSDL_WM_GetCaption;
+alias void function(SDL_Surface*,Uint8*) pfSDL_WM_SetIcon;
+alias int function() pfSDL_WM_IconifyWindow;
+alias int function(SDL_Surface*) pfSDL_WM_ToggleFullScreen;
+alias SDL_GrabMode function(SDL_GrabMode) pfSDL_WM_GrabInput;
+}
 
-typedef int function(char*,Uint32) pfSDL_VideoInit;
-typedef void function() pfSDL_VideoQuit;
-typedef char* function(char*,int) pfSDL_VideoDriverName;
-typedef SDL_Surface* function() pfSDL_GetVideoSurface;
-typedef SDL_VideoInfo* function() pfSDL_GetVideoInfo;
-typedef int function(int,int,int,Uint32) pfSDL_VideoModeOK;
-typedef SDL_Rect** function(SDL_PixelFormat*,Uint32) pfSDL_ListModes;
-typedef SDL_Surface* function(int,int,int,Uint32) pfSDL_SetVideoMode;
-typedef void function(SDL_Surface*,int,SDL_Rect*) pfSDL_UpdateRects;
-typedef void function(SDL_Surface*,Sint32,Sint32,Uint32,Uint32) pfSDL_UpdateRect;
-typedef int function(SDL_Surface*) pfSDL_Flip;
-typedef int function(float,float,float) pfSDL_SetGamma;
-typedef int function(Uint16*,Uint16*,Uint16*) pfSDL_SetGammaRamp;
-typedef int function(Uint16*,Uint16*,Uint16*) pfSDL_GetGammaRamp;
-typedef int function(SDL_Surface*,SDL_Color*,int,int) pfSDL_SetColors;
-typedef int function(SDL_Surface*,int,SDL_Color*,int,int) pfSDL_SetPalette;
-typedef Uint32 function(SDL_PixelFormat*,Uint8,Uint8,Uint8) pfSDL_MapRGB;
-typedef Uint32 function(SDL_PixelFormat*,Uint8,Uint8,Uint8,Uint8) pfSDL_MapRGBA;
-typedef void function(Uint32,SDL_PixelFormat*,Uint8*,Uint8*,Uint8*) pfSDL_GetRGB;
-typedef void function(Uint32,SDL_PixelFormat*,Uint8*,Uint8*,Uint8*,Uint8*) pfSDL_GetRGBA;
-typedef SDL_Surface* function(Uint32,int,int,int,Uint32,Uint32,Uint32,Uint32) pfSDL_CreateRGBSurface;
-typedef SDL_Surface* function(void*,int,int,int,int,Uint32,Uint32,Uint32,Uint32) pfSDL_CreateRGBSurfaceFrom;
-typedef void function(SDL_Surface*) pfSDL_FreeSurface;
-typedef int function(SDL_Surface*) pfSDL_LockSurface;
-typedef void function(SDL_Surface*) pfSDL_UnlockSurface;
-typedef SDL_Surface* function(SDL_RWops*,int) pfSDL_LoadBMP_RW;
-typedef int function(SDL_Surface*,SDL_RWops*,int) pfSDL_SaveBMP_RW;
-typedef int function(SDL_Surface*,Uint32,Uint32) pfSDL_SetColorKey;
-typedef int function(SDL_Surface*,Uint32,Uint8) pfSDL_SetAlpha;
-typedef SDL_bool function(SDL_Surface*,SDL_Rect*) pfSDL_SetClipRect;
-typedef void function(SDL_Surface*,SDL_Rect*) pfSDL_GetClipRect;
-typedef SDL_Surface* function(SDL_Surface*,SDL_PixelFormat*,Uint32) pfSDL_ConvertSurface;
-typedef int function(SDL_Surface*,SDL_Rect*,SDL_Surface*,SDL_Rect*) pfSDL_UpperBlit;
-typedef int function(SDL_Surface*,SDL_Rect*,SDL_Surface*,SDL_Rect*) pfSDL_LowerBlit;
-typedef int function(SDL_Surface*,SDL_Rect*,Uint32) pfSDL_FillRect;
-typedef SDL_Surface* function(SDL_Surface*) pfSDL_DisplayFormat;
-typedef SDL_Surface* function(SDL_Surface*) pfSDL_DisplayFormatAlpha;
-typedef SDL_Overlay* function(int,int,Uint32,SDL_Surface*) pfSDL_CreateYUVOverlay;
-typedef int function(SDL_Overlay*) pfSDL_LockYUVOverlay;
-typedef void function(SDL_Overlay*) pfSDL_UnlockYUVOverlay;
-typedef int function(SDL_Overlay*,SDL_Rect*) pfSDL_DisplayYUVOverlay;
-typedef void function(SDL_Overlay*) pfSDL_FreeYUVOverlay;
-typedef int function(char*) pfSDL_GL_LoadLibrary;
-typedef void* function(char*) pfSDL_GL_GetProcAddress;
-typedef int function(SDL_GLattr,int) pfSDL_GL_SetAttribute;
-typedef int function(SDL_GLattr,int*) pfSDL_GL_GetAttribute;
-typedef void function() pfSDL_GL_SwapBuffers;
-typedef void function(int,SDL_Rect*) pfSDL_GL_UpdateRects;
-typedef void function() pfSDL_GL_Lock;
-typedef void function() pfSDL_GL_Unlock;
-typedef void function(char*,char*) pfSDL_WM_SetCaption;
-typedef void function(char**,char**) pfSDL_WM_GetCaption;
-typedef void function(SDL_Surface*,Uint8*) pfSDL_WM_SetIcon;
-typedef int function() pfSDL_WM_IconifyWindow;
-typedef int function(SDL_Surface*) pfSDL_WM_ToggleFullScreen;
-typedef SDL_GrabMode function(SDL_GrabMode) pfSDL_WM_GrabInput;
-//typedef int function(SDL_Surface*,SDL_Rect*,SDL_Surface*,SDL_Rect*) pfSDL_SoftStretch;
+//alias int function(SDL_Surface*,SDL_Rect*,SDL_Surface*,SDL_Rect*) pfSDL_SoftStretch;
 pfSDL_VideoInit             SDL_VideoInit;
 pfSDL_VideoQuit             SDL_VideoQuit;
 pfSDL_VideoDriverName       SDL_VideoDriverName;
@@ -329,4 +330,4 @@
 pfSDL_WM_SetIcon            SDL_WM_SetIcon;
 pfSDL_WM_IconifyWindow      SDL_WM_IconifyWindow;
 pfSDL_WM_ToggleFullScreen   SDL_WM_ToggleFullScreen;
-pfSDL_WM_GrabInput          SDL_WM_GrabInput;
\ No newline at end of file
+pfSDL_WM_GrabInput          SDL_WM_GrabInput;
Index: DerelictSDL/derelict/sdl/thread.d
===================================================================
--- DerelictSDL/derelict/sdl/thread.d	(revision 318)
+++ DerelictSDL/derelict/sdl/thread.d	(working copy)
@@ -42,13 +42,14 @@
 //==============================================================================
 // FUNCTIONS
 //==============================================================================
-extern(C):
+extern(C) {
+alias SDL_Thread* function(int (*fm)(void*), void*) pfSDL_CreateThread;
+alias Uint32 function() pfSDL_ThreadID;
+alias Uint32 function(SDL_Thread*) pfSDL_GetThreadID;
+alias void function(SDL_Thread*,int*) pfSDL_WaitThread;
+alias void function(SDL_Thread*) pfSDL_KillThread;
+}
 
-typedef SDL_Thread* function(int (*fm)(void*), void*) pfSDL_CreateThread;
-typedef Uint32 function() pfSDL_ThreadID;
-typedef Uint32 function(SDL_Thread*) pfSDL_GetThreadID;
-typedef void function(SDL_Thread*,int*) pfSDL_WaitThread;
-typedef void function(SDL_Thread*) pfSDL_KillThread;
 pfSDL_CreateThread          SDL_CreateThread;
 pfSDL_ThreadID              SDL_ThreadID;
 pfSDL_GetThreadID           SDL_GetThreadID;
Index: DerelictSDL/derelict/sdl/rwops.d
===================================================================
--- DerelictSDL/derelict/sdl/rwops.d	(revision 318)
+++ DerelictSDL/derelict/sdl/rwops.d	(working copy)
@@ -64,7 +64,7 @@
 	    int (*write)(SDL_RWops *context, void *ptr, int size, int num);
 	    int (*close)(SDL_RWops *context);
     }
-    
+
     Uint32 type;
     union Hidden
     {
@@ -133,33 +133,34 @@
 //==============================================================================
 // FUNCTIONS
 //==============================================================================
-extern(C):
+extern(C) {
+alias SDL_RWops* function(char*,char*) pfSDL_RWFromFile;
+alias SDL_RWops* function(FILE*,int) pfSDL_RWFromFP;
+alias SDL_RWops* function(void*,int) pfSDL_RWFromMem;
+alias SDL_RWops* function(void*,int) pfSDL_RWFromConstMem;
+alias SDL_RWops* function() pfSDL_AllocRW;
+alias void function(SDL_RWops*) pfSDL_FreeRW;
 
-typedef SDL_RWops* function(char*,char*) pfSDL_RWFromFile;
-typedef SDL_RWops* function(FILE*,int) pfSDL_RWFromFP;
-typedef SDL_RWops* function(void*,int) pfSDL_RWFromMem;
-typedef SDL_RWops* function(void*,int) pfSDL_RWFromConstMem;
-typedef SDL_RWops* function() pfSDL_AllocRW;
-typedef void function(SDL_RWops*) pfSDL_FreeRW;
+alias Uint16 function(SDL_RWops*) pfSDL_ReadLE16;
+alias Uint16 function(SDL_RWops*) pfSDL_ReadBE16;
+alias Uint32 function(SDL_RWops*) pfSDL_ReadLE32;
+alias Uint32 function(SDL_RWops*) pfSDL_ReadBE32;
+alias Uint64 function(SDL_RWops*) pfSDL_ReadLE64;
+alias Uint64 function(SDL_RWops*) pfSDL_ReadBE64;
+alias Uint16 function(SDL_RWops*,Uint16) pfSDL_WriteLE16;
+alias Uint16 function(SDL_RWops*,Uint16) pfSDL_WriteBE16;
+alias Uint32 function(SDL_RWops*,Uint32) pfSDL_WriteLE32;
+alias Uint32 function(SDL_RWops*,Uint32) pfSDL_WriteBE32;
+alias Uint64 function(SDL_RWops*,Uint64) pfSDL_WriteLE64;
+alias Uint64 function(SDL_RWops*,Uint64) pfSDL_WriteBE64;
+}
 pfSDL_RWFromFile            SDL_RWFromFile;
 pfSDL_RWFromFP              SDL_RWFromFP;
 pfSDL_RWFromMem             SDL_RWFromMem;
 pfSDL_RWFromConstMem        SDL_RWFromConstMem;
 pfSDL_AllocRW               SDL_AllocRW;
 pfSDL_FreeRW                SDL_FreeRW;
-
-typedef Uint16 function(SDL_RWops*) pfSDL_ReadLE16;
-typedef Uint16 function(SDL_RWops*) pfSDL_ReadBE16;
-typedef Uint32 function(SDL_RWops*) pfSDL_ReadLE32;
-typedef Uint32 function(SDL_RWops*) pfSDL_ReadBE32;
-typedef Uint64 function(SDL_RWops*) pfSDL_ReadLE64;
-typedef Uint64 function(SDL_RWops*) pfSDL_ReadBE64;
-typedef Uint16 function(SDL_RWops*,Uint16) pfSDL_WriteLE16;
-typedef Uint16 function(SDL_RWops*,Uint16) pfSDL_WriteBE16;
-typedef Uint32 function(SDL_RWops*,Uint32) pfSDL_WriteLE32;
-typedef Uint32 function(SDL_RWops*,Uint32) pfSDL_WriteBE32;
-typedef Uint64 function(SDL_RWops*,Uint64) pfSDL_WriteLE64;
-typedef Uint64 function(SDL_RWops*,Uint64) pfSDL_WriteBE64;
+
 pfSDL_ReadLE16          SDL_ReadLE16;
 pfSDL_ReadBE16          SDL_ReadBE16;
 pfSDL_ReadLE32          SDL_ReadLE32;
@@ -171,4 +172,4 @@
 pfSDL_WriteLE32         SDL_WriteLE32;
 pfSDL_WriteBE32         SDL_WriteBE32;
 pfSDL_WriteLE64         SDL_WriteLE64;
-pfSDL_WriteBE64         SDL_WriteBE64;
\ No newline at end of file
+pfSDL_WriteBE64         SDL_WriteBE64;
Index: DerelictSDL/derelict/sdl/active.d
===================================================================
--- DerelictSDL/derelict/sdl/active.d	(revision 318)
+++ DerelictSDL/derelict/sdl/active.d	(working copy)
@@ -47,7 +47,7 @@
 // FUNCTIONS
 //==============================================================================
 
-extern(C):
-
-typedef Uint8 function() pfSDL_GetAppState;
-pfSDL_GetAppState           SDL_GetAppState;
\ No newline at end of file
+extern(C) {
+alias Uint8 function() pfSDL_GetAppState;
+}
+pfSDL_GetAppState           SDL_GetAppState;
Index: DerelictSDL/derelict/sdl/timer.d
===================================================================
--- DerelictSDL/derelict/sdl/timer.d	(revision 318)
+++ DerelictSDL/derelict/sdl/timer.d	(working copy)
@@ -47,19 +47,20 @@
 	typedef Uint32 function(Uint32) SDL_TimerCallback;
 	typedef Uint32 function(Uint32,void*) SDL_NewTimerCallback;
 }
-
+
 alias void *SDL_TimerID;
 
 //==============================================================================
 // FUNCTIONS
 //==============================================================================
-extern(C):
+extern(C) {
+alias Uint32 function() pfSDL_GetTicks;
+alias void function(Uint32) pfSDL_Delay;
+alias int function(Uint32,SDL_TimerCallback) pfSDL_SetTimer;
+alias SDL_TimerID function(Uint32,SDL_NewTimerCallback,void*) pfSDL_AddTimer;
+alias SDL_bool function(SDL_TimerID) pfSDL_RemoveTimer;
+}
 
-typedef Uint32 function() pfSDL_GetTicks;
-typedef void function(Uint32) pfSDL_Delay;
-typedef int function(Uint32,SDL_TimerCallback) pfSDL_SetTimer;
-typedef SDL_TimerID function(Uint32,SDL_NewTimerCallback,void*) pfSDL_AddTimer;
-typedef SDL_bool function(SDL_TimerID) pfSDL_RemoveTimer;
 pfSDL_GetTicks          SDL_GetTicks;
 pfSDL_Delay             SDL_Delay;
 pfSDL_SetTimer          SDL_SetTimer;
Index: DerelictSDL/derelict/sdl/loadso.d
===================================================================
--- DerelictSDL/derelict/sdl/loadso.d	(revision 318)
+++ DerelictSDL/derelict/sdl/loadso.d	(working copy)
@@ -31,11 +31,12 @@
  */
 module derelict.sdl.loadso;
 
-extern(C):
+extern(C) {
+alias void* function(char*) pfSDL_LoadObject;
+alias void* function(void*,char*) pfSDL_LoadFunction;
+alias void function(void*) pfSDL_UnloadObject;
+}
 
-typedef void* function(char*) pfSDL_LoadObject;
-typedef void* function(void*,char*) pfSDL_LoadFunction;
-typedef void function(void*) pfSDL_UnloadObject;
 pfSDL_LoadObject            SDL_LoadObject;
 pfSDL_LoadFunction          SDL_LoadFunction;
-pfSDL_UnloadObject          SDL_UnloadObject;
\ No newline at end of file
+pfSDL_UnloadObject          SDL_UnloadObject;
Index: DerelictSDL/derelict/sdl/sdl.d
===================================================================
--- DerelictSDL/derelict/sdl/sdl.d	(revision 318)
+++ DerelictSDL/derelict/sdl/sdl.d	(working copy)
@@ -82,22 +82,19 @@
 //==============================================================================
 // Functions
 //==============================================================================
-extern(C)
-{
-
-typedef int function(Uint32) pfSDL_Init;
-typedef int function(Uint32) pfSDL_InitSubSystem;
-typedef int function(Uint32) pfSDL_QuitSubSystem;
-typedef int function(Uint32) pfSDL_WasInit;
-typedef void function() pfSDL_Quit;
+extern(C) {
+alias int function(Uint32) pfSDL_Init;
+alias int function(Uint32) pfSDL_InitSubSystem;
+alias int function(Uint32) pfSDL_QuitSubSystem;
+alias int function(Uint32) pfSDL_WasInit;
+alias void function() pfSDL_Quit;
+}
 pfSDL_Init    SDL_Init;
 pfSDL_InitSubSystem  SDL_InitSubSystem;
 pfSDL_QuitSubSystem  SDL_QuitSubSystem;
 pfSDL_WasInit   SDL_WasInit;
 pfSDL_Quit    SDL_Quit;
 
-}
-
 //==============================================================================
 // Loader
 //==============================================================================
Index: DerelictSDL/derelict/sdl/syswm.d
===================================================================
--- DerelictSDL/derelict/sdl/syswm.d	(revision 318)
+++ DerelictSDL/derelict/sdl/syswm.d	(working copy)
@@ -79,7 +79,8 @@
 //==============================================================================
 // FUNCTIONS
 //==============================================================================
-extern(C):
+extern(C) {
+alias int function(SDL_SysWMinfo*) pfSDL_GetWMInfo;
+}
 
-typedef int function(SDL_SysWMinfo*) pfSDL_GetWMInfo;
-pfSDL_GetWMInfo         SDL_GetWMInfo;
\ No newline at end of file
+pfSDL_GetWMInfo         SDL_GetWMInfo;
Index: DerelictSDL/derelict/sdl/mouse.d
===================================================================
--- DerelictSDL/derelict/sdl/mouse.d	(revision 318)
+++ DerelictSDL/derelict/sdl/mouse.d	(working copy)
@@ -72,16 +72,17 @@
 //==============================================================================
 // FUNCTIONS
 //==============================================================================
-extern(C):
+extern(C) {
+alias Uint8 function(int*,int*) pfSDL_GetMouseState;
+alias Uint8 function(int*,int*) pfSDL_GetRelativeMouseState;
+alias void function(Uint16,Uint16) pfSDL_WarpMouse;
+alias SDL_Cursor* function(Uint8*,Uint8*,int,int,int,int) pfSDL_CreateCursor;
+alias void function(SDL_Cursor*) pfSDL_SetCursor;
+alias SDL_Cursor* function() pfSDL_GetCursor;
+alias void function(SDL_Cursor*) pfSDL_FreeCursor;
+alias int function(int) pfSDL_ShowCursor;
+}
 
-typedef Uint8 function(int*,int*) pfSDL_GetMouseState;
-typedef Uint8 function(int*,int*) pfSDL_GetRelativeMouseState;
-typedef void function(Uint16,Uint16) pfSDL_WarpMouse;
-typedef SDL_Cursor* function(Uint8*,Uint8*,int,int,int,int) pfSDL_CreateCursor;
-typedef void function(SDL_Cursor*) pfSDL_SetCursor;
-typedef SDL_Cursor* function() pfSDL_GetCursor;
-typedef void function(SDL_Cursor*) pfSDL_FreeCursor;
-typedef int function(int) pfSDL_ShowCursor;
 pfSDL_GetMouseState         SDL_GetMouseState;
 pfSDL_GetRelativeMouseState SDL_GetRelativeMouseState;
 pfSDL_WarpMouse             SDL_WarpMouse;
Index: DerelictSDL/derelict/sdl/sdlversion.d
===================================================================
--- DerelictSDL/derelict/sdl/sdlversion.d	(revision 318)
+++ DerelictSDL/derelict/sdl/sdlversion.d	(working copy)
@@ -76,7 +76,8 @@
 //==============================================================================
 // FUNCTIONS
 //==============================================================================
-extern(C):
+extern(C) {
+alias SDL_version* function() pfSDL_Linked_Version;
+}
 
-typedef SDL_version* function() pfSDL_Linked_Version;
-pfSDL_Linked_Version        SDL_Linked_Version;
\ No newline at end of file
+pfSDL_Linked_Version        SDL_Linked_Version;
Index: DerelictSDL/derelict/sdl/error.d
===================================================================
--- DerelictSDL/derelict/sdl/error.d	(revision 318)
+++ DerelictSDL/derelict/sdl/error.d	(working copy)
@@ -33,11 +33,12 @@
 
 private import derelict.sdl.types;
 
-extern(C):
+extern(C) {
+alias void function(char*,...) pfSDL_SetError;
+alias char* function() pfSDL_GetError;
+alias void function() pfSDL_ClearError;
+}
 
-typedef void function(char*,...) pfSDL_SetError;
-typedef char* function() pfSDL_GetError;
-typedef void function() pfSDL_ClearError;
 pfSDL_SetError          SDL_SetError;
 pfSDL_GetError          SDL_GetError;
-pfSDL_ClearError        SDL_ClearError;
\ No newline at end of file
+pfSDL_ClearError        SDL_ClearError;
Index: DerelictSDLImage/derelict/sdl/image.d
===================================================================
--- DerelictSDLImage/derelict/sdl/image.d	(revision 318)
+++ DerelictSDLImage/derelict/sdl/image.d	(working copy)
@@ -55,19 +55,27 @@
 //==============================================================================
 extern(C)
 {
-typedef SDL_version* function() pfIMG_Linked_Version;
+alias SDL_version* function() pfIMG_Linked_Version;
+
+alias SDL_Surface* function(SDL_RWops*, int, char*) pfIMG_LoadTyped_RW;
+alias SDL_Surface* function(char*) pfIMG_Load;
+alias SDL_Surface* function(SDL_RWops*, int) pfIMG_Load_RW;
+alias int function(int) pfIMG_InvertAlpha;
+
+alias int function(SDL_RWops*) pfIsType;
+
+alias SDL_Surface* function(SDL_RWops*) pfLoadFunc;
+
+alias SDL_Surface* function(char**) pfIMG_ReadXPMFromArray;
+}
+
 pfIMG_Linked_Version            IMG_Linked_Version;
-
-typedef SDL_Surface* function(SDL_RWops*, int, char*) pfIMG_LoadTyped_RW;
-typedef SDL_Surface* function(char*) pfIMG_Load;
-typedef SDL_Surface* function(SDL_RWops*, int) pfIMG_Load_RW;
-typedef int function(int) pfIMG_InvertAlpha;
+
 pfIMG_LoadTyped_RW              IMG_LoadTyped_RW;
 pfIMG_Load                      IMG_Load;
 pfIMG_Load_RW                   IMG_Load_RW;
 pfIMG_InvertAlpha               IMG_InvertAlpha;
-
-typedef int function(SDL_RWops*) pfIsType;
+
 pfIsType                        IMG_isBMP;
 pfIsType                        IMG_isPNM;
 pfIsType                        IMG_isXPM;
@@ -79,7 +87,6 @@
 pfIsType                        IMG_isPNG;
 pfIsType                        IMG_isLBM;
 
-typedef SDL_Surface* function(SDL_RWops*) pfLoadFunc;
 pfLoadFunc                      IMG_LoadBMP_RW;
 pfLoadFunc                      IMG_LoadPNM_RW;
 pfLoadFunc                      IMG_LoadXPM_RW;
@@ -91,12 +98,9 @@
 pfLoadFunc                      IMG_LoadPNG_RW;
 pfLoadFunc                      IMG_LoadTGA_RW;
 pfLoadFunc                      IMG_LoadLBM_RW;
-
-typedef SDL_Surface* function(char**) pfIMG_ReadXPMFromArray;
+
 pfIMG_ReadXPMFromArray          IMG_ReadXPMFromArray;
 
-}
-
 //==============================================================================
 // Macros
 //==============================================================================
Index: DerelictGLU/derelict/opengl/glu.d
===================================================================
--- DerelictGLU/derelict/opengl/glu.d	(revision 318)
+++ DerelictGLU/derelict/opengl/glu.d	(working copy)
@@ -116,171 +116,172 @@
 // CONSTANTS
 //==============================================================================
 enum : GLenum
-{
-    GLU_FALSE                       = 0,
-    GLU_TRUE                        = 1,
+{
+    // Boolean
+    GLU_FALSE                        = 0,
+    GLU_TRUE                         = 1,
     // StringName
-    GLU_VERSION                     = 100800,
-    GLU_EXTENSIONS                  = 100801,
+    GLU_VERSION                      = 100800,
+    GLU_EXTENSIONS                   = 100801,
     // ErrorCode
-    GLU_INVALID_ENUM                = 100900,
-    GLU_INVALID_VALUE               = 100901,
-    GLU_OUT_OF_MEMORY               = 100902,
-    GLU_INVALID_OPERATION           = 100904,
+    GLU_INVALID_ENUM                 = 100900,
+    GLU_INVALID_VALUE                = 100901,
+    GLU_OUT_OF_MEMORY                = 100902,
+    GLU_INVALID_OPERATION            = 100904,
     // NurbsDisplay
-    GLU_OUTLINE_POLYGON             = 100240,
-    GLU_OUTLINE_PATCH               = 100241,
+    GLU_OUTLINE_POLYGON              = 100240,
+    GLU_OUTLINE_PATCH                = 100241,
     // NurbsCallback
-    GLU_NURBS_ERROR                 = 100103,
-    GLU_ERROR                       = 100103,
-    GLU_NURBS_BEGIN                 = 100164,
-    GLU_NURBS_BEGIN_EXT             = 100164,
-    GLU_NURBS_VERTEX                = 100165,
-    GLU_NURBS_VERTEX_EXT            = 100165,
-    GLU_NURBS_NORMAL                = 100166,
-    GLU_NURBS_NORMAL_EXT            = 100166,
-    GLU_NURBS_COLOR                 = 100167,
-    GLU_NURBS_COLOR_EXT             = 100167,
-    GLU_NURBS_TEXTURE_COORD         = 100168,
-    GLU_NURBS_TEX_COORD_EXT         = 100168,
-    GLU_NURBS_END                   = 100169,
-    GLU_NURBS_END_EXT               = 100169,
-    GLU_NURBS_BEGIN_DATA            = 100170,
-    GLU_NURBS_BEGIN_DATA_EXT        = 100170,
-    GLU_NURBS_VERTEX_DATA           = 100171,
-    GLU_NURBS_VERTEX_DATA_EXT       = 100171,
-    GLU_NURBS_NORMAL_DATA           = 100172,
-    GLU_NURBS_NORMAL_DATA_EXT       = 100172,
-    GLU_NURBS_COLOR_DATA            = 100173,
-    GLU_NURBS_COLOR_DATA_EXT        = 100173,
-    GLU_NURBS_TEXTURE_COORD_DATA    = 100174,
-    GLU_NURBS_TEX_COORD_DATA_EXT    = 100174,
-    GLU_NURBS_END_DATA              = 100175,
-    GLU_NURBS_END_DATA_EXT          = 100175,
+    GLU_NURBS_ERROR                  = 100103,
+    GLU_ERROR                        = 100103,
+    GLU_NURBS_BEGIN                  = 100164,
+    GLU_NURBS_BEGIN_EXT              = 100164,
+    GLU_NURBS_VERTEX                 = 100165,
+    GLU_NURBS_VERTEX_EXT             = 100165,
+    GLU_NURBS_NORMAL                 = 100166,
+    GLU_NURBS_NORMAL_EXT             = 100166,
+    GLU_NURBS_COLOR                  = 100167,
+    GLU_NURBS_COLOR_EXT              = 100167,
+    GLU_NURBS_TEXTURE_COORD          = 100168,
+    GLU_NURBS_TEX_COORD_EXT          = 100168,
+    GLU_NURBS_END                    = 100169,
+    GLU_NURBS_END_EXT                = 100169,
+    GLU_NURBS_BEGIN_DATA             = 100170,
+    GLU_NURBS_BEGIN_DATA_EXT         = 100170,
+    GLU_NURBS_VERTEX_DATA            = 100171,
+    GLU_NURBS_VERTEX_DATA_EXT        = 100171,
+    GLU_NURBS_NORMAL_DATA            = 100172,
+    GLU_NURBS_NORMAL_DATA_EXT        = 100172,
+    GLU_NURBS_COLOR_DATA             = 100173,
+    GLU_NURBS_COLOR_DATA_EXT         = 100173,
+    GLU_NURBS_TEXTURE_COORD_DATA     = 100174,
+    GLU_NURBS_TEX_COORD_DATA_EXT     = 100174,
+    GLU_NURBS_END_DATA               = 100175,
+    GLU_NURBS_END_DATA_EXT           = 100175,
     // NurbsError
-    GLU_NURBS_ERROR1                = 100251,
-    GLU_NURBS_ERROR2                = 100252,
-    GLU_NURBS_ERROR3                = 100253,
-    GLU_NURBS_ERROR4                = 100254,
-    GLU_NURBS_ERROR5                = 100255,
-    GLU_NURBS_ERROR6                = 100256,
-    GLU_NURBS_ERROR7                = 100257,
-    GLU_NURBS_ERROR8                = 100258,
-    GLU_NURBS_ERROR9                = 100259,
-    GLU_NURBS_ERROR10               = 100260,
-    GLU_NURBS_ERROR11               = 100261,
-    GLU_NURBS_ERROR12               = 100262,
-    GLU_NURBS_ERROR13               = 100263,
-    GLU_NURBS_ERROR14               = 100264,
-    GLU_NURBS_ERROR15               = 100265,
-    GLU_NURBS_ERROR16               = 100266,
-    GLU_NURBS_ERROR17               = 100267,
-    GLU_NURBS_ERROR18               = 100268,
-    GLU_NURBS_ERROR19               = 100269,
-    GLU_NURBS_ERROR20               = 100270,
-    GLU_NURBS_ERROR21               = 100271,
-    GLU_NURBS_ERROR22               = 100272,
-    GLU_NURBS_ERROR23               = 100273,
-    GLU_NURBS_ERROR24               = 100274,
-    GLU_NURBS_ERROR25               = 100275,
-    GLU_NURBS_ERROR26               = 100276,
-    GLU_NURBS_ERROR27               = 100277,
-    GLU_NURBS_ERROR28               = 100278,
-    GLU_NURBS_ERROR29               = 100279,
-    GLU_NURBS_ERROR30               = 100280,
-    GLU_NURBS_ERROR31               = 100281,
-    GLU_NURBS_ERROR32               = 100282,
-    GLU_NURBS_ERROR33               = 100283,
-    GLU_NURBS_ERROR34               = 100284,
-    GLU_NURBS_ERROR35               = 100285,
-    GLU_NURBS_ERROR36               = 100286,
-    GLU_NURBS_ERROR37               = 100287,
+    GLU_NURBS_ERROR1                 = 100251,
+    GLU_NURBS_ERROR2                 = 100252,
+    GLU_NURBS_ERROR3                 = 100253,
+    GLU_NURBS_ERROR4                 = 100254,
+    GLU_NURBS_ERROR5                 = 100255,
+    GLU_NURBS_ERROR6                 = 100256,
+    GLU_NURBS_ERROR7                 = 100257,
+    GLU_NURBS_ERROR8                 = 100258,
+    GLU_NURBS_ERROR9                 = 100259,
+    GLU_NURBS_ERROR10                = 100260,
+    GLU_NURBS_ERROR11                = 100261,
+    GLU_NURBS_ERROR12                = 100262,
+    GLU_NURBS_ERROR13                = 100263,
+    GLU_NURBS_ERROR14                = 100264,
+    GLU_NURBS_ERROR15                = 100265,
+    GLU_NURBS_ERROR16                = 100266,
+    GLU_NURBS_ERROR17                = 100267,
+    GLU_NURBS_ERROR18                = 100268,
+    GLU_NURBS_ERROR19                = 100269,
+    GLU_NURBS_ERROR20                = 100270,
+    GLU_NURBS_ERROR21                = 100271,
+    GLU_NURBS_ERROR22                = 100272,
+    GLU_NURBS_ERROR23                = 100273,
+    GLU_NURBS_ERROR24                = 100274,
+    GLU_NURBS_ERROR25                = 100275,
+    GLU_NURBS_ERROR26                = 100276,
+    GLU_NURBS_ERROR27                = 100277,
+    GLU_NURBS_ERROR28                = 100278,
+    GLU_NURBS_ERROR29                = 100279,
+    GLU_NURBS_ERROR30                = 100280,
+    GLU_NURBS_ERROR31                = 100281,
+    GLU_NURBS_ERROR32                = 100282,
+    GLU_NURBS_ERROR33                = 100283,
+    GLU_NURBS_ERROR34                = 100284,
+    GLU_NURBS_ERROR35                = 100285,
+    GLU_NURBS_ERROR36                = 100286,
+    GLU_NURBS_ERROR37                = 100287,
     // NurbsProperty
-    GLU_AUTO_LOAD_MATRIX            = 100200,
-    GLU_CULLING                     = 100201,
-    GLU_SAMPLING_TOLERANCE          = 100203,
-    GLU_DISPLAY_MODE                = 100204,
-    GLU_PARAMETRIC_TOLERANCE        = 100202,
-    GLU_SAMPLING_METHOD             = 100205,
-    GLU_U_STEP                      = 100206,
-    GLU_V_STEP                      = 100207,
-    GLU_NURBS_MODE                  = 100160,
-    GLU_NURBS_MODE_EXT              = 100160,
-    GLU_NURBS_TESSELLATOR           = 100161,
-    GLU_NURBS_TESSELLATOR_EXT       = 100161,
-    GLU_NURBS_RENDERER              = 100162,
-    GLU_NURBS_RENDERER_EXT          = 100162,
+    GLU_AUTO_LOAD_MATRIX             = 100200,
+    GLU_CULLING                      = 100201,
+    GLU_SAMPLING_TOLERANCE           = 100203,
+    GLU_DISPLAY_MODE                 = 100204,
+    GLU_PARAMETRIC_TOLERANCE         = 100202,
+    GLU_SAMPLING_METHOD              = 100205,
+    GLU_U_STEP                       = 100206,
+    GLU_V_STEP                       = 100207,
+    GLU_NURBS_MODE                   = 100160,
+    GLU_NURBS_MODE_EXT               = 100160,
+    GLU_NURBS_TESSELLATOR            = 100161,
+    GLU_NURBS_TESSELLATOR_EXT        = 100161,
+    GLU_NURBS_RENDERER               = 100162,
+    GLU_NURBS_RENDERER_EXT           = 100162,
     // NurbsSampling
-    GLU_OBJECT_PARAMETRIC_ERROR     = 100208,
-    GLU_OBJECT_PARAMETRIC_ERROR_EXT = 100208,
-    GLU_OBJECT_PATH_LENGTH          = 100209,
-    GLU_OBJECT_PATH_LENGTH_EXT      = 100209,
-    GLU_PATH_LENGTH                 = 100215,
-    GLU_PARAMETRIC_ERROR            = 100216,
-    GLU_DOMAIN_DISTANCE             = 100217,
+    GLU_OBJECT_PARAMETRIC_ERROR      = 100208,
+    GLU_OBJECT_PARAMETRIC_ERROR_EXT  = 100208,
+    GLU_OBJECT_PATH_LENGTH           = 100209,
+    GLU_OBJECT_PATH_LENGTH_EXT       = 100209,
+    GLU_PATH_LENGTH                  = 100215,
+    GLU_PARAMETRIC_ERROR             = 100216,
+    GLU_DOMAIN_DISTANCE              = 100217,
     // NurbsTrim
-    GLU_MAP1_TRIM_2                 = 100210,
-    GLU_MAP2_TRIM_3                 = 100211,
+    GLU_MAP1_TRIM_2                  = 100210,
+    GLU_MAP2_TRIM_3                  = 100211,
     // QuadricDrawStyle
-    GLU_POINT                       = 100010,
-    GLU_LINE                        = 100011,
-    GLU_FILL                        = 100012,
-    GLU_SILHOUETTE                  = 100013,
+    GLU_POINT                        = 100010,
+    GLU_LINE                         = 100011,
+    GLU_FILL                         = 100012,
+    GLU_SILHOUETTE                   = 100013,
     // QuadricNormal
-    GLU_SMOOTH                      = 100000,
-    GLU_FLAT                        = 100001,
-    GLU_NONE                        = 100002,
+    GLU_SMOOTH                       = 100000,
+    GLU_FLAT                         = 100001,
+    GLU_NONE                         = 100002,
     // QuadricOrientation
-    GLU_OUTSIDE                     = 100020,
-    GLU_INSIDE                      = 100021,
+    GLU_OUTSIDE                      = 100020,
+    GLU_INSIDE                       = 100021,
     // TessCallback
-    GLU_TESS_BEGIN                  = 100100,
-    GLU_BEGIN                       = 100100,
-    GLU_TESS_VERTEX                 = 100101,
-    GLU_VERTEX                      = 100101,
-    GLU_TESS_END                    = 100102,
-    GLU_END                         = 100102,
-    GLU_TESS_ERROR                  = 100103,
-    GLU_TESS_EDGE_FLAG              = 100104,
-    GLU_EDGE_FLAG                   = 100104,
-    GLU_TESS_COMBINE                = 100105,
-    GLU_TESS_BEGIN_DATA             = 100106,
-    GLU_TESS_VERTEX_DATA            = 100107,
-    GLU_TESS_END_DATA               = 100108,
-    GLU_TESS_ERROR_DATA             = 100109,
-    GLU_TESS_EDGE_FLAG_DATA         = 100110,
-    GLU_TESS_COMBINE_DATA           = 100111,
+    GLU_TESS_BEGIN                   = 100100,
+    GLU_BEGIN                        = 100100,
+    GLU_TESS_VERTEX                  = 100101,
+    GLU_VERTEX                       = 100101,
+    GLU_TESS_END                     = 100102,
+    GLU_END                          = 100102,
+    GLU_TESS_ERROR                   = 100103,
+    GLU_TESS_EDGE_FLAG               = 100104,
+    GLU_EDGE_FLAG                    = 100104,
+    GLU_TESS_COMBINE                 = 100105,
+    GLU_TESS_BEGIN_DATA              = 100106,
+    GLU_TESS_VERTEX_DATA             = 100107,
+    GLU_TESS_END_DATA                = 100108,
+    GLU_TESS_ERROR_DATA              = 100109,
+    GLU_TESS_EDGE_FLAG_DATA          = 100110,
+    GLU_TESS_COMBINE_DATA            = 100111,
     // TessContour
-    GLU_CW                          = 100120,
-    GLU_CCW                         = 100121,
-    GLU_INTERIOR                    = 100122,
-    GLU_EXTERIOR                    = 100123,
-    GLU_UNKNOWN                     = 100124,
+    GLU_CW                           = 100120,
+    GLU_CCW                          = 100121,
+    GLU_INTERIOR                     = 100122,
+    GLU_EXTERIOR                     = 100123,
+    GLU_UNKNOWN                      = 100124,
     // TessProperty
-    GLU_TESS_WINDING_RULE           = 100140,
-    GLU_TESS_BOUNDARY_ONLY          = 100141,
-    GLU_TESS_TOLERANCE              = 100142,
+    GLU_TESS_WINDING_RULE            = 100140,
+    GLU_TESS_BOUNDARY_ONLY           = 100141,
+    GLU_TESS_TOLERANCE               = 100142,
     // TessError
-    GLU_TESS_ERROR1                 = 100151,
-    GLU_TESS_ERROR2                 = 100152,
-    GLU_TESS_ERROR3                 = 100153,
-    GLU_TESS_ERROR4                 = 100154,
-    GLU_TESS_ERROR5                 = 100155,
-    GLU_TESS_ERROR6                 = 100156,
-    GLU_TESS_ERROR7                 = 100157,
-    GLU_TESS_ERROR8                 = 100158,
-    GLU_TESS_MISSING_BEGIN_POLYGON  = 100151,
-    GLU_TESS_MISSING_BEGIN_COUNTER  = 100152,
-    GLU_TESS_MISSING_END_POLYGON    = 100153,
-    GLU_TESS_MISSING_END_COUNTER    = 100154,
-    GLU_TESS_COORD_TOO_LARGE        = 100155,
-    GLU_TESS_NEED_COMBINE_CALLBACK  = 100156,
+    GLU_TESS_ERROR1                  = 100151,
+    GLU_TESS_ERROR2                  = 100152,
+    GLU_TESS_ERROR3                  = 100153,
+    GLU_TESS_ERROR4                  = 100154,
+    GLU_TESS_ERROR5                  = 100155,
+    GLU_TESS_ERROR6                  = 100156,
+    GLU_TESS_ERROR7                  = 100157,
+    GLU_TESS_ERROR8                  = 100158,
+    GLU_TESS_MISSING_BEGIN_POLYGON   = 100151,
+    GLU_TESS_MISSING_BEGIN_COUNTER   = 100152,
+    GLU_TESS_MISSING_END_POLYGON     = 100153,
+    GLU_TESS_MISSING_END_COUNTER     = 100154,
+    GLU_TESS_COORD_TOO_LARGE         = 100155,
+    GLU_TESS_NEED_COMBINE_CALLBACK   = 100156,
     // TessWinding
-    GLU_TESS_WINDING_ODD            = 100130,
-    GLU_TESS_WINDING_NONZERO        = 100131,
-    GLU_TESS_WINDING_POSITIVE       = 100132,
-    GLU_TESS_WINDING_NEGATIVE       = 100133,
-    GLU_TESS_WINDING_ABS_GEQ_TWO    = 100134,
+    GLU_TESS_WINDING_ODD             = 100130,
+    GLU_TESS_WINDING_NONZERO         = 100131,
+    GLU_TESS_WINDING_POSITIVE        = 100132,
+    GLU_TESS_WINDING_NEGATIVE        = 100133,
+    GLU_TESS_WINDING_ABS_GEQ_TWO     = 100134,
 }
 
 const GLdouble GLU_TESS_MAX_COORD           = 1.0e150;
@@ -292,78 +293,77 @@
 struct GLUquadric {}
 struct GLUtesselator {}
 
-typedef GLUnurbs GLUnurbsObj;
-typedef GLUquadric GLUquadricObj;
-typedef GLUtesselator GLUtesselatorObj;
-typedef GLUtesselator GLUtriangulatorObj;
+alias GLUnurbs GLUnurbsObj;
+alias GLUquadric GLUquadricObj;
+alias GLUtesselator GLUtesselatorObj;
+alias GLUtesselator GLUtriangulatorObj;
 
-extern(System) typedef void function() _GLUfuncptr;
+extern(System) alias void function() _GLUfuncptr;
 
 //==============================================================================
 // DLL FUNCTIONS
 //==============================================================================
-extern(System):
-
-typedef GLint function(GLenum,GLint,GLsizei,GLenum,GLenum,GLint,GLint,GLint,void*) pfgluBuild1DMipmapLevels;
-typedef GLint function(GLenum,GLint,GLsizei,GLenum,GLenum,void*) pfgluBuild1DMipmaps;
-typedef GLint function(GLenum,GLint,GLsizei,GLsizei,GLenum,GLenum,GLint,GLint,GLint,void*) pfgluBuild2DMipmapLevels;
-typedef GLint function(GLenum,GLint,GLsizei,GLsizei,GLenum,GLenum,void*) pfgluBuild2DMipmaps;
-typedef GLint function(GLenum,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLenum,GLint,GLint,GLint,void*) pfgluBuild3DMipmapLevels;
-typedef GLint function(GLenum,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLenum,void*) pfgluBuild3DMipmaps;
-typedef GLboolean function(GLubyte*,GLubyte*) pfgluCheckExtension;
-typedef GLubyte* function(GLenum) pfgluErrorString;
-typedef GLubyte* function(GLenum) pfgluGetString;
-typedef void function(GLUquadric*,GLdouble,GLdouble,GLdouble,GLint,GLint) pfgluCylinder;
-typedef void function(GLUquadric*,GLdouble,GLdouble,GLint,GLint) pfgluDisk;
-typedef void function(GLUquadric*,GLdouble,GLdouble,GLint,GLint,GLdouble,GLdouble) pfgluPartialDisk;
-typedef void function(GLUquadric*,GLdouble,GLint,GLint) pfgluSphere;
-typedef void function(GLUnurbs*) pfgluBeginCurve;
-typedef void function(GLUtesselator*) pfgluBeginPolygon;
-typedef void function(GLUnurbs*) pfgluBeginSurface;
-typedef void function(GLUnurbs*) pfgluBeginTrim;
-typedef void function(GLUnurbs*) pfgluEndCurve;
-typedef void function(GLUtesselator*) pfgluEndPolygon;
-typedef void function(GLUnurbs*) pfgluEndSurface;
-typedef void function(GLUnurbs*) pfgluEndTrim;
-typedef void function(GLUnurbs*) pfgluDeleteNurbsRenderer;
-typedef void function(GLUquadric*) pfgluDeleteQuadric;
-typedef void function(GLUtesselator*) pfgluDeleteTess;
-typedef void function(GLUnurbs*,GLenum,GLfloat*) pfgluGetNurbsProperty;
-typedef void function(GLUtesselator*,GLenum,GLdouble*) pfgluGetTessProperty;
-typedef void function(GLUnurbs*,GLfloat*,GLfloat*,GLint*) pfgluLoadSamplingMatrices;
-typedef GLUnurbs* function() pfgluNewNurbsRenderer;
-typedef GLUquadric* function() pfgluNewQuadric;
-typedef GLUtesselator* function() pfgluNewTess;
-typedef void function(GLUtesselator*,GLenum) pfgluNextContour;
-typedef void function(GLUnurbs*,GLenum,_GLUfuncptr) pfgluNurbsCallback;
-typedef void function(GLUnurbs*,GLvoid*) pfgluNurbsCallbackData;
-typedef void function(GLUnurbs*,GLvoid*) pfgluNurbsCallbackDataEXT;
-typedef void function(GLUnurbs*,GLint,GLfloat*,GLint,GLfloat*,GLint,GLenum) pfgluNurbsCurve;
-typedef void function(GLUnurbs*,GLenum,GLfloat) pfgluNurbsProperty;
-typedef void function(GLUnurbs*,GLint,GLfloat*,GLint,GLfloat*,GLint,GLint,GLfloat*,GLint,GLint,GLenum) pfgluNurbsSurface;
-typedef void function(GLUnurbs*,GLint,GLfloat*,GLint,GLenum) pfgluPwlCurve;
-typedef void function(GLUquadric*,GLenum,_GLUfuncptr) pfgluQuadricCallback;
-typedef void function(GLUquadric*,GLenum) pfgluQuadricDrawStyle;
-typedef void function(GLUquadric*,GLenum) pfgluQuadricNormals;
-typedef void function(GLUquadric*,GLenum) pfgluQuadricOrientation;
-typedef void function(GLUquadric*,GLboolean) pfgluQuadricTexture;
-typedef void function(GLUtesselator*) pfgluTessBeginContour;
-typedef void function(GLUtesselator*,GLvoid*) pfgluTessBeginPolygon;
-typedef void function(GLUtesselator*,GLenum,_GLUfuncptr) pfgluTessCallback;
-typedef void function(GLUtesselator*) pfgluTessEndContour;
-typedef void function(GLUtesselator*) pfgluTessEndPolygon;
-typedef void function(GLUtesselator*,GLdouble,GLdouble,GLdouble) pfgluTessNormal;
-typedef void function(GLUtesselator*,GLenum,GLdouble) pfgluTessProperty;
-typedef void function(GLUtesselator*,GLdouble*,GLvoid*) pfgluTessVertex;
-typedef void function(GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble) pfgluLookAt;
-typedef void function(GLdouble,GLdouble,GLdouble,GLdouble) pfgluOrtho2D;
-typedef void function(GLdouble,GLdouble,GLdouble,GLdouble) pfgluPerspective;
-typedef void function(GLdouble,GLdouble,GLdouble,GLdouble,GLint*) pfgluPickMatrix;
-typedef GLint function(GLdouble,GLdouble,GLdouble,GLdouble*,GLdouble*,GLint*,GLdouble*,GLdouble*,GLdouble*) pfgluProject;
-typedef GLint function(GLenum,GLsizei,GLsizei,GLenum,void*,GLsizei,GLsizei,GLenum,GLvoid*) pfgluScaleImage;
-typedef GLint function(GLdouble,GLdouble,GLdouble,GLdouble*,GLdouble*,GLint*,GLdouble*,GLdouble*,GLdouble*) pfgluUnProject;
-typedef GLint function(GLdouble,GLdouble,GLdouble,GLdouble,GLdouble*,GLdouble*,GLint*,GLdouble,GLdouble,GLdouble*,GLdouble*,GLdouble*,GLdouble*) pfgluUnProject4;
-
+extern(System) {
+alias GLint function(GLenum,GLint,GLsizei,GLenum,GLenum,GLint,GLint,GLint,void*) pfgluBuild1DMipmapLevels;
+alias GLint function(GLenum,GLint,GLsizei,GLenum,GLenum,void*) pfgluBuild1DMipmaps;
+alias GLint function(GLenum,GLint,GLsizei,GLsizei,GLenum,GLenum,GLint,GLint,GLint,void*) pfgluBuild2DMipmapLevels;
+alias GLint function(GLenum,GLint,GLsizei,GLsizei,GLenum,GLenum,void*) pfgluBuild2DMipmaps;
+alias GLint function(GLenum,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLenum,GLint,GLint,GLint,void*) pfgluBuild3DMipmapLevels;
+alias GLint function(GLenum,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLenum,void*) pfgluBuild3DMipmaps;
+alias GLboolean function(GLubyte*,GLubyte*) pfgluCheckExtension;
+alias GLubyte* function(GLenum) pfgluErrorString;
+alias GLubyte* function(GLenum) pfgluGetString;
+alias void function(GLUquadric*,GLdouble,GLdouble,GLdouble,GLint,GLint) pfgluCylinder;
+alias void function(GLUquadric*,GLdouble,GLdouble,GLint,GLint) pfgluDisk;
+alias void function(GLUquadric*,GLdouble,GLdouble,GLint,GLint,GLdouble,GLdouble) pfgluPartialDisk;
+alias void function(GLUquadric*,GLdouble,GLint,GLint) pfgluSphere;
+alias void function(GLUnurbs*) pfgluBeginCurve;
+alias void function(GLUtesselator*) pfgluBeginPolygon;
+alias void function(GLUnurbs*) pfgluBeginSurface;
+alias void function(GLUnurbs*) pfgluBeginTrim;
+alias void function(GLUnurbs*) pfgluEndCurve;
+alias void function(GLUtesselator*) pfgluEndPolygon;
+alias void function(GLUnurbs*) pfgluEndSurface;
+alias void function(GLUnurbs*) pfgluEndTrim;
+alias void function(GLUnurbs*) pfgluDeleteNurbsRenderer;
+alias void function(GLUquadric*) pfgluDeleteQuadric;
+alias void function(GLUtesselator*) pfgluDeleteTess;
+alias void function(GLUnurbs*,GLenum,GLfloat*) pfgluGetNurbsProperty;
+alias void function(GLUtesselator*,GLenum,GLdouble*) pfgluGetTessProperty;
+alias void function(GLUnurbs*,GLfloat*,GLfloat*,GLint*) pfgluLoadSamplingMatrices;
+alias GLUnurbs* function() pfgluNewNurbsRenderer;
+alias GLUquadric* function() pfgluNewQuadric;
+alias GLUtesselator* function() pfgluNewTess;
+alias void function(GLUtesselator*,GLenum) pfgluNextContour;
+alias void function(GLUnurbs*,GLenum,_GLUfuncptr) pfgluNurbsCallback;
+alias void function(GLUnurbs*,GLvoid*) pfgluNurbsCallbackData;
+alias void function(GLUnurbs*,GLvoid*) pfgluNurbsCallbackDataEXT;
+alias void function(GLUnurbs*,GLint,GLfloat*,GLint,GLfloat*,GLint,GLenum) pfgluNurbsCurve;
+alias void function(GLUnurbs*,GLenum,GLfloat) pfgluNurbsProperty;
+alias void function(GLUnurbs*,GLint,GLfloat*,GLint,GLfloat*,GLint,GLint,GLfloat*,GLint,GLint,GLenum) pfgluNurbsSurface;
+alias void function(GLUnurbs*,GLint,GLfloat*,GLint,GLenum) pfgluPwlCurve;
+alias void function(GLUquadric*,GLenum,_GLUfuncptr) pfgluQuadricCallback;
+alias void function(GLUquadric*,GLenum) pfgluQuadricDrawStyle;
+alias void function(GLUquadric*,GLenum) pfgluQuadricNormals;
+alias void function(GLUquadric*,GLenum) pfgluQuadricOrientation;
+alias void function(GLUquadric*,GLboolean) pfgluQuadricTexture;
+alias void function(GLUtesselator*) pfgluTessBeginContour;
+alias void function(GLUtesselator*,GLvoid*) pfgluTessBeginPolygon;
+alias void function(GLUtesselator*,GLenum,_GLUfuncptr) pfgluTessCallback;
+alias void function(GLUtesselator*) pfgluTessEndContour;
+alias void function(GLUtesselator*) pfgluTessEndPolygon;
+alias void function(GLUtesselator*,GLdouble,GLdouble,GLdouble) pfgluTessNormal;
+alias void function(GLUtesselator*,GLenum,GLdouble) pfgluTessProperty;
+alias void function(GLUtesselator*,GLdouble*,GLvoid*) pfgluTessVertex;
+alias void function(GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble) pfgluLookAt;
+alias void function(GLdouble,GLdouble,GLdouble,GLdouble) pfgluOrtho2D;
+alias void function(GLdouble,GLdouble,GLdouble,GLdouble) pfgluPerspective;
+alias void function(GLdouble,GLdouble,GLdouble,GLdouble,GLint*) pfgluPickMatrix;
+alias GLint function(GLdouble,GLdouble,GLdouble,GLdouble*,GLdouble*,GLint*,GLdouble*,GLdouble*,GLdouble*) pfgluProject;
+alias GLint function(GLenum,GLsizei,GLsizei,GLenum,void*,GLsizei,GLsizei,GLenum,GLvoid*) pfgluScaleImage;
+alias GLint function(GLdouble,GLdouble,GLdouble,GLdouble*,GLdouble*,GLint*,GLdouble*,GLdouble*,GLdouble*) pfgluUnProject;
+alias GLint function(GLdouble,GLdouble,GLdouble,GLdouble,GLdouble*,GLdouble*,GLint*,GLdouble,GLdouble,GLdouble*,GLdouble*,GLdouble*,GLdouble*) pfgluUnProject4;
+}
 //pfgluBuild1DMipmapLevels  gluBuild1DMipmapLevels;
 pfgluBuild1DMipmaps         gluBuild1DMipmaps;
 //pfgluBuild2DMipmapLevels  gluBuild2DMipmapLevels;
Index: DerelictSDLMixer/derelict/sdl/mixer.d
===================================================================
--- DerelictSDLMixer/derelict/sdl/mixer.d	(revision 318)
+++ DerelictSDLMixer/derelict/sdl/mixer.d	(working copy)
@@ -83,7 +83,7 @@
 };
 
 struct _Mix_Music {}
-typedef _Mix_Music Mix_Music;
+alias _Mix_Music Mix_Music;
 
 enum
 {
@@ -104,8 +104,8 @@
 
 extern(C)
 {
-typedef void function(int chan, void* stream, int len, void* udata) Mix_EffectFunc_t;
-typedef void function(int chan, void* udata) Mix_EffectDone_t;
+alias void function(int chan, void* stream, int len, void* udata) Mix_EffectFunc_t;
+alias void function(int chan, void* udata) Mix_EffectDone_t;
 }
 
 //==============================================================================
@@ -139,71 +139,71 @@
 //==============================================================================
 // Functions
 //==============================================================================
-extern (C)
-{
-typedef SDL_version* function() pfMix_Linked_Version;
-typedef int function (int frequency, Uint16 format, int channels, int chunksize) pfMix_OpenAudio;
-typedef int function(int numchans) pfMix_AllocateChannels;
-typedef int function(int* frequency, Uint16* format, int* channels) pfMix_QuerySpec;
-typedef Mix_Chunk* function(SDL_RWops* src, int freesrc) pfMix_LoadWAV_RW;
-typedef Mix_Music* function(char* file) pfMix_LoadMUS;
-typedef Mix_Music* function(SDL_RWops* rw) pfMix_LoadMUS_RW;
-typedef Mix_Chunk* function(Uint8* mem) pfMix_QuickLoad_WAV;
-typedef Mix_Chunk* function(Uint8* mem, Uint32 len) pfMix_QuickLoad_RAW;
-typedef void function(Mix_Chunk* chunk) pfMix_FreeChunk;
-typedef void function(Mix_Music* music) pfMix_FreeMusic;
-typedef Mix_MusicType function(Mix_Music* music) pfMix_GetMusicType;
-typedef void function(void (*mix_func)(void* udata, Uint8* stream, int len), void* arg) pfMix_SetPostMix;
-typedef void function(void (*mix_func)(void* udata, Uint8* stream, int len), void* arg) pfMix_HookMusic;
-typedef void function(void (*music_finished)()) pfMix_HookMusicFinished;
-typedef void*  function() pfMix_GetMusicHookData;
-typedef void function(void (*channel_finished)(int channel)) pfMix_ChannelFinished;
-typedef int function(int chan, Mix_EffectFunc_t f, Mix_EffectDone_t d, void* arg) pfMix_RegisterEffect;
-typedef int function(int channel, Mix_EffectFunc_t f) pfMix_UnregisterEffect;
-typedef int function(int channel) pfMix_UnregisterAllEffects;
-typedef int function(int channel, Uint8 left, Uint8 right) pfMix_SetPanning;
-typedef int function(int channel, Sint16 angle, Uint8 distance) pfMix_SetPosition;
-typedef int function(int channel, Uint8 distance) pfMix_SetDistance;
-typedef int function(int channel, int flip) pfMix_SetReverseStereo;
-typedef int function(int num) pfMix_ReserveChannels;
-typedef int function(int which, int tag) pfMix_GroupChannel;
-typedef int function(int from, int to, int tag) pfMix_GroupChannels;
-typedef int function(int tag) pfMix_GroupAvailable;
-typedef int function(int tag) pfMix_GroupCount;
-typedef int function(int tag) pfMix_GroupOldest;
-typedef int function(int tag) pfMix_GroupNewer;
-typedef int function(int channel, Mix_Chunk* chunk, int loops, int ticks) pfMix_PlayChannelTimed;
-typedef int function(Mix_Music* music, int loops) pfMix_PlayMusic;
-typedef int function(Mix_Music* music, int loops, int ms) pfMix_FadeInMusic;
-typedef int function(Mix_Music* music, int loops, int ms, double position) pfMix_FadeInMusicPos;
-typedef int function(int channel, Mix_Chunk* chunk, int loops, int ms, int ticks) pfMix_FadeInChannelTimed;
-typedef int function(int channel, int volume) pfMix_Volume;
-typedef int function(Mix_Chunk* chunk, int volume) pfMix_VolumeChunk;
-typedef int function(int volume) pfMix_VolumeMusic;
-typedef int function(int channel) pfMix_HaltChannel;
-typedef int function(int tag) pfMix_HaltGroup;
-typedef int function() pfMix_HaltMusic;
-typedef int function(int channel, int ticks) pfMix_ExpireChannel;
-typedef int function(int which, int ms) pfMix_FadeOutChannel;
-typedef int function(int tag, int ms) pfMix_FadeOutGroup;
-typedef int function(int ms) pfMix_FadeOutMusic;
-typedef Mix_Fading function() pfMix_FadingMusic;
-typedef Mix_Fading function(int which) pfMix_FadingChannel;
-typedef void function(int channel) pfMix_Pause;
-typedef void function(int channel) pfMix_Resume;
-typedef int function(int channel) pfMix_Paused;
-typedef void function() pfMix_PauseMusic;
-typedef void function() pfMix_ResumeMusic;
-typedef void function() pfMix_RewindMusic;
-typedef int function() pfMix_PausedMusic;
-typedef int function(double position) pfMix_SetMusicPosition;
-typedef int function(int channel) pfMix_Playing;
-typedef int function() pfMix_PlayingMusic;
-typedef int function(char* command) pfMix_SetMusicCMD;
-typedef int function(int value) pfMix_SetSynchroValue;
-typedef int function() pfMix_GetSynchroValue;
-typedef Mix_Chunk*  function(int channel) pfMix_GetChunk;
-typedef void function() pfMix_CloseAudio;
+extern (C) {
+alias SDL_version* function() pfMix_Linked_Version;
+alias int function (int frequency, Uint16 format, int channels, int chunksize) pfMix_OpenAudio;
+alias int function(int numchans) pfMix_AllocateChannels;
+alias int function(int* frequency, Uint16* format, int* channels) pfMix_QuerySpec;
+alias Mix_Chunk* function(SDL_RWops* src, int freesrc) pfMix_LoadWAV_RW;
+alias Mix_Music* function(char* file) pfMix_LoadMUS;
+alias Mix_Music* function(SDL_RWops* rw) pfMix_LoadMUS_RW;
+alias Mix_Chunk* function(Uint8* mem) pfMix_QuickLoad_WAV;
+alias Mix_Chunk* function(Uint8* mem, Uint32 len) pfMix_QuickLoad_RAW;
+alias void function(Mix_Chunk* chunk) pfMix_FreeChunk;
+alias void function(Mix_Music* music) pfMix_FreeMusic;
+alias Mix_MusicType function(Mix_Music* music) pfMix_GetMusicType;
+alias void function(void (*mix_func)(void* udata, Uint8* stream, int len), void* arg) pfMix_SetPostMix;
+alias void function(void (*mix_func)(void* udata, Uint8* stream, int len), void* arg) pfMix_HookMusic;
+alias void function(void (*music_finished)()) pfMix_HookMusicFinished;
+alias void*  function() pfMix_GetMusicHookData;
+alias void function(void (*channel_finished)(int channel)) pfMix_ChannelFinished;
+alias int function(int chan, Mix_EffectFunc_t f, Mix_EffectDone_t d, void* arg) pfMix_RegisterEffect;
+alias int function(int channel, Mix_EffectFunc_t f) pfMix_UnregisterEffect;
+alias int function(int channel) pfMix_UnregisterAllEffects;
+alias int function(int channel, Uint8 left, Uint8 right) pfMix_SetPanning;
+alias int function(int channel, Sint16 angle, Uint8 distance) pfMix_SetPosition;
+alias int function(int channel, Uint8 distance) pfMix_SetDistance;
+alias int function(int channel, int flip) pfMix_SetReverseStereo;
+alias int function(int num) pfMix_ReserveChannels;
+alias int function(int which, int tag) pfMix_GroupChannel;
+alias int function(int from, int to, int tag) pfMix_GroupChannels;
+alias int function(int tag) pfMix_GroupAvailable;
+alias int function(int tag) pfMix_GroupCount;
+alias int function(int tag) pfMix_GroupOldest;
+alias int function(int tag) pfMix_GroupNewer;
+alias int function(int channel, Mix_Chunk* chunk, int loops, int ticks) pfMix_PlayChannelTimed;
+alias int function(Mix_Music* music, int loops) pfMix_PlayMusic;
+alias int function(Mix_Music* music, int loops, int ms) pfMix_FadeInMusic;
+alias int function(Mix_Music* music, int loops, int ms, double position) pfMix_FadeInMusicPos;
+alias int function(int channel, Mix_Chunk* chunk, int loops, int ms, int ticks) pfMix_FadeInChannelTimed;
+alias int function(int channel, int volume) pfMix_Volume;
+alias int function(Mix_Chunk* chunk, int volume) pfMix_VolumeChunk;
+alias int function(int volume) pfMix_VolumeMusic;
+alias int function(int channel) pfMix_HaltChannel;
+alias int function(int tag) pfMix_HaltGroup;
+alias int function() pfMix_HaltMusic;
+alias int function(int channel, int ticks) pfMix_ExpireChannel;
+alias int function(int which, int ms) pfMix_FadeOutChannel;
+alias int function(int tag, int ms) pfMix_FadeOutGroup;
+alias int function(int ms) pfMix_FadeOutMusic;
+alias Mix_Fading function() pfMix_FadingMusic;
+alias Mix_Fading function(int which) pfMix_FadingChannel;
+alias void function(int channel) pfMix_Pause;
+alias void function(int channel) pfMix_Resume;
+alias int function(int channel) pfMix_Paused;
+alias void function() pfMix_PauseMusic;
+alias void function() pfMix_ResumeMusic;
+alias void function() pfMix_RewindMusic;
+alias int function() pfMix_PausedMusic;
+alias int function(double position) pfMix_SetMusicPosition;
+alias int function(int channel) pfMix_Playing;
+alias int function() pfMix_PlayingMusic;
+alias int function(char* command) pfMix_SetMusicCMD;
+alias int function(int value) pfMix_SetSynchroValue;
+alias int function() pfMix_GetSynchroValue;
+alias Mix_Chunk*  function(int channel) pfMix_GetChunk;
+alias void function() pfMix_CloseAudio;
+}
 
 pfMix_Linked_Version            Mix_Linked_Version;
 pfMix_OpenAudio                 Mix_OpenAudio;
@@ -268,8 +268,8 @@
 pfMix_GetSynchroValue           Mix_GetSynchroValue;
 pfMix_GetChunk                  Mix_GetChunk;
 pfMix_CloseAudio                Mix_CloseAudio;
-}
 
+
 //==============================================================================
 // Loader
 //==============================================================================
Index: DerelictILU/derelict/devil/ilufuncs.d
===================================================================
--- DerelictILU/derelict/devil/ilufuncs.d	(revision 318)
+++ DerelictILU/derelict/devil/ilufuncs.d	(working copy)
@@ -99,53 +99,53 @@
     );
 }
 
-extern(System):
+extern(System) {
+alias ILboolean            function() pfiluAlienify;
+alias ILboolean            function(ILuint Iter) pfiluBlurAvg;
+alias ILboolean            function(ILuint Iter) pfiluBlurGaussian;
+alias ILboolean            function() pfiluBuildMipmaps;
+alias ILuint           function() pfiluColoursUsed;
+alias ILboolean            function(ILuint Comp) pfiluCompareImage;
+alias ILboolean            function(ILfloat Contrast) pfiluContrast;
+alias ILboolean            function(ILuint XOff, ILuint YOff, ILuint ZOff, ILuint Width, ILuint Height, ILuint Depth) pfiluCrop;
+alias ILvoid           function(ILuint Id) pfiluDeleteImage;
+alias ILboolean            function() pfiluEdgeDetectE;
+alias ILboolean            function() pfiluEdgeDetectP;
+alias ILboolean            function() pfiluEdgeDetectS;
+alias ILboolean            function() pfiluEmboss;
+alias ILboolean            function(ILuint Width, ILuint Height, ILuint Depth) pfiluEnlargeCanvas;
+alias ILboolean            function(ILfloat XDim, ILfloat YDim, ILfloat ZDim) pfiluEnlargeImage;
+alias ILboolean            function() pfiluEqualize;
+alias ILstring     function(ILenum Error) pfiluErrorString;
+alias ILboolean            function() pfiluFlipImage;
+alias ILboolean            function(ILfloat Gamma) pfiluGammaCorrect;
+alias ILuint           function() pfiluGenImage;
+alias ILvoid           function(ILinfo *Info) pfiluGetImageInfo;
+alias ILint                function(ILenum Mode) pfiluGetInteger;
+alias ILvoid           function(ILenum Mode, ILint *Param) pfiluGetIntegerv;
+alias ILstring     function(ILenum StringName) pfiluGetString;
+alias ILvoid           function(ILenum PName, ILenum Param) pfiluImageParameter;
+alias ILvoid           function() pfiluInit;
+alias ILboolean            function() pfiluInvertAlpha;
+alias ILuint           function( ILstring FileName) pfiluLoadImage;
+alias ILboolean            function() pfiluMirror;
+alias ILboolean            function() pfiluNegative;
+alias ILboolean            function(ILclampf Tolerance) pfiluNoisify;
+alias ILboolean            function(ILuint PixSize) pfiluPixelize;
+alias ILvoid           function(ILpointf *Points, ILuint n) pfiluRegionfv;
+alias ILvoid           function(ILpointi *Points, ILuint n) pfiluRegioniv;
+alias ILboolean            function(ILubyte Red, ILubyte Green, ILubyte Blue, ILfloat Tolerance) pfiluReplaceColour;
+alias ILboolean            function(ILfloat Angle) pfiluRotate;
+alias ILboolean            function(ILfloat x, ILfloat y, ILfloat z, ILfloat Angle) pfiluRotate3D;
+alias ILboolean            function(ILfloat Saturation) pfiluSaturate1f;
+alias ILboolean            function(ILfloat r, ILfloat g, ILfloat b, ILfloat Saturation) pfiluSaturate4f;
+alias ILboolean            function(ILuint Width, ILuint Height, ILuint Depth) pfiluScale;
+alias ILboolean            function(ILfloat r, ILfloat g, ILfloat b) pfiluScaleColours;
+alias ILboolean            function(ILfloat Factor, ILuint Iter) pfiluSharpen;
+alias ILboolean            function() pfiluSwapColours;
+alias ILboolean            function(ILfloat Angle) pfiluWave;
+}
 
-typedef ILboolean            function() pfiluAlienify;
-typedef ILboolean            function(ILuint Iter) pfiluBlurAvg;
-typedef ILboolean            function(ILuint Iter) pfiluBlurGaussian;
-typedef ILboolean            function() pfiluBuildMipmaps;
-typedef ILuint           function() pfiluColoursUsed;
-typedef ILboolean            function(ILuint Comp) pfiluCompareImage;
-typedef ILboolean            function(ILfloat Contrast) pfiluContrast;
-typedef ILboolean            function(ILuint XOff, ILuint YOff, ILuint ZOff, ILuint Width, ILuint Height, ILuint Depth) pfiluCrop;
-typedef ILvoid           function(ILuint Id) pfiluDeleteImage;
-typedef ILboolean            function() pfiluEdgeDetectE;
-typedef ILboolean            function() pfiluEdgeDetectP;
-typedef ILboolean            function() pfiluEdgeDetectS;
-typedef ILboolean            function() pfiluEmboss;
-typedef ILboolean            function(ILuint Width, ILuint Height, ILuint Depth) pfiluEnlargeCanvas;
-typedef ILboolean            function(ILfloat XDim, ILfloat YDim, ILfloat ZDim) pfiluEnlargeImage;
-typedef ILboolean            function() pfiluEqualize;
-typedef ILstring     function(ILenum Error) pfiluErrorString;
-typedef ILboolean            function() pfiluFlipImage;
-typedef ILboolean            function(ILfloat Gamma) pfiluGammaCorrect;
-typedef ILuint           function() pfiluGenImage;
-typedef ILvoid           function(ILinfo *Info) pfiluGetImageInfo;
-typedef ILint                function(ILenum Mode) pfiluGetInteger;
-typedef ILvoid           function(ILenum Mode, ILint *Param) pfiluGetIntegerv;
-typedef ILstring     function(ILenum StringName) pfiluGetString;
-typedef ILvoid           function(ILenum PName, ILenum Param) pfiluImageParameter;
-typedef ILvoid           function() pfiluInit;
-typedef ILboolean            function() pfiluInvertAlpha;
-typedef ILuint           function( ILstring FileName) pfiluLoadImage;
-typedef ILboolean            function() pfiluMirror;
-typedef ILboolean            function() pfiluNegative;
-typedef ILboolean            function(ILclampf Tolerance) pfiluNoisify;
-typedef ILboolean            function(ILuint PixSize) pfiluPixelize;
-typedef ILvoid           function(ILpointf *Points, ILuint n) pfiluRegionfv;
-typedef ILvoid           function(ILpointi *Points, ILuint n) pfiluRegioniv;
-typedef ILboolean            function(ILubyte Red, ILubyte Green, ILubyte Blue, ILfloat Tolerance) pfiluReplaceColour;
-typedef ILboolean            function(ILfloat Angle) pfiluRotate;
-typedef ILboolean            function(ILfloat x, ILfloat y, ILfloat z, ILfloat Angle) pfiluRotate3D;
-typedef ILboolean            function(ILfloat Saturation) pfiluSaturate1f;
-typedef ILboolean            function(ILfloat r, ILfloat g, ILfloat b, ILfloat Saturation) pfiluSaturate4f;
-typedef ILboolean            function(ILuint Width, ILuint Height, ILuint Depth) pfiluScale;
-typedef ILboolean            function(ILfloat r, ILfloat g, ILfloat b) pfiluScaleColours;
-typedef ILboolean            function(ILfloat Factor, ILuint Iter) pfiluSharpen;
-typedef ILboolean            function() pfiluSwapColours;
-typedef ILboolean            function(ILfloat Angle) pfiluWave;
-
 pfiluAlienify iluAlienify;
 pfiluBlurAvg iluBlurAvg;
 pfiluBlurGaussian iluBlurGaussian;
Index: DerelictSDLNet/derelict/sdl/net.d
===================================================================
--- DerelictSDLNet/derelict/sdl/net.d	(revision 318)
+++ DerelictSDLNet/derelict/sdl/net.d	(working copy)
@@ -53,7 +53,7 @@
     Uint16 port;
 }
 
-typedef void* TCPsocket;
+alias void* TCPsocket;
 
 enum : uint
 {
@@ -64,7 +64,7 @@
     SDLNET_MAX_UDPADDRESSES = 4,
 }
 
-typedef void* UDPsocket;
+alias void* UDPsocket;
 
 struct UDPpacket
 {
@@ -76,7 +76,7 @@
     IPaddress address;
 }
 
-typedef void* SDLNet_SocketSet;
+alias void* SDLNet_SocketSet;
 
 struct _SDLNet_GenericSocket
 {
@@ -156,52 +156,65 @@
 //==============================================================================
 extern(C)
 {
-typedef SDL_version* function() pfSDLNet_Linked_Version;
+alias SDL_version* function() pfSDLNet_Linked_Version;
+
+alias int function() pfSDLNet_Init;
+alias void function() pfSDLNet_Quit;
+
+alias int function(IPaddress*, char*, Uint16) pfSDLNet_ResolveHost;
+alias char* function(IPaddress*) pfSDLNet_ResolveIP;
+
+alias TCPsocket function(IPaddress*) pfSDLNet_TCP_Open;
+alias TCPsocket function(TCPsocket) pfSDLNet_TCP_Accept;
+alias IPaddress* function(TCPsocket) pfSDLNet_TCP_GetPeerAddress;
+alias int function(TCPsocket,void*,int) pfSDLNet_TCP_Send;
+alias int function(TCPsocket,void*,int) pfSDLNet_TCP_Recv;
+alias void function(TCPsocket) pfSDLNet_TCP_Close;
+
+alias UDPpacket* function(int) pfSDLNet_AllocPacket;
+alias int function(UDPpacket*) pfSDLNet_ResizePacket;
+alias void function(UDPpacket*) pfSDLNet_FreePacket;
+alias UDPpacket** function(int,int) pfSDLNet_AllocPacketV;
+alias void function(UDPpacket**) pfSDLNet_FreePacketV;
+
+alias UDPsocket function(Uint16) pfSDLNet_UDP_Open;
+alias int function(UDPsocket,int,IPaddress*) pfSDLNet_UDP_Bind;
+alias void function(UDPsocket,int) pfSDLNet_UDP_Unbind;
+alias IPaddress* function(UDPsocket,int) pfSDLNet_UDP_GetPeerAddress;
+alias int function(UDPsocket,UDPpacket**,int) pfSDLNet_UDP_SendV;
+alias int function(UDPsocket,int,UDPpacket*) pfSDLNet_UDP_Send;
+alias int function(UDPsocket,UDPpacket**) pfSDLNet_UDP_RecvV;
+alias int function(UDPsocket,UDPpacket*) pfSDLNet_UDP_Recv;
+alias void function(UDPsocket) pfSDLNet_UDP_Close;
+
+alias SDLNet_SocketSet function(int) pfSDLNet_AllocSocketSet;
+alias int function(SDLNet_SocketSet,SDLNet_GenericSocket) pfSDLNet_AddSocket;
+alias int function(SDLNet_SocketSet,SDLNet_GenericSocket) pfSDLNet_DelSocket;
+alias int function(SDLNet_SocketSet,Uint32) pfSDLNet_CheckSockets;
+alias void function(SDLNet_SocketSet) pfSDLNet_FreeSocketSet;
+} // extern(C)
+
 pfSDLNet_Linked_Version SDLNet_Linked_Version;
-
-typedef int function() pfSDLNet_Init;
-typedef void function() pfSDLNet_Quit;
+
 pfSDLNet_Init           SDLNet_Init;
 pfSDLNet_Quit           SDLNet_Quit;
-
-typedef int function(IPaddress*, char*, Uint16) pfSDLNet_ResolveHost;
-typedef char* function(IPaddress*) pfSDLNet_ResolveIP;
+
 pfSDLNet_ResolveHost        SDLNet_ResolveHost;
-pfSDLNet_ResolveIP          SDLNet_ResolveIP;
-
-typedef TCPsocket function(IPaddress*) pfSDLNet_TCP_Open;
-typedef TCPsocket function(TCPsocket) pfSDLNet_TCP_Accept;
-typedef IPaddress* function(TCPsocket) pfSDLNet_TCP_GetPeerAddress;
-typedef int function(TCPsocket,void*,int) pfSDLNet_TCP_Send;
-typedef int function(TCPsocket,void*,int) pfSDLNet_TCP_Recv;
-typedef void function(TCPsocket) pfSDLNet_TCP_Close;
+pfSDLNet_ResolveIP          SDLNet_ResolveIP;
+
 pfSDLNet_TCP_Open           SDLNet_TCP_Open;
 pfSDLNet_TCP_Accept         SDLNet_TCP_Accept;
 pfSDLNet_TCP_GetPeerAddress SDLNet_TCP_GetPeerAddress;
 pfSDLNet_TCP_Send           SDLNet_TCP_Send;
 pfSDLNet_TCP_Recv           SDLNet_TCP_Recv;
 pfSDLNet_TCP_Close          SDLNet_TCP_Close;
-
-typedef UDPpacket* function(int) pfSDLNet_AllocPacket;
-typedef int function(UDPpacket*) pfSDLNet_ResizePacket;
-typedef void function(UDPpacket*) pfSDLNet_FreePacket;
-typedef UDPpacket** function(int,int) pfSDLNet_AllocPacketV;
-typedef void function(UDPpacket**) pfSDLNet_FreePacketV;
+
 pfSDLNet_AllocPacket        SDLNet_AllocPacket;
 pfSDLNet_ResizePacket       SDLNet_ResizePacket;
 pfSDLNet_FreePacket         SDLNet_FreePacket;
 pfSDLNet_AllocPacketV       SDLNet_AllocPacketV;
 pfSDLNet_FreePacketV        SDLNet_FreePacketV;
-
-typedef UDPsocket function(Uint16) pfSDLNet_UDP_Open;
-typedef int function(UDPsocket,int,IPaddress*) pfSDLNet_UDP_Bind;
-typedef void function(UDPsocket,int) pfSDLNet_UDP_Unbind;
-typedef IPaddress* function(UDPsocket,int) pfSDLNet_UDP_GetPeerAddress;
-typedef int function(UDPsocket,UDPpacket**,int) pfSDLNet_UDP_SendV;
-typedef int function(UDPsocket,int,UDPpacket*) pfSDLNet_UDP_Send;
-typedef int function(UDPsocket,UDPpacket**) pfSDLNet_UDP_RecvV;
-typedef int function(UDPsocket,UDPpacket*) pfSDLNet_UDP_Recv;
-typedef void function(UDPsocket) pfSDLNet_UDP_Close;
+
 pfSDLNet_UDP_Open           SDLNet_UDP_Open;
 pfSDLNet_UDP_Bind           SDLNet_UDP_Bind;
 pfSDLNet_UDP_Unbind         SDLNet_UDP_Unbind;
@@ -211,12 +224,7 @@
 pfSDLNet_UDP_RecvV          SDLNet_UDP_RecvV;
 pfSDLNet_UDP_Recv           SDLNet_UDP_Recv;
 pfSDLNet_UDP_Close          SDLNet_UDP_Close;
-
-typedef SDLNet_SocketSet function(int) pfSDLNet_AllocSocketSet;
-typedef int function(SDLNet_SocketSet,SDLNet_GenericSocket) pfSDLNet_AddSocket;
-typedef int function(SDLNet_SocketSet,SDLNet_GenericSocket) pfSDLNet_DelSocket;
-typedef int function(SDLNet_SocketSet,Uint32) pfSDLNet_CheckSockets;
-typedef void function(SDLNet_SocketSet) pfSDLNet_FreeSocketSet;
+
 pfSDLNet_AllocSocketSet     SDLNet_AllocSocketSet;
 pfSDLNet_AddSocket          SDLNet_AddSocket;
 pfSDLNet_DelSocket          SDLNet_DelSocket;
@@ -224,7 +232,6 @@
 pfSDLNet_FreeSocketSet      SDLNet_FreeSocketSet;
 
 
-} // extern(C)
 
 //==============================================================================
 // LOADER
Index: DerelictAL/derelict/openal/alcfuncs.d
===================================================================
--- DerelictAL/derelict/openal/alcfuncs.d	(revision 318)
+++ DerelictAL/derelict/openal/alcfuncs.d	(working copy)
@@ -67,16 +67,34 @@
 
 }
 
-extern(C):
+extern(C) {
+alias ALCcontext* function(ALCdevice*, in ALCint*) pfalcCreateContext;
+alias ALCboolean function(ALCcontext*) pfalcMakeContextCurrent;
+alias void function(ALCcontext*) pfalcProcessContext;
+alias void function(ALCcontext*) pfalcSuspendContext;
+alias void function(ALCcontext*) pfalcDestroyContext;
+alias ALCcontext* function() pfalcGetCurrentContext;
+alias ALCdevice* function(ALCcontext*) pfalcGetContextsDevice;
 
+alias ALCdevice* function(in ALCchar*) pfalcOpenDevice;
+alias ALCboolean function(ALCdevice*) pfalcCloseDevice;
 
-typedef ALCcontext* function(ALCdevice*, in ALCint*) pfalcCreateContext;
-typedef ALCboolean function(ALCcontext*) pfalcMakeContextCurrent;
-typedef void function(ALCcontext*) pfalcProcessContext;
-typedef void function(ALCcontext*) pfalcSuspendContext;
-typedef void function(ALCcontext*) pfalcDestroyContext;
-typedef ALCcontext* function() pfalcGetCurrentContext;
-typedef ALCdevice* function(ALCcontext*) pfalcGetContextsDevice;
+alias ALCenum function(ALCdevice*) pfalcGetError;
+
+alias ALCboolean function(ALCdevice*, in char*) pfalcIsExtensionPresent;
+alias void* function(ALCdevice*, in char*) pfalcGetProcAddress;
+alias ALCenum function(ALCdevice*, in char*) pfalcGetEnumValue;
+
+alias char* function(ALCdevice*, ALCenum) pfalcGetString;
+alias void function(ALCdevice*, ALCenum, ALCsizei, ALCint*) pfalcGetIntegerv;
+
+alias ALCdevice* function(in char*, ALCuint, ALCenum, ALCsizei) pfalcCaptureOpenDevice;
+alias ALCboolean function(ALCdevice*) pfalcCaptureCloseDevice;
+alias void function(ALCdevice*) pfalcCaptureStart;
+alias void function(ALCdevice*) pfalcCaptureStop;
+alias void function(ALCdevice*, ALCvoid*, ALCsizei) pfalcCaptureSamples;
+}
+
 pfalcCreateContext                      alcCreateContext;
 pfalcMakeContextCurrent                 alcMakeContextCurrent;
 pfalcProcessContext                     alcProcessContext;
@@ -84,34 +102,21 @@
 pfalcDestroyContext                     alcDestroyContext;
 pfalcGetCurrentContext                  alcGetCurrentContext;
 pfalcGetContextsDevice                  alcGetContextsDevice;
-
-typedef ALCdevice* function(in ALCchar*) pfalcOpenDevice;
-typedef ALCboolean function(ALCdevice*) pfalcCloseDevice;
+
 pfalcOpenDevice                         alcOpenDevice;
 pfalcCloseDevice                        alcCloseDevice;
-
-typedef ALCenum function(ALCdevice*) pfalcGetError;
+
 pfalcGetError                           alcGetError;
-
-typedef ALCboolean function(ALCdevice*, in char*) pfalcIsExtensionPresent;
-typedef void* function(ALCdevice*, in char*) pfalcGetProcAddress;
-typedef ALCenum function(ALCdevice*, in char*) pfalcGetEnumValue;
+
 pfalcIsExtensionPresent                 alcIsExtensionPresent;
 pfalcGetProcAddress                     alcGetProcAddress;
 pfalcGetEnumValue                       alcGetEnumValue;
-
-typedef char* function(ALCdevice*, ALCenum) pfalcGetString;
-typedef void function(ALCdevice*, ALCenum, ALCsizei, ALCint*) pfalcGetIntegerv;
+
 pfalcGetString                          alcGetString;
 pfalcGetIntegerv                        alcGetIntegerv;
-
-typedef ALCdevice* function(in char*, ALCuint, ALCenum, ALCsizei) pfalcCaptureOpenDevice;
-typedef ALCboolean function(ALCdevice*) pfalcCaptureCloseDevice;
-typedef void function(ALCdevice*) pfalcCaptureStart;
-typedef void function(ALCdevice*) pfalcCaptureStop;
-typedef void function(ALCdevice*, ALCvoid*, ALCsizei) pfalcCaptureSamples;
+
 pfalcCaptureOpenDevice                  alcCaptureOpenDevice;
 pfalcCaptureCloseDevice                 alcCaptureCloseDevice;
 pfalcCaptureStart                       alcCaptureStart;
 pfalcCaptureStop                        alcCaptureStop;
-pfalcCaptureSamples                     alcCaptureSamples;
\ No newline at end of file
+pfalcCaptureSamples                     alcCaptureSamples;
Index: DerelictAL/derelict/openal/alfuncs.d
===================================================================
--- DerelictAL/derelict/openal/alfuncs.d	(revision 318)
+++ DerelictAL/derelict/openal/alfuncs.d	(working copy)
@@ -126,7 +126,7 @@
     bindFunc(alDopplerVelocity)("alDopplerVelocity", lib);
     bindFunc(alSpeedOfSound)("alSpeedOfSound", lib);
     bindFunc(alDistanceModel)("alDistanceModel", lib);
-    
+
     loadALC(lib);
 }
 
@@ -142,25 +142,100 @@
 }
 
 
-extern(C):
+extern(C) {
 
-typedef void function(ALenum) pfalEnable;
-typedef void function(ALenum) pfalDisable;
-typedef ALboolean function(ALenum) pfalIsEnabled;
+alias void function(ALenum) pfalEnable;
+alias void function(ALenum) pfalDisable;
+alias ALboolean function(ALenum) pfalIsEnabled;
+
+alias char* function(ALenum) pfalGetString;
+alias void function(ALenum, ALboolean*) pfalGetBooleanv;
+alias void function(ALenum, ALint*) pfalGetIntegerv;
+alias void function(ALenum, ALfloat*) pfalGetFloatv;
+alias void function(ALenum, ALdouble*) pfalGetDoublev;
+alias ALboolean function(ALenum) pfalGetBoolean;
+alias ALint function(ALenum) pfalGetInteger;
+alias ALfloat function(ALenum) pfalGetFloat;
+alias ALdouble function(ALenum) pfalGetDouble;
+alias ALenum function() pfalGetError;
+
+alias ALboolean function(in char*) pfalIsExtensionPresent;
+alias ALboolean function(in char*) pfalGetProcAddress;
+alias ALenum function(in char*) pfalGetEnumValue;
+
+alias void function(ALenum, ALfloat) pfalListenerf;
+alias void function(ALenum, ALfloat, ALfloat, ALfloat) pfalListener3f;
+alias void function(ALenum, in ALfloat*) pfalListenerfv;
+alias void function(ALenum, ALint) pfalListeneri;
+alias void function(ALenum, ALint, ALint, ALint) pfalListener3i;
+alias void function(ALenum, in ALint*) pfalListeneriv;
+
+alias void function(ALenum, ALfloat*) pfalGetListenerf;
+alias void function(ALenum, ALfloat*, ALfloat*, ALfloat*) pfalGetListener3f;
+alias void function(ALenum, ALfloat*) pfalGetListenerfv;
+alias void function(ALenum, ALint*) pfalGetListeneri;
+alias void function(ALenum, ALint*, ALint*, ALint*) pfalGetListener3i;
+alias void function(ALenum, ALint*) pfalGetListeneriv;
+
+alias void function(ALsizei, ALuint*) pfalGenSources;
+alias void function(ALsizei, in ALuint*) pfalDeleteSources;
+alias ALboolean function(ALuint) pfalIsSource;
+alias void function(ALuint, ALenum, ALfloat) pfalSourcef;
+alias void function(ALuint, ALenum, ALfloat, ALfloat, ALfloat) pfalSource3f;
+alias void function(ALuint, ALenum, in ALfloat*) pfalSourcefv;
+alias void function(ALuint, ALenum, ALint) pfalSourcei;
+alias void function(ALuint, ALenum, ALint, ALint, ALint) pfalSource3i;
+alias void function(ALuint, ALenum, in ALint*) pfalSourceiv;
+
+alias void function(ALuint, ALenum, ALfloat*) pfalGetSourcef;
+alias void function(ALuint, ALenum, ALfloat*, ALfloat*, ALfloat*) pfalGetSource3f;
+alias void function(ALuint, ALenum, ALfloat*) pfalGetSourcefv;
+alias void function(ALuint, ALenum, ALint*) pfalGetSourcei;
+alias void function(ALuint, ALenum, ALint*, ALint*, ALint*) pfalGetSource3i;
+alias void function(ALuint, ALenum, ALint*) pfalGetSourceiv;
+
+alias void function(ALsizei, in ALuint*) pfalSourcePlayv;
+alias void function(ALsizei, in ALuint*) pfalSourceStopv;
+alias void function(ALsizei, in ALuint*) pfalSourceRewindv;
+alias void function(ALsizei, in ALuint*) pfalSourcePausev;
+alias void function(ALuint) pfalSourcePlay;
+alias void function(ALuint) pfalSourcePause;
+alias void function(ALuint) pfalSourceRewind;
+alias void function(ALuint) pfalSourceStop;
+
+alias void function(ALuint, ALsizei, ALuint*) pfalSourceQueueBuffers;
+alias void function(ALuint, ALsizei, ALuint*) pfalSourceUnqueueBuffers;
+
+alias void function(ALsizei, ALuint*) pfalGenBuffers;
+alias void function(ALsizei, in ALuint*) pfalDeleteBuffers;
+alias ALboolean function(ALuint) pfalIsBuffer;
+alias void function(ALuint, ALenum, in ALvoid*, ALsizei, ALsizei) pfalBufferData;
+
+alias void function(ALuint, ALenum, ALfloat) pfalBufferf;
+alias void function(ALuint, ALenum, ALfloat, ALfloat, ALfloat) pfalBuffer3f;
+alias void function(ALuint, ALenum, in ALfloat*) pfalBufferfv;
+alias void function(ALuint, ALenum, ALint) pfalBufferi;
+alias void function(ALuint, ALenum, ALint, ALint, ALint) pfalBuffer3i;
+alias void function(ALuint, ALenum, in ALint*) pfalBufferiv;
+
+alias void function(ALuint, ALenum, ALfloat*) pfalGetBufferf;
+alias void function(ALuint, ALenum, ALfloat*, ALfloat*, ALfloat*) pfalGetBuffer3f;
+alias void function(ALuint, ALenum, ALfloat*) pfalGetBufferfv;
+alias void function(ALuint, ALenum, ALint*) pfalGetBufferi;
+alias void function(ALuint, ALenum, ALint*, ALint*, ALint*) pfalGetBuffer3i;
+alias void function(ALuint, ALenum, ALint*) pfalGetBufferiv;
+
+alias void function(ALfloat) pfalDopplerFactor;
+alias void function(ALfloat) pfalDopplerVelocity;
+alias void function(ALfloat) pfalSpeedOfSound;
+alias void function(ALenum) pfalDistanceModel;
+}
+
+
 pfalEnable                          alEnable;
 pfalDisable                         alDisable;
 pfalIsEnabled                       alIsEnabled;
-
-typedef char* function(ALenum) pfalGetString;
-typedef void function(ALenum, ALboolean*) pfalGetBooleanv;
-typedef void function(ALenum, ALint*) pfalGetIntegerv;
-typedef void function(ALenum, ALfloat*) pfalGetFloatv;
-typedef void function(ALenum, ALdouble*) pfalGetDoublev;
-typedef ALboolean function(ALenum) pfalGetBoolean;
-typedef ALint function(ALenum) pfalGetInteger;
-typedef ALfloat function(ALenum) pfalGetFloat;
-typedef ALdouble function(ALenum) pfalGetDouble;
-typedef ALenum function() pfalGetError;
+
 pfalGetString                       alGetString;
 pfalGetBooleanv                     alGetBooleanv;
 pfalGetIntegerv                     alGetIntegerv;
@@ -171,19 +246,10 @@
 pfalGetDouble                       alGetDouble;
 pfalGetError                        alGetError;
 
-typedef ALboolean function(in char*) pfalIsExtensionPresent;
-typedef ALboolean function(in char*) pfalGetProcAddress;
-typedef ALenum function(in char*) pfalGetEnumValue;
 pfalIsExtensionPresent                  alIsExtensionPresent;
 pfalGetProcAddress                      alGetProcAddress;
 pfalGetEnumValue                        alGetEnumValue;
-
-typedef void function(ALenum, ALfloat) pfalListenerf;
-typedef void function(ALenum, ALfloat, ALfloat, ALfloat) pfalListener3f;
-typedef void function(ALenum, in ALfloat*) pfalListenerfv;
-typedef void function(ALenum, ALint) pfalListeneri;
-typedef void function(ALenum, ALint, ALint, ALint) pfalListener3i;
-typedef void function(ALenum, in ALint*) pfalListeneriv;
+
 pfalListenerf                           alListenerf;
 pfalListener3f                          alListener3f;
 pfalListenerfv                          alListenerfv;
@@ -191,13 +257,6 @@
 pfalListener3i                          alListener3i;
 pfalListeneriv                         alListeneriv;
 
-typedef void function(ALenum, ALfloat*) pfalGetListenerf;
-typedef void function(ALenum, ALfloat*, ALfloat*, ALfloat*) pfalGetListener3f;
-typedef void function(ALenum, ALfloat*) pfalGetListenerfv;
-typedef void function(ALenum, ALint*) pfalGetListeneri;
-typedef void function(ALenum, ALint*, ALint*, ALint*) pfalGetListener3i;
-typedef void function(ALenum, ALint*) pfalGetListeneriv;
-
 pfalGetListenerf                        alGetListenerf;
 pfalGetListener3f                       alGetListener3f;
 pfalGetListenerfv                       alGetListenerfv;
@@ -205,33 +264,17 @@
 pfalGetListener3i                       alGetListener3i;
 pfalGetListeneriv                       alGetListeneriv;
 
-typedef void function(ALsizei, ALuint*) pfalGenSources;
-typedef void function(ALsizei, in ALuint*) pfalDeleteSources;
-typedef ALboolean function(ALuint) pfalIsSource;
 pfalGenSources                          alGenSources;
 pfalDeleteSources                       alDeleteSources;
 pfalIsSource                            alIsSource;
-
-typedef void function(ALuint, ALenum, ALfloat) pfalSourcef;
-typedef void function(ALuint, ALenum, ALfloat, ALfloat, ALfloat) pfalSource3f;
-typedef void function(ALuint, ALenum, in ALfloat*) pfalSourcefv;
-typedef void function(ALuint, ALenum, ALint) pfalSourcei;
-typedef void function(ALuint, ALenum, ALint, ALint, ALint) pfalSource3i;
-typedef void function(ALuint, ALenum, in ALint*) pfalSourceiv;
+
 pfalSourcef                             alSourcef;
 pfalSource3f                            alSource3f;
 pfalSourcefv                            alSourcefv;
 pfalSourcei                             alSourcei;
 pfalSource3i                            alSource3i;
 pfalSourceiv                            alSourceiv;
-
-
-typedef void function(ALuint, ALenum, ALfloat*) pfalGetSourcef;
-typedef void function(ALuint, ALenum, ALfloat*, ALfloat*, ALfloat*) pfalGetSource3f;
-typedef void function(ALuint, ALenum, ALfloat*) pfalGetSourcefv;
-typedef void function(ALuint, ALenum, ALint*) pfalGetSourcei;
-typedef void function(ALuint, ALenum, ALint*, ALint*, ALint*) pfalGetSource3i;
-typedef void function(ALuint, ALenum, ALint*) pfalGetSourceiv;
+
 pfalGetSourcef                          alGetSourcef;
 pfalGetSource3f                         alGetSource3f;
 pfalGetSourcefv                         alGetSourcefv;
@@ -239,14 +282,7 @@
 pfalGetSource3i                         alGetSource3i;
 pfalGetSourceiv                         alGetSourceiv;
 
-typedef void function(ALsizei, in ALuint*) pfalSourcePlayv;
-typedef void function(ALsizei, in ALuint*) pfalSourceStopv;
-typedef void function(ALsizei, in ALuint*) pfalSourceRewindv;
-typedef void function(ALsizei, in ALuint*) pfalSourcePausev;
-typedef void function(ALuint) pfalSourcePlay;
-typedef void function(ALuint) pfalSourcePause;
-typedef void function(ALuint) pfalSourceRewind;
-typedef void function(ALuint) pfalSourceStop;
+
 pfalSourcePlayv                         alSourcePlayv;
 pfalSourceStopv                         alSourceStopv;
 pfalSourceRewindv                       alSourceRewindv;
@@ -255,52 +291,30 @@
 pfalSourcePause                         alSourcePause;
 pfalSourceRewind                        alSourceRewind;
 pfalSourceStop                          alSourceStop;
-
-typedef void function(ALuint, ALsizei, ALuint*) pfalSourceQueueBuffers;
-typedef void function(ALuint, ALsizei, ALuint*) pfalSourceUnqueueBuffers;
+
 pfalSourceQueueBuffers                  alSourceQueueBuffers;
 pfalSourceUnqueueBuffers                alSourceUnqueueBuffers;
-
-typedef void function(ALsizei, ALuint*) pfalGenBuffers;
-typedef void function(ALsizei, in ALuint*) pfalDeleteBuffers;
-typedef ALboolean function(ALuint) pfalIsBuffer;
-typedef void function(ALuint, ALenum, in ALvoid*, ALsizei, ALsizei) pfalBufferData;
+
 pfalGenBuffers                          alGenBuffers;
 pfalDeleteBuffers                       alDeleteBuffers;
 pfalIsBuffer                            alIsBuffer;
 pfalBufferData                          alBufferData;
-
-typedef void function(ALuint, ALenum, ALfloat) pfalBufferf;
-typedef void function(ALuint, ALenum, ALfloat, ALfloat, ALfloat) pfalBuffer3f;
-typedef void function(ALuint, ALenum, in ALfloat*) pfalBufferfv;
-typedef void function(ALuint, ALenum, ALint) pfalBufferi;
-typedef void function(ALuint, ALenum, ALint, ALint, ALint) pfalBuffer3i;
-typedef void function(ALuint, ALenum, in ALint*) pfalBufferiv;
+
 pfalBufferf                             alBufferf;
 pfalBuffer3f                            alBuffer3f;
 pfalBufferfv                            alBufferfv;
 pfalBufferi                             alBufferi;
 pfalBuffer3i                            alBuffer3i;
 pfalBufferiv                            alBufferiv;
-
-typedef void function(ALuint, ALenum, ALfloat*) pfalGetBufferf;
-typedef void function(ALuint, ALenum, ALfloat*, ALfloat*, ALfloat*) pfalGetBuffer3f;
-typedef void function(ALuint, ALenum, ALfloat*) pfalGetBufferfv;
-typedef void function(ALuint, ALenum, ALint*) pfalGetBufferi;
-typedef void function(ALuint, ALenum, ALint*, ALint*, ALint*) pfalGetBuffer3i;
-typedef void function(ALuint, ALenum, ALint*) pfalGetBufferiv;
+
 pfalGetBufferf                          alGetBufferf;
 pfalGetBuffer3f                         alGetBuffer3f;
 pfalGetBufferfv                         alGetBufferfv;
 pfalGetBufferi                          alGetBufferi;
 pfalGetBuffer3i                         alGetBuffer3i;
 pfalGetBufferiv                         alGetBufferiv;
-
-typedef void function(ALfloat) pfalDopplerFactor;
-typedef void function(ALfloat) pfalDopplerVelocity;
-typedef void function(ALfloat) pfalSpeedOfSound;
-typedef void function(ALenum) pfalDistanceModel;
+
 pfalDopplerFactor                       alDopplerFactor;
 pfalDopplerVelocity                     alDopplerVelocity;
 pfalSpeedOfSound                        alSpeedOfSound;
-pfalDistanceModel                       alDistanceModel;
\ No newline at end of file
+pfalDistanceModel                       alDistanceModel;
Index: DerelictSDLttf/derelict/sdl/ttf.d
===================================================================
--- DerelictSDLttf/derelict/sdl/ttf.d	(revision 318)
+++ DerelictSDLttf/derelict/sdl/ttf.d	(working copy)
@@ -64,7 +64,7 @@
 alias SDL_GetError TTF_GetError;
 
 struct _TTF_Font {}
-typedef _TTF_Font TTF_Font;
+alias _TTF_Font TTF_Font;
 
 //==============================================================================
 // Macros
@@ -85,38 +85,40 @@
 extern (C)
 {
 
-typedef const SDL_version* function() pfTTF_Linked_Version;
-typedef void function(int swapped) pfTTF_ByteSwappedUNICODE;
-typedef int function() pfTTF_Init;
-typedef TTF_Font * function (char *file, int ptsize) pfTTF_OpenFont;
-typedef TTF_Font * function (char *file, int ptsize, long index) pfTTF_OpenFontIndex;
-typedef TTF_Font * function (SDL_RWops *src, int freesrc, int ptsize) pfTTF_OpenFontRW;
-typedef TTF_Font * function (SDL_RWops *src, int freesrc, int ptsize, long index) pfTTF_OpenFontIndexRW;
-typedef int function (TTF_Font *font) pfTTF_GetFontStyle;
-typedef void function (TTF_Font *font, int style) pfTTF_SetFontStyle;
-typedef int function (TTF_Font *font) pfFontPropertyInt;
-typedef long function (TTF_Font *font) pfFontPropertyLong;
-typedef char* function (TTF_Font *font) pfFontPropertyString;
-typedef int function (TTF_Font *font, Uint16 ch,
+alias SDL_version* function() pfTTF_Linked_Version;
+alias void function(int swapped) pfTTF_ByteSwappedUNICODE;
+alias int function() pfTTF_Init;
+alias TTF_Font * function (char *file, int ptsize) pfTTF_OpenFont;
+alias TTF_Font * function (char *file, int ptsize, long index) pfTTF_OpenFontIndex;
+alias TTF_Font * function (SDL_RWops *src, int freesrc, int ptsize) pfTTF_OpenFontRW;
+alias TTF_Font * function (SDL_RWops *src, int freesrc, int ptsize, long index) pfTTF_OpenFontIndexRW;
+alias int function (TTF_Font *font) pfTTF_GetFontStyle;
+alias void function (TTF_Font *font, int style) pfTTF_SetFontStyle;
+alias int function (TTF_Font *font) pfFontPropertyInt;
+alias long function (TTF_Font *font) pfFontPropertyLong;
+alias char* function (TTF_Font *font) pfFontPropertyString;
+alias int function (TTF_Font *font, Uint16 ch,
     int *minx, int *maxx, int *miny, int *maxy, int *advance) pfTTF_GlyphMetrics;
-typedef int function (TTF_Font *font, char *text, int *w, int *h) pfTTF_SizeText;
-typedef int function (TTF_Font *font, char *text, int *w, int *h) pfTTF_SizeUTF8;
-typedef int function (TTF_Font *font, Uint16 *text, int *w, int *h) pfTTF_SizeUNICODE;
-typedef SDL_Surface * function (TTF_Font *font, char *text, SDL_Color fg) pfTTF_RenderText_Solid;
-typedef SDL_Surface * function (TTF_Font *font, char *text, SDL_Color fg) pfTTF_RenderUTF8_Solid;
-typedef SDL_Surface * function (TTF_Font *font, Uint16 *text, SDL_Color fg) pfTTF_RenderUNICODE_Solid;
-typedef SDL_Surface * function (TTF_Font *font, Uint16 ch, SDL_Color fg) pfTTF_RenderGlyph_Solid;
-typedef SDL_Surface * function (TTF_Font *font, char *text, SDL_Color fg, SDL_Color bg) pfTTF_RenderText_Shaded;
-typedef SDL_Surface * function (TTF_Font *font, char *text, SDL_Color fg, SDL_Color bg) pfTTF_RenderUTF8_Shaded;
-typedef SDL_Surface * function (TTF_Font *font, Uint16 *text, SDL_Color fg, SDL_Color bg) pfTTF_RenderUNICODE_Shaded;
-typedef SDL_Surface * function (TTF_Font *font, Uint16 ch, SDL_Color fg, SDL_Color bg) pfTTF_RenderGlyph_Shaded;
-typedef SDL_Surface * function (TTF_Font *font, char *text, SDL_Color fg) pfTTF_RenderText_Blended;
-typedef SDL_Surface * function (TTF_Font *font, char *text, SDL_Color fg) pfTTF_RenderUTF8_Blended;
-typedef SDL_Surface * function (TTF_Font *font, Uint16 *text, SDL_Color fg) pfTTF_RenderUNICODE_Blended;
-typedef SDL_Surface * function (TTF_Font *font, Uint16 ch, SDL_Color fg) pfTTF_RenderGlyph_Blended;
-typedef void function (TTF_Font *font) pfTTF_CloseFont;
-typedef void function () pfTTF_Quit;
-typedef int function () pfTTF_WasInit;
+alias int function (TTF_Font *font, char *text, int *w, int *h) pfTTF_SizeText;
+alias int function (TTF_Font *font, char *text, int *w, int *h) pfTTF_SizeUTF8;
+alias int function (TTF_Font *font, Uint16 *text, int *w, int *h) pfTTF_SizeUNICODE;
+alias SDL_Surface * function (TTF_Font *font, char *text, SDL_Color fg) pfTTF_RenderText_Solid;
+alias SDL_Surface * function (TTF_Font *font, char *text, SDL_Color fg) pfTTF_RenderUTF8_Solid;
+alias SDL_Surface * function (TTF_Font *font, Uint16 *text, SDL_Color fg) pfTTF_RenderUNICODE_Solid;
+alias SDL_Surface * function (TTF_Font *font, Uint16 ch, SDL_Color fg) pfTTF_RenderGlyph_Solid;
+alias SDL_Surface * function (TTF_Font *font, char *text, SDL_Color fg, SDL_Color bg) pfTTF_RenderText_Shaded;
+alias SDL_Surface * function (TTF_Font *font, char *text, SDL_Color fg, SDL_Color bg) pfTTF_RenderUTF8_Shaded;
+alias SDL_Surface * function (TTF_Font *font, Uint16 *text, SDL_Color fg, SDL_Color bg) pfTTF_RenderUNICODE_Shaded;
+alias SDL_Surface * function (TTF_Font *font, Uint16 ch, SDL_Color fg, SDL_Color bg) pfTTF_RenderGlyph_Shaded;
+alias SDL_Surface * function (TTF_Font *font, char *text, SDL_Color fg) pfTTF_RenderText_Blended;
+alias SDL_Surface * function (TTF_Font *font, char *text, SDL_Color fg) pfTTF_RenderUTF8_Blended;
+alias SDL_Surface * function (TTF_Font *font, Uint16 *text, SDL_Color fg) pfTTF_RenderUNICODE_Blended;
+alias SDL_Surface * function (TTF_Font *font, Uint16 ch, SDL_Color fg) pfTTF_RenderGlyph_Blended;
+alias void function (TTF_Font *font) pfTTF_CloseFont;
+alias void function () pfTTF_Quit;
+alias int function () pfTTF_WasInit;
+}
+
 pfTTF_Linked_Version                    TTF_Linked_Version;
 pfTTF_ByteSwappedUNICODE                TTF_ByteSwappedUNICODE;
 pfTTF_Init                              TTF_Init;
@@ -154,8 +156,6 @@
 pfTTF_Quit                              TTF_Quit;
 pfTTF_WasInit                           TTF_WasInit;
 
-} // extern(C)
-
 alias TTF_RenderText_Shaded TTF_RenderText;
 alias TTF_RenderUTF8_Shaded TTF_RenderUTF8;
 alias TTF_RenderUNICODE_Shaded TTF_RenderUNICODE;
Index: DerelictGL/derelict/opengl/glfuncs.d
===================================================================
--- DerelictGL/derelict/opengl/glfuncs.d	(revision 318)
+++ DerelictGL/derelict/opengl/glfuncs.d	(working copy)
@@ -379,360 +379,360 @@
     bindFunc(glInterleavedArrays)("glInterleavedArrays", lib);
 }
 
-extern(System):
+extern(System) {
+alias void function(GLfloat c) pfglClearIndex;
+alias void function(GLclampf,GLclampf,GLclampf,GLclampf) pfglClearColor;
+alias void function(GLbitfield) pfglClear;
+alias void function(GLuint) pfglIndexMask;
+alias void function(GLboolean,GLboolean,GLboolean,GLboolean) pfglColorMask;
+alias void function(GLenum,GLclampf) pfglAlphaFunc;
+alias void function(GLenum,GLenum) pfglBlendFunc;
+alias void function(GLenum) pfglLogicOp;
+alias void function(GLenum) pfglCullFace;
+alias void function(GLenum) pfglFrontFace;
+alias void function(GLfloat) pfglPointSize;
+alias void function(GLfloat) pfglLineWidth;
+alias void function(GLint,GLushort) pfglLineStipple;
+alias void function(GLenum,GLenum) pfglPolygonMode;
+alias void function(GLfloat,GLfloat) pfglPolygonOffset;
+alias void function(GLubyte*) pfglPolygonStipple;
+alias void function(GLubyte*) pfglGetPolygonStipple;
+alias void function(GLboolean) pfglEdgeFlag;
+alias void function(GLboolean*)pfglEdgeFlagv;
+alias void function(GLint,GLint,GLsizei,GLsizei) pfglScissor;
+alias void function(GLenum,GLdouble*) pfglClipPlane;
+alias void function(GLenum,GLdouble*) pfglGetClipPlane;
+alias void function(GLenum) pfglDrawBuffer;
+alias void function(GLenum) pfglReadBuffer;
+alias void function(GLenum) pfglEnable;
+alias void function(GLenum) pfglDisable;
+alias GLboolean function(GLenum) pfglIsEnabled;
+alias void function(GLenum) pfglEnableClientState;
+alias void function(GLenum) pfglDisableClientState;
+alias void function(GLenum,GLboolean*) pfglGetBooleanv;
+alias void function(GLenum,GLdouble*) pfglGetDoublev;
+alias void function(GLenum,GLfloat*) pfglGetFloatv;
+alias void function(GLenum,GLint*) pfglGetIntegerv;
+alias void function(GLbitfield) pfglPushAttrib;
+alias void function() pfglPopAttrib;
+alias void function(GLbitfield) pfglPushClientAttrib;
+alias void function() pfglPopClientAttrib;
+alias GLint function(GLenum) pfglRenderMode;
+alias GLenum function() pfglGetError;
+alias GLchar* function(GLenum) pfglGetString;
+alias void function() pfglFinish;
+alias void function() pfglFlush;
+alias void function(GLenum,GLenum) pfglHint;
 
-typedef void function(GLfloat c) pfglClearIndex;
-typedef void function(GLclampf,GLclampf,GLclampf,GLclampf) pfglClearColor;
-typedef void function(GLbitfield) pfglClear;
-typedef void function(GLuint) pfglIndexMask;
-typedef void function(GLboolean,GLboolean,GLboolean,GLboolean) pfglColorMask;
-typedef void function(GLenum,GLclampf) pfglAlphaFunc;
-typedef void function(GLenum,GLenum) pfglBlendFunc;
-typedef void function(GLenum) pfglLogicOp;
-typedef void function(GLenum) pfglCullFace;
-typedef void function(GLenum) pfglFrontFace;
-typedef void function(GLfloat) pfglPointSize;
-typedef void function(GLfloat) pfglLineWidth;
-typedef void function(GLint,GLushort) pfglLineStipple;
-typedef void function(GLenum,GLenum) pfglPolygonMode;
-typedef void function(GLfloat,GLfloat) pfglPolygonOffset;
-typedef void function(GLubyte*) pfglPolygonStipple;
-typedef void function(GLubyte*) pfglGetPolygonStipple;
-typedef void function(GLboolean) pfglEdgeFlag;
-typedef void function(GLboolean*)pfglEdgeFlagv;
-typedef void function(GLint,GLint,GLsizei,GLsizei) pfglScissor;
-typedef void function(GLenum,GLdouble*) pfglClipPlane;
-typedef void function(GLenum,GLdouble*) pfglGetClipPlane;
-typedef void function(GLenum) pfglDrawBuffer;
-typedef void function(GLenum) pfglReadBuffer;
-typedef void function(GLenum) pfglEnable;
-typedef void function(GLenum) pfglDisable;
-typedef GLboolean function(GLenum) pfglIsEnabled;
-typedef void function(GLenum) pfglEnableClientState;
-typedef void function(GLenum) pfglDisableClientState;
-typedef void function(GLenum,GLboolean*) pfglGetBooleanv;
-typedef void function(GLenum,GLdouble*) pfglGetDoublev;
-typedef void function(GLenum,GLfloat*) pfglGetFloatv;
-typedef void function(GLenum,GLint*) pfglGetIntegerv;
-typedef void function(GLbitfield) pfglPushAttrib;
-typedef void function() pfglPopAttrib;
-typedef void function(GLbitfield) pfglPushClientAttrib;
-typedef void function() pfglPopClientAttrib;
-typedef GLint function(GLenum) pfglRenderMode;
-typedef GLenum function() pfglGetError;
-typedef GLchar* function(GLenum) pfglGetString;
-typedef void function() pfglFinish;
-typedef void function() pfglFlush;
-typedef void function(GLenum,GLenum) pfglHint;
+alias void function(GLclampd) pfglClearDepth;
+alias void function(GLenum) pfglDepthFunc;
+alias void function(GLboolean) pfglDepthMask;
+alias void function(GLclampd,GLclampd) pfglDepthRange;
 
-typedef void function(GLclampd) pfglClearDepth;
-typedef void function(GLenum) pfglDepthFunc;
-typedef void function(GLboolean) pfglDepthMask;
-typedef void function(GLclampd,GLclampd) pfglDepthRange;
+alias void function(GLfloat,GLfloat,GLfloat,GLfloat) pfglClearAccum;
+alias void function(GLenum,GLfloat) pfglAccum;
 
-typedef void function(GLfloat,GLfloat,GLfloat,GLfloat) pfglClearAccum;
-typedef void function(GLenum,GLfloat) pfglAccum;
+alias void function(GLenum) pfglMatrixMode;
+alias void function(GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble) pfglOrtho;
+alias void function(GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble) pfglFrustum;
+alias void function(GLint,GLint,GLsizei,GLsizei) pfglViewport;
+alias void function() pfglPushMatrix;
+alias void function() pfglPopMatrix;
+alias void function() pfglLoadIdentity;
+alias void function(GLdouble*) pfglLoadMatrixd;
+alias void function(GLfloat*) pfglLoadMatrixf;
+alias void function(GLdouble*) pfglMultMatrixd;
+alias void function(GLfloat*) pfglMultMatrixf;
+alias void function(GLdouble,GLdouble,GLdouble,GLdouble) pfglRotated;
+alias void function(GLfloat,GLfloat,GLfloat,GLfloat) pfglRotatef;
+alias void function(GLdouble,GLdouble,GLdouble) pfglScaled;
+alias void function(GLfloat,GLfloat,GLfloat) pfglScalef;
+alias void function(GLdouble,GLdouble,GLdouble) pfglTranslated;
+alias void function(GLfloat,GLfloat,GLfloat) pfglTranslatef;
 
-typedef void function(GLenum) pfglMatrixMode;
-typedef void function(GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble) pfglOrtho;
-typedef void function(GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble) pfglFrustum;
-typedef void function(GLint,GLint,GLsizei,GLsizei) pfglViewport;
-typedef void function() pfglPushMatrix;
-typedef void function() pfglPopMatrix;
-typedef void function() pfglLoadIdentity;
-typedef void function(GLdouble*) pfglLoadMatrixd;
-typedef void function(GLfloat*) pfglLoadMatrixf;
-typedef void function(GLdouble*) pfglMultMatrixd;
-typedef void function(GLfloat*) pfglMultMatrixf;
-typedef void function(GLdouble,GLdouble,GLdouble,GLdouble) pfglRotated;
-typedef void function(GLfloat,GLfloat,GLfloat,GLfloat) pfglRotatef;
-typedef void function(GLdouble,GLdouble,GLdouble) pfglScaled;
-typedef void function(GLfloat,GLfloat,GLfloat) pfglScalef;
-typedef void function(GLdouble,GLdouble,GLdouble) pfglTranslated;
-typedef void function(GLfloat,GLfloat,GLfloat) pfglTranslatef;
+alias GLboolean function(GLuint) pfglIsList;
+alias void function(GLuint,GLsizei) pfglDeleteLists;
+alias GLuint function(GLsizei) pfglGenLists;
+alias void function(GLuint,GLenum) pfglNewList;
+alias void function() pfglEndList;
+alias void function(GLuint) pfglCallList;
+alias void function(GLsizei,GLenum,GLvoid*) pfglCallLists;
+alias void function(GLuint) pfglListBase;
 
-typedef GLboolean function(GLuint) pfglIsList;
-typedef void function(GLuint,GLsizei) pfglDeleteLists;
-typedef GLuint function(GLsizei) pfglGenLists;
-typedef void function(GLuint,GLenum) pfglNewList;
-typedef void function() pfglEndList;
-typedef void function(GLuint) pfglCallList;
-typedef void function(GLsizei,GLenum,GLvoid*) pfglCallLists;
-typedef void function(GLuint) pfglListBase;
+alias void function(GLenum) pfglBegin;
+alias void function() pfglEnd;
+alias void function(GLdouble,GLdouble) pfglVertex2d;
+alias void function(GLfloat,GLfloat) pfglVertex2f;
+alias void function(GLint,GLint) pfglVertex2i;
+alias void function(GLshort,GLshort) pfglVertex2s;
+alias void function(GLdouble,GLdouble,GLdouble) pfglVertex3d;
+alias void function(GLfloat,GLfloat,GLfloat) pfglVertex3f;
+alias void function(GLint,GLint,GLint) pfglVertex3i;
+alias void function(GLshort,GLshort,GLshort) pfglVertex3s;
+alias void function(GLdouble,GLdouble,GLdouble,GLdouble) pfglVertex4d;
+alias void function(GLfloat,GLfloat,GLfloat,GLfloat) pfglVertex4f;
+alias void function(GLint,GLint,GLint,GLint) pfglVertex4i;
+alias void function(GLshort,GLshort,GLshort,GLshort) pfglVertex4s;
+alias void function(GLdouble*) pfglVertex2dv;
+alias void function(GLfloat*) pfglVertex2fv;
+alias void function(GLint*) pfglVertex2iv;
+alias void function(GLshort*) pfglVertex2sv;
+alias void function(GLdouble*) pfglVertex3dv;
+alias void function(GLfloat*) pfglVertex3fv;
+alias void function(GLint*) pfglVertex3iv;
+alias void function(GLshort*) pfglVertex3sv;
+alias void function(GLdouble*) pfglVertex4dv;
+alias void function(GLfloat*) pfglVertex4fv;
+alias void function(GLint*) pfglVertex4iv;
+alias void function(GLshort*) pfglVertex4sv;
+alias void function(GLbyte,GLbyte,GLbyte) pfglNormal3b;
+alias void function(GLdouble,GLdouble,GLdouble) pfglNormal3d;
+alias void function(GLfloat,GLfloat,GLfloat) pfglNormal3f;
+alias void function(GLint,GLint,GLint) pfglNormal3i;
+alias void function(GLshort,GLshort,GLshort) pfglNormal3s;
+alias void function(GLbyte*) pfglNormal3bv;
+alias void function(GLdouble*) pfglNormal3dv;
+alias void function(GLfloat*) pfglNormal3fv;
+alias void function(GLint*) pfglNormal3iv;
+alias void function(GLshort*) pfglNormal3sv;
+alias void function(GLdouble) pfglIndexd;
+alias void function(GLfloat) pfglIndexf;
+alias void function(GLint) pfglIndexi;
+alias void function(GLshort) pfglIndexs;
+alias void function(GLubyte) pfglIndexub;
+alias void function(GLdouble*) pfglIndexdv;
+alias void function(GLfloat*) pfglIndexfv;
+alias void function(GLint*) pfglIndexiv;
+alias void function(GLshort*) pfglIndexsv;
+alias void function(GLubyte*) pfglIndexubv;
+alias void function(GLbyte,GLbyte,GLbyte) pfglColor3b;
+alias void function(GLdouble,GLdouble,GLdouble) pfglColor3d;
+alias void function(GLfloat,GLfloat,GLfloat) pfglColor3f;
+alias void function(GLint,GLint,GLint) pfglColor3i;
+alias void function(GLshort,GLshort,GLshort) pfglColor3s;
+alias void function(GLubyte,GLubyte,GLubyte) pfglColor3ub;
+alias void function(GLuint,GLuint,GLuint) pfglColor3ui;
+alias void function(GLushort,GLushort,GLushort) pfglColor3us;
+alias void function(GLbyte,GLbyte,GLbyte,GLbyte) pfglColor4b;
+alias void function(GLdouble,GLdouble,GLdouble,GLdouble) pfglColor4d;
+alias void function(GLfloat,GLfloat,GLfloat,GLfloat) pfglColor4f;
+alias void function(GLint,GLint,GLint,GLint) pfglColor4i;
+alias void function(GLshort,GLshort,GLshort,GLshort) pfglColor4s;
+alias void function(GLubyte,GLubyte,GLubyte,GLubyte) pfglColor4ub;
+alias void function(GLuint,GLuint,GLuint,GLuint) pfglColor4ui;
+alias void function(GLushort,GLushort,GLushort,GLushort) pfglColor4us;
+alias void function(GLbyte*) pfglColor3bv;
+alias void function(GLdouble*) pfglColor3dv;
+alias void function(GLfloat*) pfglColor3fv;
+alias void function(GLint*) pfglColor3iv;
+alias void function(GLshort*) pfglColor3sv;
+alias void function(GLubyte*) pfglColor3ubv;
+alias void function(GLuint*) pfglColor3uiv;
+alias void function(GLushort*) pfglColor3usv;
+alias void function(GLbyte*) pfglColor4bv;
+alias void function(GLdouble*) pfglColor4dv;
+alias void function(GLfloat*) pfglColor4fv;
+alias void function(GLint*) pfglColor4iv;
+alias void function(GLshort*) pfglColor4sv;
+alias void function(GLubyte*) pfglColor4ubv;
+alias void function(GLuint*) pfglColor4uiv;
+alias void function(GLushort) pfglColor4usv;
+alias void function(GLdouble) pfglTexCoord1d;
+alias void function(GLfloat) pfglTexCoord1f;
+alias void function(GLint) pfglTexCoord1i;
+alias void function(GLshort) pfglTexCoord1s;
+alias void function(GLdouble,GLdouble) pfglTexCoord2d;
+alias void function(GLfloat,GLfloat) pfglTexCoord2f;
+alias void function(GLint,GLint) pfglTexCoord2i;
+alias void function(GLshort,GLshort) pfglTexCoord2s;
+alias void function(GLdouble,GLdouble,GLdouble) pfglTexCoord3d;
+alias void function(GLfloat,GLfloat,GLfloat) pfglTexCoord3f;
+alias void function(GLint,GLint,GLint) pfglTexCoord3i;
+alias void function(GLshort,GLshort,GLshort) pfglTexCoord3s;
+alias void function(GLdouble,GLdouble,GLdouble,GLdouble) pfglTexCoord4d;
+alias void function(GLfloat,GLfloat,GLfloat,GLfloat) pfglTexCoord4f;
+alias void function(GLint,GLint,GLint,GLint) pfglTexCoord4i;
+alias void function(GLshort,GLshort,GLshort,GLshort) pfglTexCoord4s;
+alias void function(GLdouble*) pfglTexCoord1dv;
+alias void function(GLfloat*) pfglTexCoord1fv;
+alias void function(GLint*) pfglTexCoord1iv;
+alias void function(GLshort*) pfglTexCoord1sv;
+alias void function(GLdouble*) pfglTexCoord2dv;
+alias void function(GLfloat*) pfglTexCoord2fv;
+alias void function(GLint*) pfglTexCoord2iv;
+alias void function(GLshort*) pfglTexCoord2sv;
+alias void function(GLdouble*) pfglTexCoord3dv;
+alias void function(GLfloat*) pfglTexCoord3fv;
+alias void function(GLint*) pfglTexCoord3iv;
+alias void function(GLshort*) pfglTexCoord3sv;
+alias void function(GLdouble*) pfglTexCoord4dv;
+alias void function(GLfloat*) pfglTexCoord4fv;
+alias void function(GLint*) pfglTexCoord4iv;
+alias void function(GLshort*) pfglTexCoord4sv;
+alias void function(GLdouble,GLdouble) pfglRasterPos2d;
+alias void function(GLfloat,GLfloat) pfglRasterPos2f;
+alias void function(GLint,GLint) pfglRasterPos2i;
+alias void function(GLshort,GLshort) pfglRasterPos2s;
+alias void function(GLdouble,GLdouble,GLdouble) pfglRasterPos3d;
+alias void function(GLfloat,GLfloat,GLfloat) pfglRasterPos3f;
+alias void function(GLint,GLint,GLint) pfglRasterPos3i;
+alias void function(GLshort,GLshort,GLshort) pfglRasterPos3s;
+alias void function(GLdouble,GLdouble,GLdouble,GLdouble) pfglRasterPos4d;
+alias void function(GLfloat,GLfloat,GLfloat,GLfloat) pfglRasterPos4f;
+alias void function(GLint,GLint,GLint,GLint) pfglRasterPos4i;
+alias void function(GLshort,GLshort,GLshort,GLshort) pfglRasterPos4s;
+alias void function(GLdouble*) pfglRasterPos2dv;
+alias void function(GLfloat*) pfglRasterPos2fv;
+alias void function(GLint*) pfglRasterPos2iv;
+alias void function(GLshort*) pfglRasterPos2sv;
+alias void function(GLdouble*) pfglRasterPos3dv;
+alias void function(GLfloat*) pfglRasterPos3fv;
+alias void function(GLint*) pfglRasterPos3iv;
+alias void function(GLshort*) pfglRasterPos3sv;
+alias void function(GLdouble*) pfglRasterPos4dv;
+alias void function(GLfloat*) pfglRasterPos4fv;
+alias void function(GLint*) pfglRasterPos4iv;
+alias void function(GLshort*) pfglRasterPos4sv;
+alias void function(GLdouble,GLdouble,GLdouble,GLdouble) pfglRectd;
+alias void function(GLfloat,GLfloat,GLfloat,GLfloat) pfglRectf;
+alias void function(GLint,GLint,GLint,GLint) pfglRecti;
+alias void function(GLshort,GLshort,GLshort,GLshort) pfglRects;
+alias void function(GLdouble*) pfglRectdv;
+alias void function(GLfloat*) pfglRectfv;
+alias void function(GLint*) pfglRectiv;
+alias void function(GLshort*) pfglRectsv;
 
-typedef void function(GLenum) pfglBegin;
-typedef void function() pfglEnd;
-typedef void function(GLdouble,GLdouble) pfglVertex2d;
-typedef void function(GLfloat,GLfloat) pfglVertex2f;
-typedef void function(GLint,GLint) pfglVertex2i;
-typedef void function(GLshort,GLshort) pfglVertex2s;
-typedef void function(GLdouble,GLdouble,GLdouble) pfglVertex3d;
-typedef void function(GLfloat,GLfloat,GLfloat) pfglVertex3f;
-typedef void function(GLint,GLint,GLint) pfglVertex3i;
-typedef void function(GLshort,GLshort,GLshort) pfglVertex3s;
-typedef void function(GLdouble,GLdouble,GLdouble,GLdouble) pfglVertex4d;
-typedef void function(GLfloat,GLfloat,GLfloat,GLfloat) pfglVertex4f;
-typedef void function(GLint,GLint,GLint,GLint) pfglVertex4i;
-typedef void function(GLshort,GLshort,GLshort,GLshort) pfglVertex4s;
-typedef void function(GLdouble*) pfglVertex2dv;
-typedef void function(GLfloat*) pfglVertex2fv;
-typedef void function(GLint*) pfglVertex2iv;
-typedef void function(GLshort*) pfglVertex2sv;
-typedef void function(GLdouble*) pfglVertex3dv;
-typedef void function(GLfloat*) pfglVertex3fv;
-typedef void function(GLint*) pfglVertex3iv;
-typedef void function(GLshort*) pfglVertex3sv;
-typedef void function(GLdouble*) pfglVertex4dv;
-typedef void function(GLfloat*) pfglVertex4fv;
-typedef void function(GLint*) pfglVertex4iv;
-typedef void function(GLshort*) pfglVertex4sv;
-typedef void function(GLbyte,GLbyte,GLbyte) pfglNormal3b;
-typedef void function(GLdouble,GLdouble,GLdouble) pfglNormal3d;
-typedef void function(GLfloat,GLfloat,GLfloat) pfglNormal3f;
-typedef void function(GLint,GLint,GLint) pfglNormal3i;
-typedef void function(GLshort,GLshort,GLshort) pfglNormal3s;
-typedef void function(GLbyte*) pfglNormal3bv;
-typedef void function(GLdouble*) pfglNormal3dv;
-typedef void function(GLfloat*) pfglNormal3fv;
-typedef void function(GLint*) pfglNormal3iv;
-typedef void function(GLshort*) pfglNormal3sv;
-typedef void function(GLdouble) pfglIndexd;
-typedef void function(GLfloat) pfglIndexf;
-typedef void function(GLint) pfglIndexi;
-typedef void function(GLshort) pfglIndexs;
-typedef void function(GLubyte) pfglIndexub;
-typedef void function(GLdouble*) pfglIndexdv;
-typedef void function(GLfloat*) pfglIndexfv;
-typedef void function(GLint*) pfglIndexiv;
-typedef void function(GLshort*) pfglIndexsv;
-typedef void function(GLubyte*) pfglIndexubv;
-typedef void function(GLbyte,GLbyte,GLbyte) pfglColor3b;
-typedef void function(GLdouble,GLdouble,GLdouble) pfglColor3d;
-typedef void function(GLfloat,GLfloat,GLfloat) pfglColor3f;
-typedef void function(GLint,GLint,GLint) pfglColor3i;
-typedef void function(GLshort,GLshort,GLshort) pfglColor3s;
-typedef void function(GLubyte,GLubyte,GLubyte) pfglColor3ub;
-typedef void function(GLuint,GLuint,GLuint) pfglColor3ui;
-typedef void function(GLushort,GLushort,GLushort) pfglColor3us;
-typedef void function(GLbyte,GLbyte,GLbyte,GLbyte) pfglColor4b;
-typedef void function(GLdouble,GLdouble,GLdouble,GLdouble) pfglColor4d;
-typedef void function(GLfloat,GLfloat,GLfloat,GLfloat) pfglColor4f;
-typedef void function(GLint,GLint,GLint,GLint) pfglColor4i;
-typedef void function(GLshort,GLshort,GLshort,GLshort) pfglColor4s;
-typedef void function(GLubyte,GLubyte,GLubyte,GLubyte) pfglColor4ub;
-typedef void function(GLuint,GLuint,GLuint,GLuint) pfglColor4ui;
-typedef void function(GLushort,GLushort,GLushort,GLushort) pfglColor4us;
-typedef void function(GLbyte*) pfglColor3bv;
-typedef void function(GLdouble*) pfglColor3dv;
-typedef void function(GLfloat*) pfglColor3fv;
-typedef void function(GLint*) pfglColor3iv;
-typedef void function(GLshort*) pfglColor3sv;
-typedef void function(GLubyte*) pfglColor3ubv;
-typedef void function(GLuint*) pfglColor3uiv;
-typedef void function(GLushort*) pfglColor3usv;
-typedef void function(GLbyte*) pfglColor4bv;
-typedef void function(GLdouble*) pfglColor4dv;
-typedef void function(GLfloat*) pfglColor4fv;
-typedef void function(GLint*) pfglColor4iv;
-typedef void function(GLshort*) pfglColor4sv;
-typedef void function(GLubyte*) pfglColor4ubv;
-typedef void function(GLuint*) pfglColor4uiv;
-typedef void function(GLushort) pfglColor4usv;
-typedef void function(GLdouble) pfglTexCoord1d;
-typedef void function(GLfloat) pfglTexCoord1f;
-typedef void function(GLint) pfglTexCoord1i;
-typedef void function(GLshort) pfglTexCoord1s;
-typedef void function(GLdouble,GLdouble) pfglTexCoord2d;
-typedef void function(GLfloat,GLfloat) pfglTexCoord2f;
-typedef void function(GLint,GLint) pfglTexCoord2i;
-typedef void function(GLshort,GLshort) pfglTexCoord2s;
-typedef void function(GLdouble,GLdouble,GLdouble) pfglTexCoord3d;
-typedef void function(GLfloat,GLfloat,GLfloat) pfglTexCoord3f;
-typedef void function(GLint,GLint,GLint) pfglTexCoord3i;
-typedef void function(GLshort,GLshort,GLshort) pfglTexCoord3s;
-typedef void function(GLdouble,GLdouble,GLdouble,GLdouble) pfglTexCoord4d;
-typedef void function(GLfloat,GLfloat,GLfloat,GLfloat) pfglTexCoord4f;
-typedef void function(GLint,GLint,GLint,GLint) pfglTexCoord4i;
-typedef void function(GLshort,GLshort,GLshort,GLshort) pfglTexCoord4s;
-typedef void function(GLdouble*) pfglTexCoord1dv;
-typedef void function(GLfloat*) pfglTexCoord1fv;
-typedef void function(GLint*) pfglTexCoord1iv;
-typedef void function(GLshort*) pfglTexCoord1sv;
-typedef void function(GLdouble*) pfglTexCoord2dv;
-typedef void function(GLfloat*) pfglTexCoord2fv;
-typedef void function(GLint*) pfglTexCoord2iv;
-typedef void function(GLshort*) pfglTexCoord2sv;
-typedef void function(GLdouble*) pfglTexCoord3dv;
-typedef void function(GLfloat*) pfglTexCoord3fv;
-typedef void function(GLint*) pfglTexCoord3iv;
-typedef void function(GLshort*) pfglTexCoord3sv;
-typedef void function(GLdouble*) pfglTexCoord4dv;
-typedef void function(GLfloat*) pfglTexCoord4fv;
-typedef void function(GLint*) pfglTexCoord4iv;
-typedef void function(GLshort*) pfglTexCoord4sv;
-typedef void function(GLdouble,GLdouble) pfglRasterPos2d;
-typedef void function(GLfloat,GLfloat) pfglRasterPos2f;
-typedef void function(GLint,GLint) pfglRasterPos2i;
-typedef void function(GLshort,GLshort) pfglRasterPos2s;
-typedef void function(GLdouble,GLdouble,GLdouble) pfglRasterPos3d;
-typedef void function(GLfloat,GLfloat,GLfloat) pfglRasterPos3f;
-typedef void function(GLint,GLint,GLint) pfglRasterPos3i;
-typedef void function(GLshort,GLshort,GLshort) pfglRasterPos3s;
-typedef void function(GLdouble,GLdouble,GLdouble,GLdouble) pfglRasterPos4d;
-typedef void function(GLfloat,GLfloat,GLfloat,GLfloat) pfglRasterPos4f;
-typedef void function(GLint,GLint,GLint,GLint) pfglRasterPos4i;
-typedef void function(GLshort,GLshort,GLshort,GLshort) pfglRasterPos4s;
-typedef void function(GLdouble*) pfglRasterPos2dv;
-typedef void function(GLfloat*) pfglRasterPos2fv;
-typedef void function(GLint*) pfglRasterPos2iv;
-typedef void function(GLshort*) pfglRasterPos2sv;
-typedef void function(GLdouble*) pfglRasterPos3dv;
-typedef void function(GLfloat*) pfglRasterPos3fv;
-typedef void function(GLint*) pfglRasterPos3iv;
-typedef void function(GLshort*) pfglRasterPos3sv;
-typedef void function(GLdouble*) pfglRasterPos4dv;
-typedef void function(GLfloat*) pfglRasterPos4fv;
-typedef void function(GLint*) pfglRasterPos4iv;
-typedef void function(GLshort*) pfglRasterPos4sv;
-typedef void function(GLdouble,GLdouble,GLdouble,GLdouble) pfglRectd;
-typedef void function(GLfloat,GLfloat,GLfloat,GLfloat) pfglRectf;
-typedef void function(GLint,GLint,GLint,GLint) pfglRecti;
-typedef void function(GLshort,GLshort,GLshort,GLshort) pfglRects;
-typedef void function(GLdouble*) pfglRectdv;
-typedef void function(GLfloat*) pfglRectfv;
-typedef void function(GLint*) pfglRectiv;
-typedef void function(GLshort*) pfglRectsv;
+alias void function(GLenum) pfglShadeModel;
+alias void function(GLenum,GLenum,GLfloat) pfglLightf;
+alias void function(GLenum,GLenum,GLint) pfglLighti;
+alias void function(GLenum,GLenum,GLfloat*) pfglLightfv;
+alias void function(GLenum,GLenum,GLint*) pfglLightiv;
+alias void function(GLenum,GLenum,GLfloat*) pfglGetLightfv;
+alias void function(GLenum,GLenum,GLint*) pfglGetLightiv;
+alias void function(GLenum,GLfloat) pfglLightModelf;
+alias void function(GLenum,GLint) pfglLightModeli;
+alias void function(GLenum,GLfloat*) pfglLightModelfv;
+alias void function(GLenum,GLint*) pfglLightModeliv;
+alias void function(GLenum,GLenum,GLfloat) pfglMaterialf;
+alias void function(GLenum,GLenum,GLint) pfglMateriali;
+alias void function(GLenum,GLenum,GLfloat*) pfglMaterialfv;
+alias void function(GLenum,GLenum,GLint*) pfglMaterialiv;
+alias void function(GLenum,GLenum,GLfloat*) pfglGetMaterialfv;
+alias void function(GLenum,GLenum,GLint*) pfglGetMaterialiv;
+alias void function(GLenum,GLenum) pfglColorMaterial;
 
-typedef void function(GLenum) pfglShadeModel;
-typedef void function(GLenum,GLenum,GLfloat) pfglLightf;
-typedef void function(GLenum,GLenum,GLint) pfglLighti;
-typedef void function(GLenum,GLenum,GLfloat*) pfglLightfv;
-typedef void function(GLenum,GLenum,GLint*) pfglLightiv;
-typedef void function(GLenum,GLenum,GLfloat*) pfglGetLightfv;
-typedef void function(GLenum,GLenum,GLint*) pfglGetLightiv;
-typedef void function(GLenum,GLfloat) pfglLightModelf;
-typedef void function(GLenum,GLint) pfglLightModeli;
-typedef void function(GLenum,GLfloat*) pfglLightModelfv;
-typedef void function(GLenum,GLint*) pfglLightModeliv;
-typedef void function(GLenum,GLenum,GLfloat) pfglMaterialf;
-typedef void function(GLenum,GLenum,GLint) pfglMateriali;
-typedef void function(GLenum,GLenum,GLfloat*) pfglMaterialfv;
-typedef void function(GLenum,GLenum,GLint*) pfglMaterialiv;
-typedef void function(GLenum,GLenum,GLfloat*) pfglGetMaterialfv;
-typedef void function(GLenum,GLenum,GLint*) pfglGetMaterialiv;
-typedef void function(GLenum,GLenum) pfglColorMaterial;
+alias void function(GLfloat,GLfloat) pfglPixelZoom;
+alias void function(GLenum,GLfloat) pfglPixelStoref;
+alias void function(GLenum,GLint) pfglPixelStorei;
+alias void function(GLenum,GLfloat) pfglPixelTransferf;
+alias void function(GLenum,GLint) pfglPixelTransferi;
+alias void function(GLenum,GLint,GLfloat*) pfglPixelMapfv;
+alias void function(GLenum,GLint,GLuint*) pfglPixelMapuiv;
+alias void function(GLenum,GLint,GLushort*) pfglPixelMapusv;
+alias void function(GLenum,GLfloat*) pfglGetPixelMapfv;
+alias void function(GLenum,GLuint*) pfglGetPixelMapuiv;
+alias void function(GLenum,GLushort*) pfglGetPixelMapusv;
+alias void function(GLsizei,GLsizei,GLfloat,GLfloat,GLfloat,GLfloat,GLubyte*) pfglBitmap;
+alias void function(GLint,GLint,GLsizei,GLsizei,GLenum,GLenum,GLvoid*) pfglReadPixels;
+alias void function(GLsizei,GLsizei,GLenum,GLenum,GLvoid*) pfglDrawPixels;
+alias void function(GLint,GLint,GLsizei,GLsizei,GLenum) pfglCopyPixels;
 
-typedef void function(GLfloat,GLfloat) pfglPixelZoom;
-typedef void function(GLenum,GLfloat) pfglPixelStoref;
-typedef void function(GLenum,GLint) pfglPixelStorei;
-typedef void function(GLenum,GLfloat) pfglPixelTransferf;
-typedef void function(GLenum,GLint) pfglPixelTransferi;
-typedef void function(GLenum,GLint,GLfloat*) pfglPixelMapfv;
-typedef void function(GLenum,GLint,GLuint*) pfglPixelMapuiv;
-typedef void function(GLenum,GLint,GLushort*) pfglPixelMapusv;
-typedef void function(GLenum,GLfloat*) pfglGetPixelMapfv;
-typedef void function(GLenum,GLuint*) pfglGetPixelMapuiv;
-typedef void function(GLenum,GLushort*) pfglGetPixelMapusv;
-typedef void function(GLsizei,GLsizei,GLfloat,GLfloat,GLfloat,GLfloat,GLubyte*) pfglBitmap;
-typedef void function(GLint,GLint,GLsizei,GLsizei,GLenum,GLenum,GLvoid*) pfglReadPixels;
-typedef void function(GLsizei,GLsizei,GLenum,GLenum,GLvoid*) pfglDrawPixels;
-typedef void function(GLint,GLint,GLsizei,GLsizei,GLenum) pfglCopyPixels;
+alias void function(GLenum,GLint,GLuint) pfglStencilFunc;
+alias void function(GLuint) pfglStencilMask;
+alias void function(GLenum,GLenum,GLenum) pfglStencilOp;
+alias void function(GLint) pfglClearStencil;
 
-typedef void function(GLenum,GLint,GLuint) pfglStencilFunc;
-typedef void function(GLuint) pfglStencilMask;
-typedef void function(GLenum,GLenum,GLenum) pfglStencilOp;
-typedef void function(GLint) pfglClearStencil;
+alias void function(GLenum,GLenum,GLdouble) pfglTexGend;
+alias void function(GLenum,GLenum,GLfloat) pfglTexGenf;
+alias void function(GLenum,GLenum,GLint) pfglTexGeni;
+alias void function(GLenum,GLenum,GLdouble*) pfglTexGendv;
+alias void function(GLenum,GLenum,GLfloat*) pfglTexGenfv;
+alias void function(GLenum,GLenum,GLint*) pfglTexGeniv;
+alias void function(GLenum,GLenum,GLdouble*) pfglGetTexGendv;
+alias void function(GLenum,GLenum,GLfloat*) pfglGetTexGenfv;
+alias void function(GLenum,GLenum,GLint*) pfglGetTexGeniv;
+alias void function(GLenum,GLenum,GLfloat) pfglTexEnvf;
+alias void function(GLenum,GLenum,GLint) pfglTexEnvi;
+alias void function(GLenum,GLenum,GLfloat*) pfglTexEnvfv;
+alias void function(GLenum,GLenum,GLint*) pfglTexEnviv;
+alias void function(GLenum,GLenum,GLfloat*) pfglGetTexEnvfv;
+alias void function(GLenum,GLenum,GLint*) pfglGetTexEnviv;
+alias void function(GLenum,GLenum,GLfloat) pfglTexParameterf;
+alias void function(GLenum,GLenum,GLint) pfglTexParameteri;
+alias void function(GLenum,GLenum,GLfloat*) pfglTexParameterfv;
+alias void function(GLenum,GLenum,GLint*) pfglTexParameteriv;
+alias void function(GLenum,GLenum,GLfloat*) pfglGetTexParameterfv;
+alias void function(GLenum,GLenum,GLint*) pfglGetTexParameteriv;
+alias void function(GLenum,GLint,GLenum,GLfloat*) pfglGetTexLevelParameterfv;
+alias void function(GLenum,GLint,GLenum,GLint*) pfglGetTexLevelParameteriv;
+alias void function(GLenum,GLint,GLint,GLsizei,GLint,GLenum,GLenum,GLvoid*) pfglTexImage1D;
+alias void function(GLenum,GLint,GLint,GLsizei,GLsizei,GLint,GLenum,GLenum,GLvoid*) pfglTexImage2D;
+alias void function(GLenum,GLint,GLenum,GLenum,GLvoid*) pfglGetTexImage;
 
-typedef void function(GLenum,GLenum,GLdouble) pfglTexGend;
-typedef void function(GLenum,GLenum,GLfloat) pfglTexGenf;
-typedef void function(GLenum,GLenum,GLint) pfglTexGeni;
-typedef void function(GLenum,GLenum,GLdouble*) pfglTexGendv;
-typedef void function(GLenum,GLenum,GLfloat*) pfglTexGenfv;
-typedef void function(GLenum,GLenum,GLint*) pfglTexGeniv;
-typedef void function(GLenum,GLenum,GLdouble*) pfglGetTexGendv;
-typedef void function(GLenum,GLenum,GLfloat*) pfglGetTexGenfv;
-typedef void function(GLenum,GLenum,GLint*) pfglGetTexGeniv;
-typedef void function(GLenum,GLenum,GLfloat) pfglTexEnvf;
-typedef void function(GLenum,GLenum,GLint) pfglTexEnvi;
-typedef void function(GLenum,GLenum,GLfloat*) pfglTexEnvfv;
-typedef void function(GLenum,GLenum,GLint*) pfglTexEnviv;
-typedef void function(GLenum,GLenum,GLfloat*) pfglGetTexEnvfv;
-typedef void function(GLenum,GLenum,GLint*) pfglGetTexEnviv;
-typedef void function(GLenum,GLenum,GLfloat) pfglTexParameterf;
-typedef void function(GLenum,GLenum,GLint) pfglTexParameteri;
-typedef void function(GLenum,GLenum,GLfloat*) pfglTexParameterfv;
-typedef void function(GLenum,GLenum,GLint*) pfglTexParameteriv;
-typedef void function(GLenum,GLenum,GLfloat*) pfglGetTexParameterfv;
-typedef void function(GLenum,GLenum,GLint*) pfglGetTexParameteriv;
-typedef void function(GLenum,GLint,GLenum,GLfloat*) pfglGetTexLevelParameterfv;
-typedef void function(GLenum,GLint,GLenum,GLint*) pfglGetTexLevelParameteriv;
-typedef void function(GLenum,GLint,GLint,GLsizei,GLint,GLenum,GLenum,GLvoid*) pfglTexImage1D;
-typedef void function(GLenum,GLint,GLint,GLsizei,GLsizei,GLint,GLenum,GLenum,GLvoid*) pfglTexImage2D;
-typedef void function(GLenum,GLint,GLenum,GLenum,GLvoid*) pfglGetTexImage;
+alias void function(GLenum,GLdouble,GLdouble,GLint,GLint,GLdouble*) pfglMap1d;
+alias void function(GLenum,GLfloat,GLfloat,GLint,GLint,GLfloat*) pfglMap1f;
+alias void function(GLenum,GLdouble,GLdouble,GLint,GLint,GLdouble,GLdouble,GLint,GLint,GLdouble*) pfglMap2d;
+alias void function(GLenum,GLfloat,GLfloat,GLint,GLint,GLfloat,GLfloat,GLint,GLint,GLfloat*) pfglMap2f;
+alias void function(GLenum,GLenum,GLdouble*) pfglGetMapdv;
+alias void function(GLenum,GLenum,GLfloat*) pfglGetMapfv;
+alias void function(GLenum,GLenum,GLint*) pfglGetMapiv;
+alias void function(GLdouble) pfglEvalCoord1d;
+alias void function(GLfloat) pfglEvalCoord1f;
+alias void function(GLdouble*) pfglEvalCoord1dv;
+alias void function(GLfloat*) pfglEvalCoord1fv;
+alias void function(GLdouble,GLdouble) pfglEvalCoord2d;
+alias void function(GLfloat,GLfloat) pfglEvalCoord2f;
+alias void function(GLdouble*) pfglEvalCoord2dv;
+alias void function(GLfloat*) pfglEvalCoord2fv;
+alias void function(GLint,GLdouble,GLdouble) pfglMapGrid1d;
+alias void function(GLint,GLfloat,GLfloat) pfglMapGrid1f;
+alias void function(GLint,GLdouble,GLdouble,GLint,GLdouble,GLdouble) pfglMapGrid2d;
+alias void function(GLint,GLfloat,GLfloat,GLint,GLfloat,GLfloat) pfglMapGrid2f;
+alias void function(GLint) pfglEvalPoint1;
+alias void function(GLint,GLint) pfglEvalPoint2;
+alias void function(GLenum,GLint,GLint) pfglEvalMesh1;
+alias void function(GLenum,GLint,GLint,GLint,GLint) pfglEvalMesh2;
 
-typedef void function(GLenum,GLdouble,GLdouble,GLint,GLint,GLdouble*) pfglMap1d;
-typedef void function(GLenum,GLfloat,GLfloat,GLint,GLint,GLfloat*) pfglMap1f;
-typedef void function(GLenum,GLdouble,GLdouble,GLint,GLint,GLdouble,GLdouble,GLint,GLint,GLdouble*) pfglMap2d;
-typedef void function(GLenum,GLfloat,GLfloat,GLint,GLint,GLfloat,GLfloat,GLint,GLint,GLfloat*) pfglMap2f;
-typedef void function(GLenum,GLenum,GLdouble*) pfglGetMapdv;
-typedef void function(GLenum,GLenum,GLfloat*) pfglGetMapfv;
-typedef void function(GLenum,GLenum,GLint*) pfglGetMapiv;
-typedef void function(GLdouble) pfglEvalCoord1d;
-typedef void function(GLfloat) pfglEvalCoord1f;
-typedef void function(GLdouble*) pfglEvalCoord1dv;
-typedef void function(GLfloat*) pfglEvalCoord1fv;
-typedef void function(GLdouble,GLdouble) pfglEvalCoord2d;
-typedef void function(GLfloat,GLfloat) pfglEvalCoord2f;
-typedef void function(GLdouble*) pfglEvalCoord2dv;
-typedef void function(GLfloat*) pfglEvalCoord2fv;
-typedef void function(GLint,GLdouble,GLdouble) pfglMapGrid1d;
-typedef void function(GLint,GLfloat,GLfloat) pfglMapGrid1f;
-typedef void function(GLint,GLdouble,GLdouble,GLint,GLdouble,GLdouble) pfglMapGrid2d;
-typedef void function(GLint,GLfloat,GLfloat,GLint,GLfloat,GLfloat) pfglMapGrid2f;
-typedef void function(GLint) pfglEvalPoint1;
-typedef void function(GLint,GLint) pfglEvalPoint2;
-typedef void function(GLenum,GLint,GLint) pfglEvalMesh1;
-typedef void function(GLenum,GLint,GLint,GLint,GLint) pfglEvalMesh2;
+alias void function(GLenum,GLfloat) pfglFogf;
+alias void function(GLenum,GLint) pfglFogi;
+alias void function(GLenum,GLfloat*) pfglFogfv;
+alias void function(GLenum,GLint*) pfglFogiv;
 
-typedef void function(GLenum,GLfloat) pfglFogf;
-typedef void function(GLenum,GLint) pfglFogi;
-typedef void function(GLenum,GLfloat*) pfglFogfv;
-typedef void function(GLenum,GLint*) pfglFogiv;
+alias void function(GLsizei,GLenum,GLfloat*) pfglFeedbackBuffer;
+alias void function(GLfloat) pfglPassThrough;
+alias void function(GLsizei,GLuint*) pfglSelectBuffer;
+alias void function() pfglInitNames;
+alias void function(GLuint) pfglLoadName;
+alias void function(GLuint) pfglPushName;
+alias void function() pfglPopName;
 
-typedef void function(GLsizei,GLenum,GLfloat*) pfglFeedbackBuffer;
-typedef void function(GLfloat) pfglPassThrough;
-typedef void function(GLsizei,GLuint*) pfglSelectBuffer;
-typedef void function() pfglInitNames;
-typedef void function(GLuint) pfglLoadName;
-typedef void function(GLuint) pfglPushName;
-typedef void function() pfglPopName;
+alias void function(GLsizei,GLuint*) pfglGenTextures;
+alias void function(GLsizei,GLuint*) pfglDeleteTextures;
+alias void function(GLenum,GLuint) pfglBindTexture;
+alias void function(GLsizei,GLuint*,GLclampf*) pfglPrioritizeTextures;
+alias GLboolean function(GLsizei,GLuint*,GLboolean*) pfglAreTexturesResident;
+alias GLboolean function(GLuint) pfglIsTexture;
 
-typedef void function(GLsizei,GLuint*) pfglGenTextures;
-typedef void function(GLsizei,GLuint*) pfglDeleteTextures;
-typedef void function(GLenum,GLuint) pfglBindTexture;
-typedef void function(GLsizei,GLuint*,GLclampf*) pfglPrioritizeTextures;
-typedef GLboolean function(GLsizei,GLuint*,GLboolean*) pfglAreTexturesResident;
-typedef GLboolean function(GLuint) pfglIsTexture;
+alias void function(GLenum,GLint,GLint,GLsizei,GLenum,GLenum,GLvoid*) pfglTexSubImage1D;
+alias void function(GLenum,GLint,GLint,GLint,GLsizei,GLsizei,GLenum,GLenum,GLvoid*) pfglTexSubImage2D;
+alias void function(GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLint) pfglCopyTexImage1D;
+alias void function(GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLsizei,GLint) pfglCopyTexImage2D;
+alias void function(GLenum,GLint,GLint,GLint,GLint,GLsizei) pfglCopyTexSubImage1D;
+alias void function(GLenum,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei) pfglCopyTexSubImage2D;
 
-typedef void function(GLenum,GLint,GLint,GLsizei,GLenum,GLenum,GLvoid*) pfglTexSubImage1D;
-typedef void function(GLenum,GLint,GLint,GLint,GLsizei,GLsizei,GLenum,GLenum,GLvoid*) pfglTexSubImage2D;
-typedef void function(GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLint) pfglCopyTexImage1D;
-typedef void function(GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLsizei,GLint) pfglCopyTexImage2D;
-typedef void function(GLenum,GLint,GLint,GLint,GLint,GLsizei) pfglCopyTexSubImage1D;
-typedef void function(GLenum,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei) pfglCopyTexSubImage2D;
+alias void function(GLint,GLenum,GLsizei,GLvoid*) pfglVertexPointer;
+alias void function(GLenum,GLsizei,GLvoid*) pfglNormalPointer;
+alias void function(GLint,GLenum,GLsizei,GLvoid*) pfglColorPointer;
+alias void function(GLenum,GLsizei,GLvoid*) pfglIndexPointer;
+alias void function(GLint,GLenum,GLsizei,GLvoid*) pfglTexCoordPointer;
+alias void function(GLsizei,GLvoid*) pfglEdgeFlagPointer;
+alias void function(GLenum,GLvoid**) pfglGetPointerv;
+alias void function(GLint) pfglArrayElement;
+alias void function(GLenum,GLint,GLsizei) pfglDrawArrays;
+alias void function(GLenum,GLsizei,GLenum,GLvoid*) pfglDrawElements;
+alias void function(GLenum,GLsizei,GLvoid*) pfglInterleavedArrays;
+}
 
-typedef void function(GLint,GLenum,GLsizei,GLvoid*) pfglVertexPointer;
-typedef void function(GLenum,GLsizei,GLvoid*) pfglNormalPointer;
-typedef void function(GLint,GLenum,GLsizei,GLvoid*) pfglColorPointer;
-typedef void function(GLenum,GLsizei,GLvoid*) pfglIndexPointer;
-typedef void function(GLint,GLenum,GLsizei,GLvoid*) pfglTexCoordPointer;
-typedef void function(GLsizei,GLvoid*) pfglEdgeFlagPointer;
-typedef void function(GLenum,GLvoid**) pfglGetPointerv;
-typedef void function(GLint) pfglArrayElement;
-typedef void function(GLenum,GLint,GLsizei) pfglDrawArrays;
-typedef void function(GLenum,GLsizei,GLenum,GLvoid*) pfglDrawElements;
-typedef void function(GLenum,GLsizei,GLvoid*) pfglInterleavedArrays;
-
 pfglClearIndex          glClearIndex;
 pfglClearColor          glClearColor;
 pfglClear               glClear;
Index: DerelictGL/derelict/opengl/glext.d
===================================================================
--- DerelictGL/derelict/opengl/glext.d	(revision 318)
+++ DerelictGL/derelict/opengl/glext.d	(working copy)
@@ -32,7 +32,8 @@
 module derelict.opengl.glext;
 
 public
-{
+{
+    /*
     // ARB
     import derelict.opengl.extension.arb.color_buffer_float;
     import derelict.opengl.extension.arb.depth_texture;
@@ -219,5 +220,5 @@
 
     // SGIS
     import derelict.opengl.extension.sgis.generate_mipmap;
-
+    */
 } // public
Index: DerelictGL/derelict/opengl/gl20.d
===================================================================
--- DerelictGL/derelict/opengl/gl20.d	(revision 318)
+++ DerelictGL/derelict/opengl/gl20.d	(working copy)
@@ -325,102 +325,102 @@
     GL_STENCIL_BACK_WRITEMASK          = 0x8CA5,
 }
 
-extern(System):
+extern(System) {
+alias GLvoid function(GLenum, GLenum) pfglBlendEquationSeparate;
+alias GLvoid function(GLsizei, GLenum*) pfglDrawBuffers;
+alias GLvoid function(GLenum, GLenum, GLenum, GLenum) pfglStencilOpSeparate;
+alias GLvoid function(GLenum, GLenum, GLint, GLuint) pfglStencilFuncSeparate;
+alias GLvoid function(GLenum, GLuint) pfglStencilMaskSeparate;
+alias GLvoid function(GLuint, GLuint) pfglAttachShader;
+alias GLvoid function(GLuint, GLuint, GLchar*) pfglBindAttribLocation;
+alias GLvoid function(GLuint) pfglCompileShader;
+alias GLuint function() pfglCreateProgram;
+alias GLuint function(GLenum) pfglCreateShader;
+alias GLvoid function(GLuint) pfglDeleteProgram;
+alias GLvoid function(GLuint) pfglDeleteShader;
+alias GLvoid function(GLuint, GLuint) pfglDetachShader;
+alias GLvoid function(GLuint) pfglDisableVertexAttribArray;
+alias GLvoid function(GLuint) pfglEnableVertexAttribArray;
+alias GLvoid function(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*) pfglGetActiveAttrib;
+alias GLvoid function(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*) pfglGetActiveUniform;
+alias GLvoid function(GLuint, GLsizei, GLsizei*, GLuint*) pfglGetAttachedShaders;
+alias GLint function(GLuint, GLchar*) pfglGetAttribLocation;
+alias GLvoid function(GLuint, GLenum, GLint*) pfglGetProgramiv;
+alias GLvoid function(GLuint, GLsizei, GLsizei*, GLchar*) pfglGetProgramInfoLog;
+alias GLvoid function(GLuint, GLenum, GLint *) pfglGetShaderiv;
+alias GLvoid function(GLuint, GLsizei, GLsizei*, GLchar*) pfglGetShaderInfoLog;
+alias GLvoid function(GLuint, GLsizei, GLsizei*, GLchar*) pfglGetShaderSource;
+alias GLint function(GLuint, GLchar*) pfglGetUniformLocation;
+alias GLvoid function(GLuint, GLint, GLfloat*) pfglGetUniformfv;
+alias GLvoid function(GLuint, GLint, GLint*) pfglGetUniformiv;
+alias GLvoid function(GLuint, GLenum, GLdouble*) pfglGetVertexAttribdv;
+alias GLvoid function(GLuint, GLenum, GLfloat*) pfglGetVertexAttribfv;
+alias GLvoid function(GLuint, GLenum, GLint*) pfglGetVertexAttribiv;
+alias GLvoid function(GLuint, GLenum, GLvoid**) pfglGetVertexAttribPointerv;
+alias GLboolean function(GLuint) pfglIsProgram;
+alias GLboolean function(GLuint) pfglIsShader;
+alias GLvoid function(GLuint) pfglLinkProgram;
+alias GLvoid function(GLuint, GLsizei, GLchar**, GLint*) pfglShaderSource;
+alias GLvoid function(GLuint) pfglUseProgram;
+alias GLvoid function(GLint, GLfloat) pfglUniform1f;
+alias GLvoid function(GLint, GLfloat, GLfloat) pfglUniform2f;
+alias GLvoid function(GLint, GLfloat, GLfloat, GLfloat) pfglUniform3f;
+alias GLvoid function(GLint, GLfloat, GLfloat, GLfloat, GLfloat) pfglUniform4f;
+alias GLvoid function(GLint, GLint) pfglUniform1i;
+alias GLvoid function(GLint, GLint, GLint) pfglUniform2i;
+alias GLvoid function(GLint, GLint, GLint, GLint) pfglUniform3i;
+alias GLvoid function(GLint, GLint, GLint, GLint, GLint) pfglUniform4i;
+alias GLvoid function(GLint, GLsizei, GLfloat*) pfglUniform1fv;
+alias GLvoid function(GLint, GLsizei, GLfloat*) pfglUniform2fv;
+alias GLvoid function(GLint, GLsizei, GLfloat*) pfglUniform3fv;
+alias GLvoid function(GLint, GLsizei, GLfloat*) pfglUniform4fv;
+alias GLvoid function(GLint, GLsizei, GLint*) pfglUniform1iv;
+alias GLvoid function(GLint, GLsizei, GLint*) pfglUniform2iv;
+alias GLvoid function(GLint, GLsizei, GLint*) pfglUniform3iv;
+alias GLvoid function(GLint, GLsizei, GLint*) pfglUniform4iv;
+alias GLvoid function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix2fv;
+alias GLvoid function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix3fv;
+alias GLvoid function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix4fv;
+alias GLvoid function(GLuint) pfglValidateProgram;
+alias GLvoid function(GLuint, GLdouble) pfglVertexAttrib1d;
+alias GLvoid function(GLuint, GLdouble*) pfglVertexAttrib1dv;
+alias GLvoid function(GLuint, GLfloat) pfglVertexAttrib1f;
+alias GLvoid function(GLuint, GLfloat*) pfglVertexAttrib1fv;
+alias GLvoid function(GLuint, GLshort) pfglVertexAttrib1s;
+alias GLvoid function(GLuint, GLshort*) pfglVertexAttrib1sv;
+alias GLvoid function(GLuint, GLdouble, GLdouble) pfglVertexAttrib2d;
+alias GLvoid function(GLuint, GLdouble*) pfglVertexAttrib2dv;
+alias GLvoid function(GLuint, GLfloat, GLfloat) pfglVertexAttrib2f;
+alias GLvoid function(GLuint, GLfloat*) pfglVertexAttrib2fv;
+alias GLvoid function(GLuint, GLshort, GLshort) pfglVertexAttrib2s;
+alias GLvoid function(GLuint, GLshort*) pfglVertexAttrib2sv;
+alias GLvoid function(GLuint, GLdouble, GLdouble, GLdouble) pfglVertexAttrib3d;
+alias GLvoid function(GLuint, GLdouble*) pfglVertexAttrib3dv;
+alias GLvoid function(GLuint, GLfloat, GLfloat, GLfloat) pfglVertexAttrib3f;
+alias GLvoid function(GLuint, GLfloat*) pfglVertexAttrib3fv;
+alias GLvoid function(GLuint, GLshort, GLshort, GLshort) pfglVertexAttrib3s;
+alias GLvoid function(GLuint, GLshort*) pfglVertexAttrib3sv;
+alias GLvoid function(GLuint, GLbyte*) pfglVertexAttrib4Nbv;
+alias GLvoid function(GLuint, GLint*) pfglVertexAttrib4Niv;
+alias GLvoid function(GLuint, GLshort*) pfglVertexAttrib4Nsv;
+alias GLvoid function(GLuint, GLubyte, GLubyte, GLubyte, GLubyte) pfglVertexAttrib4Nub;
+alias GLvoid function(GLuint, GLubyte*) pfglVertexAttrib4Nubv;
+alias GLvoid function(GLuint, GLuint*) pfglVertexAttrib4Nuiv;
+alias GLvoid function(GLuint, GLushort*) pfglVertexAttrib4Nusv;
+alias GLvoid function(GLuint, GLbyte*) pfglVertexAttrib4bv;
+alias GLvoid function(GLuint, GLdouble, GLdouble, GLdouble, GLdouble) pfglVertexAttrib4d;
+alias GLvoid function(GLuint, GLdouble*) pfglVertexAttrib4dv;
+alias GLvoid function(GLuint, GLfloat, GLfloat, GLfloat, GLfloat) pfglVertexAttrib4f;
+alias GLvoid function(GLuint, GLfloat*) pfglVertexAttrib4fv;
+alias GLvoid function(GLuint, GLint*) pfglVertexAttrib4iv;
+alias GLvoid function(GLuint, GLshort, GLshort, GLshort, GLshort) pfglVertexAttrib4s;
+alias GLvoid function(GLuint, GLshort*) pfglVertexAttrib4sv;
+alias GLvoid function(GLuint, GLubyte*) pfglVertexAttrib4ubv;
+alias GLvoid function(GLuint, GLuint*) pfglVertexAttrib4uiv;
+alias GLvoid function(GLuint, GLushort*) pfglVertexAttrib4usv;
+alias GLvoid function(GLuint, GLint, GLenum, GLboolean, GLsizei, GLvoid*) pfglVertexAttribPointer;
+}
 
-typedef GLvoid function(GLenum, GLenum) pfglBlendEquationSeparate;
-typedef GLvoid function(GLsizei, GLenum*) pfglDrawBuffers;
-typedef GLvoid function(GLenum, GLenum, GLenum, GLenum) pfglStencilOpSeparate;
-typedef GLvoid function(GLenum, GLenum, GLint, GLuint) pfglStencilFuncSeparate;
-typedef GLvoid function(GLenum, GLuint) pfglStencilMaskSeparate;
-typedef GLvoid function(GLuint, GLuint) pfglAttachShader;
-typedef GLvoid function(GLuint, GLuint, GLchar*) pfglBindAttribLocation;
-typedef GLvoid function(GLuint) pfglCompileShader;
-typedef GLuint function() pfglCreateProgram;
-typedef GLuint function(GLenum) pfglCreateShader;
-typedef GLvoid function(GLuint) pfglDeleteProgram;
-typedef GLvoid function(GLuint) pfglDeleteShader;
-typedef GLvoid function(GLuint, GLuint) pfglDetachShader;
-typedef GLvoid function(GLuint) pfglDisableVertexAttribArray;
-typedef GLvoid function(GLuint) pfglEnableVertexAttribArray;
-typedef GLvoid function(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*) pfglGetActiveAttrib;
-typedef GLvoid function(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*) pfglGetActiveUniform;
-typedef GLvoid function(GLuint, GLsizei, GLsizei*, GLuint*) pfglGetAttachedShaders;
-typedef GLint function(GLuint, GLchar*) pfglGetAttribLocation;
-typedef GLvoid function(GLuint, GLenum, GLint*) pfglGetProgramiv;
-typedef GLvoid function(GLuint, GLsizei, GLsizei*, GLchar*) pfglGetProgramInfoLog;
-typedef GLvoid function(GLuint, GLenum, GLint *) pfglGetShaderiv;
-typedef GLvoid function(GLuint, GLsizei, GLsizei*, GLchar*) pfglGetShaderInfoLog;
-typedef GLvoid function(GLuint, GLsizei, GLsizei*, GLchar*) pfglGetShaderSource;
-typedef GLint function(GLuint, GLchar*) pfglGetUniformLocation;
-typedef GLvoid function(GLuint, GLint, GLfloat*) pfglGetUniformfv;
-typedef GLvoid function(GLuint, GLint, GLint*) pfglGetUniformiv;
-typedef GLvoid function(GLuint, GLenum, GLdouble*) pfglGetVertexAttribdv;
-typedef GLvoid function(GLuint, GLenum, GLfloat*) pfglGetVertexAttribfv;
-typedef GLvoid function(GLuint, GLenum, GLint*) pfglGetVertexAttribiv;
-typedef GLvoid function(GLuint, GLenum, GLvoid**) pfglGetVertexAttribPointerv;
-typedef GLboolean function(GLuint) pfglIsProgram;
-typedef GLboolean function(GLuint) pfglIsShader;
-typedef GLvoid function(GLuint) pfglLinkProgram;
-typedef GLvoid function(GLuint, GLsizei, GLchar**, GLint*) pfglShaderSource;
-typedef GLvoid function(GLuint) pfglUseProgram;
-typedef GLvoid function(GLint, GLfloat) pfglUniform1f;
-typedef GLvoid function(GLint, GLfloat, GLfloat) pfglUniform2f;
-typedef GLvoid function(GLint, GLfloat, GLfloat, GLfloat) pfglUniform3f;
-typedef GLvoid function(GLint, GLfloat, GLfloat, GLfloat, GLfloat) pfglUniform4f;
-typedef GLvoid function(GLint, GLint) pfglUniform1i;
-typedef GLvoid function(GLint, GLint, GLint) pfglUniform2i;
-typedef GLvoid function(GLint, GLint, GLint, GLint) pfglUniform3i;
-typedef GLvoid function(GLint, GLint, GLint, GLint, GLint) pfglUniform4i;
-typedef GLvoid function(GLint, GLsizei, GLfloat*) pfglUniform1fv;
-typedef GLvoid function(GLint, GLsizei, GLfloat*) pfglUniform2fv;
-typedef GLvoid function(GLint, GLsizei, GLfloat*) pfglUniform3fv;
-typedef GLvoid function(GLint, GLsizei, GLfloat*) pfglUniform4fv;
-typedef GLvoid function(GLint, GLsizei, GLint*) pfglUniform1iv;
-typedef GLvoid function(GLint, GLsizei, GLint*) pfglUniform2iv;
-typedef GLvoid function(GLint, GLsizei, GLint*) pfglUniform3iv;
-typedef GLvoid function(GLint, GLsizei, GLint*) pfglUniform4iv;
-typedef GLvoid function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix2fv;
-typedef GLvoid function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix3fv;
-typedef GLvoid function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix4fv;
-typedef GLvoid function(GLuint) pfglValidateProgram;
-typedef GLvoid function(GLuint, GLdouble) pfglVertexAttrib1d;
-typedef GLvoid function(GLuint, GLdouble*) pfglVertexAttrib1dv;
-typedef GLvoid function(GLuint, GLfloat) pfglVertexAttrib1f;
-typedef GLvoid function(GLuint, GLfloat*) pfglVertexAttrib1fv;
-typedef GLvoid function(GLuint, GLshort) pfglVertexAttrib1s;
-typedef GLvoid function(GLuint, GLshort*) pfglVertexAttrib1sv;
-typedef GLvoid function(GLuint, GLdouble, GLdouble) pfglVertexAttrib2d;
-typedef GLvoid function(GLuint, GLdouble*) pfglVertexAttrib2dv;
-typedef GLvoid function(GLuint, GLfloat, GLfloat) pfglVertexAttrib2f;
-typedef GLvoid function(GLuint, GLfloat*) pfglVertexAttrib2fv;
-typedef GLvoid function(GLuint, GLshort, GLshort) pfglVertexAttrib2s;
-typedef GLvoid function(GLuint, GLshort*) pfglVertexAttrib2sv;
-typedef GLvoid function(GLuint, GLdouble, GLdouble, GLdouble) pfglVertexAttrib3d;
-typedef GLvoid function(GLuint, GLdouble*) pfglVertexAttrib3dv;
-typedef GLvoid function(GLuint, GLfloat, GLfloat, GLfloat) pfglVertexAttrib3f;
-typedef GLvoid function(GLuint, GLfloat*) pfglVertexAttrib3fv;
-typedef GLvoid function(GLuint, GLshort, GLshort, GLshort) pfglVertexAttrib3s;
-typedef GLvoid function(GLuint, GLshort*) pfglVertexAttrib3sv;
-typedef GLvoid function(GLuint, GLbyte*) pfglVertexAttrib4Nbv;
-typedef GLvoid function(GLuint, GLint*) pfglVertexAttrib4Niv;
-typedef GLvoid function(GLuint, GLshort*) pfglVertexAttrib4Nsv;
-typedef GLvoid function(GLuint, GLubyte, GLubyte, GLubyte, GLubyte) pfglVertexAttrib4Nub;
-typedef GLvoid function(GLuint, GLubyte*) pfglVertexAttrib4Nubv;
-typedef GLvoid function(GLuint, GLuint*) pfglVertexAttrib4Nuiv;
-typedef GLvoid function(GLuint, GLushort*) pfglVertexAttrib4Nusv;
-typedef GLvoid function(GLuint, GLbyte*) pfglVertexAttrib4bv;
-typedef GLvoid function(GLuint, GLdouble, GLdouble, GLdouble, GLdouble) pfglVertexAttrib4d;
-typedef GLvoid function(GLuint, GLdouble*) pfglVertexAttrib4dv;
-typedef GLvoid function(GLuint, GLfloat, GLfloat, GLfloat, GLfloat) pfglVertexAttrib4f;
-typedef GLvoid function(GLuint, GLfloat*) pfglVertexAttrib4fv;
-typedef GLvoid function(GLuint, GLint*) pfglVertexAttrib4iv;
-typedef GLvoid function(GLuint, GLshort, GLshort, GLshort, GLshort) pfglVertexAttrib4s;
-typedef GLvoid function(GLuint, GLshort*) pfglVertexAttrib4sv;
-typedef GLvoid function(GLuint, GLubyte*) pfglVertexAttrib4ubv;
-typedef GLvoid function(GLuint, GLuint*) pfglVertexAttrib4uiv;
-typedef GLvoid function(GLuint, GLushort*) pfglVertexAttrib4usv;
-typedef GLvoid function(GLuint, GLint, GLenum, GLboolean, GLsizei, GLvoid*) pfglVertexAttribPointer;
-
 pfglBlendEquationSeparate       glBlendEquationSeparate;
 pfglDrawBuffers                 glDrawBuffers;
 pfglStencilOpSeparate           glStencilOpSeparate;
Index: DerelictGL/derelict/opengl/cgl.d
===================================================================
--- DerelictGL/derelict/opengl/cgl.d	(revision 318)
+++ DerelictGL/derelict/opengl/cgl.d	(working copy)
@@ -48,7 +48,7 @@
     import derelict.util.loader;
 }
 
-extern (C):
+extern (C) {
 
 /*
 ** CGLContext structure.
@@ -232,31 +232,31 @@
 /*
 ** Pixel format functions
 */
-typedef CGLError                function(CGLPixelFormatAttribute*, CGLPixelFormatObj*, int*)
+alias CGLError                function(CGLPixelFormatAttribute*, CGLPixelFormatObj*, int*)
                             pfCGLChoosePixelFormat;
-typedef CGLError                function(CGLPixelFormatObj)
+alias CGLError                function(CGLPixelFormatObj)
                             pfCGLDestroyPixelFormat;
-typedef CGLError                function(CGLPixelFormatObj, int, CGLPixelFormatAttribute, int*)
+alias CGLError                function(CGLPixelFormatObj, int, CGLPixelFormatAttribute, int*)
                             pfCGLDescribePixelFormat;
 
 /*
 ** Renderer information functions
 */
-typedef CGLError                function(uint, CGLRendererInfoObj*, int*)
+alias CGLError                function(uint, CGLRendererInfoObj*, int*)
                             pfCGLQueryRendererInfo;
-typedef CGLError                function(CGLRendererInfoObj)
+alias CGLError                function(CGLRendererInfoObj)
                             pfCGLDestroyRendererInfo;
-typedef CGLError                function(CGLRendererInfoObj, int, CGLRendererProperty, int*)
+alias CGLError                function(CGLRendererInfoObj, int, CGLRendererProperty, int*)
                             pfCGLDescribeRenderer;
 
 /*
 ** Context functions
 */
-typedef CGLError                function(CGLPixelFormatObj, CGLContextObj, CGLContextObj*)
+alias CGLError                function(CGLPixelFormatObj, CGLContextObj, CGLContextObj*)
                             pfCGLCreateContext;
-typedef CGLError                function(CGLContextObj)
+alias CGLError                function(CGLContextObj)
                             pfCGLDestroyContext;
-typedef CGLError                function(CGLContextObj, CGLContextObj, uint)
+alias CGLError                function(CGLContextObj, CGLContextObj, uint)
                             pfCGLCopyContext;
 
 /*
@@ -267,71 +267,71 @@
 // <AvailabilityMacros.h>.
 version (Mac_OS_X_10_3_and_later)
 {
-typedef CGLError                function(int, int, uint, uint, int, CGLPBufferObj*)
+alias CGLError                function(int, int, uint, uint, int, CGLPBufferObj*)
                             pfCGLCreatePBuffer;
 
-typedef CGLError                function(CGLPBufferObj)
+alias CGLError                function(CGLPBufferObj)
                             pfCGLDestroyPBuffer;
 
-typedef CGLError                function(CGLPBufferObj, int*, int*, uint*, uint*, int*)
+alias CGLError                function(CGLPBufferObj, int*, int*, uint*, uint*, int*)
                             pfCGLDescribePBuffer;
 
-typedef CGLError                function(CGLContextObj, CGLPBufferObj, uint)
+alias CGLError                function(CGLContextObj, CGLPBufferObj, uint)
                             pfCGLTexImagePBuffer;
 }
 
 /*
 ** Drawable Functions
 */
-typedef CGLError                function(CGLContextObj, int, int, int, void*)
+alias CGLError                function(CGLContextObj, int, int, int, void*)
                             pfCGLSetOffScreen;
-typedef CGLError                function(CGLContextObj, int*, int*, int*, void **baseaddr)
+alias CGLError                function(CGLContextObj, int*, int*, int*, void **baseaddr)
                             pfCGLGetOffScreen;
-typedef CGLError                function(CGLContextObj)
+alias CGLError                function(CGLContextObj)
                             pfCGLSetFullScreen;
 
 version (Mac_OS_X_10_3_and_later)
 {
-typedef CGLError                function(CGLContextObj, CGLPBufferObj, uint, int, int)
+alias CGLError                function(CGLContextObj, CGLPBufferObj, uint, int, int)
                             pfCGLSetPBuffer;
 
-typedef CGLError                function(CGLContextObj, CGLPBufferObj*, uint*, int*, int*)
+alias CGLError                function(CGLContextObj, CGLPBufferObj*, uint*, int*, int*)
                             pfCGLGetPBuffer;
 }
 
-typedef CGLError                function(CGLContextObj)
+alias CGLError                function(CGLContextObj)
                             pfCGLClearDrawable;
-typedef CGLError                function(CGLContextObj)
+alias CGLError                function(CGLContextObj)
                             pfCGLFlushDrawable;
 
 /*
 ** Per context enables and parameters
 */
-typedef CGLError                function(CGLContextObj, CGLContextEnable)
+alias CGLError                function(CGLContextObj, CGLContextEnable)
                             pfCGLEnable;
-typedef CGLError                function(CGLContextObj, CGLContextEnable)
+alias CGLError                function(CGLContextObj, CGLContextEnable)
                             pfCGLDisable;
-typedef CGLError                function(CGLContextObj, CGLContextEnable, int*)
+alias CGLError                function(CGLContextObj, CGLContextEnable, int*)
                             pfCGLIsEnabled;
-typedef CGLError                function(CGLContextObj, CGLContextParameter, int*)
+alias CGLError                function(CGLContextObj, CGLContextParameter, int*)
                             pfCGLSetParameter;
-typedef CGLError                function(CGLContextObj, CGLContextParameter, int*)
+alias CGLError                function(CGLContextObj, CGLContextParameter, int*)
                             pfCGLGetParameter;
 
 /*
 ** Virtual screen functions
 */
-typedef CGLError                function(CGLContextObj, int)
+alias CGLError                function(CGLContextObj, int)
                             pfCGLSetVirtualScreen;
-typedef CGLError                function(CGLContextObj, int*)
+alias CGLError                function(CGLContextObj, int*)
                             pfCGLGetVirtualScreen;
 
 /*
 ** Global library options
 */
-typedef CGLError                function(CGLGlobalOption, int)
+alias CGLError                function(CGLGlobalOption, int)
                             pfCGLSetOption;
-typedef CGLError                function(CGLGlobalOption, int*)
+alias CGLError                function(CGLGlobalOption, int*)
                             pfCGLGetOption;
 
 /*
@@ -339,31 +339,32 @@
 */
 version (Mac_OS_X_10_4_and_later)
 {
-typedef CGLError                function(CGLContextObj)
+alias CGLError                function(CGLContextObj)
                             pfCGLLockContext;
 
-typedef CGLError                function(CGLContextObj)
+alias CGLError                function(CGLContextObj)
                             pfCGLUnlockContext;
 }
 
 /*
 ** Version numbers
 */
-typedef void                    function(int*, int*)
+alias void                    function(int*, int*)
                             pfCGLGetVersion;
 
 /*
 ** Convert an error code to a string
 */
-typedef const char*             function(CGLError)
+alias const char*             function(CGLError)
                             pfCGLErrorString;
 
+}
 /*
 ** Current context functions
 */
-typedef CGLError                function(CGLContextObj)
+alias CGLError                function(CGLContextObj)
                             pfCGLSetCurrentContext;
-typedef CGLContextObj           function()
+alias CGLContextObj           function()
                             pfCGLGetCurrentContext;
 
 /*
Index: DerelictGL/derelict/opengl/gl12.d
===================================================================
--- DerelictGL/derelict/opengl/gl12.d	(revision 318)
+++ DerelictGL/derelict/opengl/gl12.d	(working copy)
@@ -103,13 +103,13 @@
     GL_TEXTURE_BINDING_3D              = 0x806A,
 }
 
-extern(System):
+extern(System) {
+alias GLvoid function(GLenum, GLuint, GLuint, GLsizei, GLenum, GLvoid*) pfglDrawRangeElements;
+alias GLvoid function(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid*) pfglTexImage3D;
+alias GLvoid function(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLvoid*) pfglTexSubImage3D;
+alias GLvoid function(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) pfglCopyTexSubImage3D;
+}
 
-typedef GLvoid function(GLenum, GLuint, GLuint, GLsizei, GLenum, GLvoid*) pfglDrawRangeElements;
-typedef GLvoid function(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid*) pfglTexImage3D;
-typedef GLvoid function(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLvoid*) pfglTexSubImage3D;
-typedef GLvoid function(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) pfglCopyTexSubImage3D;
-
 pfglDrawRangeElements       glDrawRangeElements;
 pfglTexImage3D              glTexImage3D;
 pfglTexSubImage3D           glTexSubImage3D;
Index: DerelictGL/derelict/opengl/gl21.d
===================================================================
--- DerelictGL/derelict/opengl/gl21.d	(revision 318)
+++ DerelictGL/derelict/opengl/gl21.d	(working copy)
@@ -89,15 +89,15 @@
     GL_COMPRESSED_SLUMINANCE_ALPHA    = 0x8C4B,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix2x3fv;
+alias void function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix3x2fv;
+alias void function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix2x4fv;
+alias void function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix4x2fv;
+alias void function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix3x4fv;
+alias void function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix4x3fv;
+}
 
-typedef void function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix2x3fv;
-typedef void function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix3x2fv;
-typedef void function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix2x4fv;
-typedef void function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix4x2fv;
-typedef void function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix3x4fv;
-typedef void function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix4x3fv;
-
 pfglUniformMatrix2x3fv              glUniformMatrix2x3fv;
 pfglUniformMatrix3x2fv              glUniformMatrix3x2fv;
 pfglUniformMatrix2x4fv              glUniformMatrix2x4fv;
Index: DerelictGL/derelict/opengl/gl13.d
===================================================================
--- DerelictGL/derelict/opengl/gl13.d	(revision 318)
+++ DerelictGL/derelict/opengl/gl13.d	(working copy)
@@ -242,55 +242,55 @@
     GL_CLAMP_TO_BORDER             = 0x812D,
 }
 
-extern(System):
+extern(System) {
+alias GLvoid function(GLenum) pfglActiveTexture;
+alias GLvoid function(GLenum) pfglClientActiveTexture;
+alias GLvoid function(GLenum, GLdouble) pfglMultiTexCoord1d;
+alias GLvoid function(GLenum, GLdouble*) pfglMultiTexCoord1dv;
+alias GLvoid function(GLenum, GLfloat) pfglMultiTexCoord1f;
+alias GLvoid function(GLenum, GLfloat*) pfglMultiTexCoord1fv;
+alias GLvoid function(GLenum, GLint) pfglMultiTexCoord1i;
+alias GLvoid function(GLenum, GLint*) pfglMultiTexCoord1iv;
+alias GLvoid function(GLenum, GLshort) pfglMultiTexCoord1s;
+alias GLvoid function(GLenum, GLshort*) pfglMultiTexCoord1sv;
+alias GLvoid function(GLenum, GLdouble, GLdouble) pfglMultiTexCoord2d;
+alias GLvoid function(GLenum, GLdouble*) pfglMultiTexCoord2dv;
+alias GLvoid function(GLenum, GLfloat, GLfloat) pfglMultiTexCoord2f;
+alias GLvoid function(GLenum, GLfloat*) pfglMultiTexCoord2fv;
+alias GLvoid function(GLenum, GLint, GLint) pfglMultiTexCoord2i;
+alias GLvoid function(GLenum, GLint*) pfglMultiTexCoord2iv;
+alias GLvoid function(GLenum, GLshort, GLshort) pfglMultiTexCoord2s;
+alias GLvoid function(GLenum, GLshort*) pfglMultiTexCoord2sv;
+alias GLvoid function(GLenum, GLdouble, GLdouble, GLdouble) pfglMultiTexCoord3d;
+alias GLvoid function(GLenum, GLdouble*) pfglMultiTexCoord3dv;
+alias GLvoid function(GLenum, GLfloat, GLfloat, GLfloat) pfglMultiTexCoord3f;
+alias GLvoid function(GLenum, GLfloat*) pfglMultiTexCoord3fv;
+alias GLvoid function(GLenum, GLint, GLint, GLint) pfglMultiTexCoord3i;
+alias GLvoid function(GLenum, GLint*) pfglMultiTexCoord3iv;
+alias GLvoid function(GLenum, GLshort, GLshort, GLshort) pfglMultiTexCoord3s;
+alias GLvoid function(GLenum, GLshort*) pfglMultiTexCoord3sv;
+alias GLvoid function(GLenum, GLdouble, GLdouble, GLdouble, GLdouble) pfglMultiTexCoord4d;
+alias GLvoid function(GLenum, GLdouble*) pfglMultiTexCoord4dv;
+alias GLvoid function(GLenum, GLfloat, GLfloat, GLfloat, GLfloat) pfglMultiTexCoord4f;
+alias GLvoid function(GLenum, GLfloat*) pfglMultiTexCoord4fv;
+alias GLvoid function(GLenum, GLint, GLint, GLint, GLint) pfglMultiTexCoord4i;
+alias GLvoid function(GLenum, GLint*) pfglMultiTexCoord4iv;
+alias GLvoid function(GLenum, GLshort, GLshort, GLshort, GLshort) pfglMultiTexCoord4s;
+alias GLvoid function(GLenum, GLshort*) pfglMultiTexCoord4sv;
+alias GLvoid function(GLdouble*) pfglLoadTransposeMatrixd;
+alias GLvoid function(GLfloat*) pfglLoadTransposeMatrixf;
+alias GLvoid function(GLdouble*) pfglMultTransposeMatrixd;
+alias GLvoid function(GLfloat*) pfglMultTransposeMatrixf;
+alias GLvoid function(GLclampf, GLboolean) pfglSampleCoverage;
+alias GLvoid function(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, GLvoid*) pfglCompressedTexImage1D;
+alias GLvoid function(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLvoid*) pfglCompressedTexImage2D;
+alias GLvoid function(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei depth, GLint, GLsizei, GLvoid*) pfglCompressedTexImage3D;
+alias GLvoid function(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, GLvoid*) pfglCompressedTexSubImage1D;
+alias GLvoid function(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*) pfglCompressedTexSubImage2D;
+alias GLvoid function(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*) pfglCompressedTexSubImage3D;
+alias GLvoid function(GLenum, GLint, GLvoid*) pfglGetCompressedTexImage;
+}
 
-typedef GLvoid function(GLenum) pfglActiveTexture;
-typedef GLvoid function(GLenum) pfglClientActiveTexture;
-typedef GLvoid function(GLenum, GLdouble) pfglMultiTexCoord1d;
-typedef GLvoid function(GLenum, GLdouble*) pfglMultiTexCoord1dv;
-typedef GLvoid function(GLenum, GLfloat) pfglMultiTexCoord1f;
-typedef GLvoid function(GLenum, GLfloat*) pfglMultiTexCoord1fv;
-typedef GLvoid function(GLenum, GLint) pfglMultiTexCoord1i;
-typedef GLvoid function(GLenum, GLint*) pfglMultiTexCoord1iv;
-typedef GLvoid function(GLenum, GLshort) pfglMultiTexCoord1s;
-typedef GLvoid function(GLenum, GLshort*) pfglMultiTexCoord1sv;
-typedef GLvoid function(GLenum, GLdouble, GLdouble) pfglMultiTexCoord2d;
-typedef GLvoid function(GLenum, GLdouble*) pfglMultiTexCoord2dv;
-typedef GLvoid function(GLenum, GLfloat, GLfloat) pfglMultiTexCoord2f;
-typedef GLvoid function(GLenum, GLfloat*) pfglMultiTexCoord2fv;
-typedef GLvoid function(GLenum, GLint, GLint) pfglMultiTexCoord2i;
-typedef GLvoid function(GLenum, GLint*) pfglMultiTexCoord2iv;
-typedef GLvoid function(GLenum, GLshort, GLshort) pfglMultiTexCoord2s;
-typedef GLvoid function(GLenum, GLshort*) pfglMultiTexCoord2sv;
-typedef GLvoid function(GLenum, GLdouble, GLdouble, GLdouble) pfglMultiTexCoord3d;
-typedef GLvoid function(GLenum, GLdouble*) pfglMultiTexCoord3dv;
-typedef GLvoid function(GLenum, GLfloat, GLfloat, GLfloat) pfglMultiTexCoord3f;
-typedef GLvoid function(GLenum, GLfloat*) pfglMultiTexCoord3fv;
-typedef GLvoid function(GLenum, GLint, GLint, GLint) pfglMultiTexCoord3i;
-typedef GLvoid function(GLenum, GLint*) pfglMultiTexCoord3iv;
-typedef GLvoid function(GLenum, GLshort, GLshort, GLshort) pfglMultiTexCoord3s;
-typedef GLvoid function(GLenum, GLshort*) pfglMultiTexCoord3sv;
-typedef GLvoid function(GLenum, GLdouble, GLdouble, GLdouble, GLdouble) pfglMultiTexCoord4d;
-typedef GLvoid function(GLenum, GLdouble*) pfglMultiTexCoord4dv;
-typedef GLvoid function(GLenum, GLfloat, GLfloat, GLfloat, GLfloat) pfglMultiTexCoord4f;
-typedef GLvoid function(GLenum, GLfloat*) pfglMultiTexCoord4fv;
-typedef GLvoid function(GLenum, GLint, GLint, GLint, GLint) pfglMultiTexCoord4i;
-typedef GLvoid function(GLenum, GLint*) pfglMultiTexCoord4iv;
-typedef GLvoid function(GLenum, GLshort, GLshort, GLshort, GLshort) pfglMultiTexCoord4s;
-typedef GLvoid function(GLenum, GLshort*) pfglMultiTexCoord4sv;
-typedef GLvoid function(GLdouble*) pfglLoadTransposeMatrixd;
-typedef GLvoid function(GLfloat*) pfglLoadTransposeMatrixf;
-typedef GLvoid function(GLdouble*) pfglMultTransposeMatrixd;
-typedef GLvoid function(GLfloat*) pfglMultTransposeMatrixf;
-typedef GLvoid function(GLclampf, GLboolean) pfglSampleCoverage;
-typedef GLvoid function(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, GLvoid*) pfglCompressedTexImage1D;
-typedef GLvoid function(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLvoid*) pfglCompressedTexImage2D;
-typedef GLvoid function(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei depth, GLint, GLsizei, GLvoid*) pfglCompressedTexImage3D;
-typedef GLvoid function(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, GLvoid*) pfglCompressedTexSubImage1D;
-typedef GLvoid function(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*) pfglCompressedTexSubImage2D;
-typedef GLvoid function(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*) pfglCompressedTexSubImage3D;
-typedef GLvoid function(GLenum, GLint, GLvoid*) pfglGetCompressedTexImage;
-
 pfglActiveTexture           glActiveTexture;
 pfglClientActiveTexture     glClientActiveTexture;
 pfglMultiTexCoord1d         glMultiTexCoord1d;
Index: DerelictGL/derelict/opengl/gl14.d
===================================================================
--- DerelictGL/derelict/opengl/gl14.d	(revision 318)
+++ DerelictGL/derelict/opengl/gl14.d	(working copy)
@@ -198,56 +198,56 @@
     GL_FUNC_REVERSE_SUBTRACT           = 0x800B,
 }
 
-extern(System):
+extern(System) {
+alias GLvoid function(GLenum, GLenum, GLenum, GLenum) pfglBlendFuncSeparate;
+alias GLvoid function(GLfloat) pfglFogCoordf;
+alias GLvoid function(GLfloat*) pfglFogCoordfv;
+alias GLvoid function(GLdouble) pfglFogCoordd;
+alias GLvoid function(GLdouble*) pfglFogCoorddv;
+alias GLvoid function(GLenum, GLsizei,GLvoid*) pfglFogCoordPointer;
+alias GLvoid function(GLenum, GLint*, GLsizei*, GLsizei) pfglMultiDrawArrays;
+alias GLvoid function(GLenum, GLsizei*, GLenum, GLvoid**, GLsizei) pfglMultiDrawElements;
+alias GLvoid function(GLenum, GLfloat) pfglPointParameterf;
+alias GLvoid function(GLenum, GLfloat*) pfglPointParameterfv;
+alias GLvoid function(GLenum, GLint) pfglPointParameteri;
+alias GLvoid function(GLenum, GLint*) pfglPointParameteriv;
+alias GLvoid function(GLbyte, GLbyte, GLbyte) pfglSecondaryColor3b;
+alias GLvoid function(GLbyte*) pfglSecondaryColor3bv;
+alias GLvoid function(GLdouble, GLdouble, GLdouble) pfglSecondaryColor3d;
+alias GLvoid function(GLdouble*) pfglSecondaryColor3dv;
+alias GLvoid function(GLfloat, GLfloat, GLfloat) pfglSecondaryColor3f;
+alias GLvoid function(GLfloat*) pfglSecondaryColor3fv;
+alias GLvoid function(GLint, GLint, GLint) pfglSecondaryColor3i;
+alias GLvoid function(GLint*) pfglSecondaryColor3iv;
+alias GLvoid function(GLshort, GLshort, GLshort) pfglSecondaryColor3s;
+alias GLvoid function(GLshort*) pfglSecondaryColor3sv;
+alias GLvoid function(GLubyte, GLubyte, GLubyte) pfglSecondaryColor3ub;
+alias GLvoid function(GLubyte*) pfglSecondaryColor3ubv;
+alias GLvoid function(GLuint, GLuint, GLuint) pfglSecondaryColor3ui;
+alias GLvoid function(GLuint*) pfglSecondaryColor3uiv;
+alias GLvoid function(GLushort, GLushort, GLushort) pfglSecondaryColor3us;
+alias GLvoid function(GLushort*) pfglSecondaryColor3usv;
+alias GLvoid function(GLint, GLenum, GLsizei, GLvoid*) pfglSecondaryColorPointer;
+alias GLvoid function(GLdouble, GLdouble) pfglWindowPos2d;
+alias GLvoid function(GLdouble*) pfglWindowPos2dv;
+alias GLvoid function(GLfloat, GLfloat) pfglWindowPos2f;
+alias GLvoid function(GLfloat*) pfglWindowPos2fv;
+alias GLvoid function(GLint, GLint) pfglWindowPos2i;
+alias GLvoid function(GLint*) pfglWindowPos2iv;
+alias GLvoid function(GLshort, GLshort) pfglWindowPos2s;
+alias GLvoid function(GLshort*) pfglWindowPos2sv;
+alias GLvoid function(GLdouble, GLdouble, GLdouble) pfglWindowPos3d;
+alias GLvoid function(GLdouble*) pfglWindowPos3dv;
+alias GLvoid function(GLfloat, GLfloat, GLfloat) pfglWindowPos3f;
+alias GLvoid function(GLfloat*) pfglWindowPos3fv;
+alias GLvoid function(GLint, GLint, GLint) pfglWindowPos3i;
+alias GLvoid function(GLint*) pfglWindowPos3iv;
+alias GLvoid function(GLshort, GLshort, GLshort) pfglWindowPos3s;
+alias GLvoid function(GLshort*) pfglWindowPos3sv;
+alias GLvoid function(GLclampf, GLclampf, GLclampf, GLclampf) pfglBlendColor;
+alias GLvoid function(GLenum) pfglBlendEquation;
+}
 
-typedef GLvoid function(GLenum, GLenum, GLenum, GLenum) pfglBlendFuncSeparate;
-typedef GLvoid function(GLfloat) pfglFogCoordf;
-typedef GLvoid function(GLfloat*) pfglFogCoordfv;
-typedef GLvoid function(GLdouble) pfglFogCoordd;
-typedef GLvoid function(GLdouble*) pfglFogCoorddv;
-typedef GLvoid function(GLenum, GLsizei,GLvoid*) pfglFogCoordPointer;
-typedef GLvoid function(GLenum, GLint*, GLsizei*, GLsizei) pfglMultiDrawArrays;
-typedef GLvoid function(GLenum, GLsizei*, GLenum, GLvoid**, GLsizei) pfglMultiDrawElements;
-typedef GLvoid function(GLenum, GLfloat) pfglPointParameterf;
-typedef GLvoid function(GLenum, GLfloat*) pfglPointParameterfv;
-typedef GLvoid function(GLenum, GLint) pfglPointParameteri;
-typedef GLvoid function(GLenum, GLint*) pfglPointParameteriv;
-typedef GLvoid function(GLbyte, GLbyte, GLbyte) pfglSecondaryColor3b;
-typedef GLvoid function(GLbyte*) pfglSecondaryColor3bv;
-typedef GLvoid function(GLdouble, GLdouble, GLdouble) pfglSecondaryColor3d;
-typedef GLvoid function(GLdouble*) pfglSecondaryColor3dv;
-typedef GLvoid function(GLfloat, GLfloat, GLfloat) pfglSecondaryColor3f;
-typedef GLvoid function(GLfloat*) pfglSecondaryColor3fv;
-typedef GLvoid function(GLint, GLint, GLint) pfglSecondaryColor3i;
-typedef GLvoid function(GLint*) pfglSecondaryColor3iv;
-typedef GLvoid function(GLshort, GLshort, GLshort) pfglSecondaryColor3s;
-typedef GLvoid function(GLshort*) pfglSecondaryColor3sv;
-typedef GLvoid function(GLubyte, GLubyte, GLubyte) pfglSecondaryColor3ub;
-typedef GLvoid function(GLubyte*) pfglSecondaryColor3ubv;
-typedef GLvoid function(GLuint, GLuint, GLuint) pfglSecondaryColor3ui;
-typedef GLvoid function(GLuint*) pfglSecondaryColor3uiv;
-typedef GLvoid function(GLushort, GLushort, GLushort) pfglSecondaryColor3us;
-typedef GLvoid function(GLushort*) pfglSecondaryColor3usv;
-typedef GLvoid function(GLint, GLenum, GLsizei, GLvoid*) pfglSecondaryColorPointer;
-typedef GLvoid function(GLdouble, GLdouble) pfglWindowPos2d;
-typedef GLvoid function(GLdouble*) pfglWindowPos2dv;
-typedef GLvoid function(GLfloat, GLfloat) pfglWindowPos2f;
-typedef GLvoid function(GLfloat*) pfglWindowPos2fv;
-typedef GLvoid function(GLint, GLint) pfglWindowPos2i;
-typedef GLvoid function(GLint*) pfglWindowPos2iv;
-typedef GLvoid function(GLshort, GLshort) pfglWindowPos2s;
-typedef GLvoid function(GLshort*) pfglWindowPos2sv;
-typedef GLvoid function(GLdouble, GLdouble, GLdouble) pfglWindowPos3d;
-typedef GLvoid function(GLdouble*) pfglWindowPos3dv;
-typedef GLvoid function(GLfloat, GLfloat, GLfloat) pfglWindowPos3f;
-typedef GLvoid function(GLfloat*) pfglWindowPos3fv;
-typedef GLvoid function(GLint, GLint, GLint) pfglWindowPos3i;
-typedef GLvoid function(GLint*) pfglWindowPos3iv;
-typedef GLvoid function(GLshort, GLshort, GLshort) pfglWindowPos3s;
-typedef GLvoid function(GLshort*) pfglWindowPos3sv;
-typedef GLvoid function(GLclampf, GLclampf, GLclampf, GLclampf) pfglBlendColor;
-typedef GLvoid function(GLenum) pfglBlendEquation;
-
 pfglBlendFuncSeparate       glBlendFuncSeparate;
 pfglFogCoordf               glFogCoordf;
 pfglFogCoordfv              glFogCoordfv;
Index: DerelictGL/derelict/opengl/gl15.d
===================================================================
--- DerelictGL/derelict/opengl/gl15.d	(revision 318)
+++ DerelictGL/derelict/opengl/gl15.d	(working copy)
@@ -144,28 +144,28 @@
     GL_SRC2_ALPHA                      = GL_SOURCE2_ALPHA,
 }
 
-extern(System):
+extern(System) {
+alias GLvoid function(GLsizei, GLuint*) pfglGenQueries;
+alias GLvoid function(GLsizei,GLuint*) pfglDeleteQueries;
+alias GLboolean function(GLuint) pfglIsQuery;
+alias GLvoid function(GLenum, GLuint) pfglBeginQuery;
+alias GLvoid function(GLenum) pfglEndQuery;
+alias GLvoid function(GLenum, GLenum, GLint*) pfglGetQueryiv;
+alias GLvoid function(GLuint, GLenum, GLint*) pfglGetQueryObjectiv;
+alias GLvoid function(GLuint, GLenum, GLuint*) pfglGetQueryObjectuiv;
+alias GLvoid function(GLenum, GLuint) pfglBindBuffer;
+alias GLvoid function(GLsizei, GLuint*) pfglDeleteBuffers;
+alias GLvoid function(GLsizei, GLuint*) pfglGenBuffers;
+alias GLboolean function(GLuint) pfglIsBuffer;
+alias GLvoid function(GLenum, GLsizeiptr, GLvoid*, GLenum) pfglBufferData;
+alias GLvoid function(GLenum, GLintptr, GLsizeiptr,GLvoid*) pfglBufferSubData;
+alias GLvoid function(GLenum, GLintptr, GLsizeiptr, GLvoid*) pfglGetBufferSubData;
+alias GLvoid* function(GLenum, GLenum) pfglMapBuffer;
+alias GLboolean function(GLenum) pfglUnmapBuffer;
+alias GLvoid function(GLenum, GLenum, GLint*) pfglGetBufferParameteriv;
+alias GLvoid function(GLenum, GLenum, GLvoid**) pfglGetBufferPointerv;
+}
 
-typedef GLvoid function(GLsizei, GLuint*) pfglGenQueries;
-typedef GLvoid function(GLsizei,GLuint*) pfglDeleteQueries;
-typedef GLboolean function(GLuint) pfglIsQuery;
-typedef GLvoid function(GLenum, GLuint) pfglBeginQuery;
-typedef GLvoid function(GLenum) pfglEndQuery;
-typedef GLvoid function(GLenum, GLenum, GLint*) pfglGetQueryiv;
-typedef GLvoid function(GLuint, GLenum, GLint*) pfglGetQueryObjectiv;
-typedef GLvoid function(GLuint, GLenum, GLuint*) pfglGetQueryObjectuiv;
-typedef GLvoid function(GLenum, GLuint) pfglBindBuffer;
-typedef GLvoid function(GLsizei, GLuint*) pfglDeleteBuffers;
-typedef GLvoid function(GLsizei, GLuint*) pfglGenBuffers;
-typedef GLboolean function(GLuint) pfglIsBuffer;
-typedef GLvoid function(GLenum, GLsizeiptr, GLvoid*, GLenum) pfglBufferData;
-typedef GLvoid function(GLenum, GLintptr, GLsizeiptr,GLvoid*) pfglBufferSubData;
-typedef GLvoid function(GLenum, GLintptr, GLsizeiptr, GLvoid*) pfglGetBufferSubData;
-typedef GLvoid* function(GLenum, GLenum) pfglMapBuffer;
-typedef GLboolean function(GLenum) pfglUnmapBuffer;
-typedef GLvoid function(GLenum, GLenum, GLint*) pfglGetBufferParameteriv;
-typedef GLvoid function(GLenum, GLenum, GLvoid**) pfglGetBufferPointerv;
-
 pfglGenQueries              glGenQueries;
 pfglDeleteQueries           glDeleteQueries;
 pfglIsQuery                 glIsQuery;
Index: DerelictGL/derelict/opengl/wgl.d
===================================================================
--- DerelictGL/derelict/opengl/wgl.d	(revision 318)
+++ DerelictGL/derelict/opengl/wgl.d	(working copy)
@@ -47,24 +47,26 @@
     extern(Windows)
     {
         // WGL functions
-        typedef BOOL function(void*,void*) pfwglCopyContext;
-        typedef void* function(void*) pfwglCreateContext;
-        typedef void* function(void*,int) pfwglCreateLayerContext;
-        typedef BOOL function(void*) pfwglDeleteContext;
-        typedef BOOL function(void*,int,int,UINT,LAYERPLANEDESCRIPTOR*) pfwglDescribeLayerPlane;
-        typedef void* function() pfwglGetCurrentContext;
-        typedef void* function() pfwglGetCurrentDC;
-        typedef int function(void*,int,int,int,COLORREF*) pfwglGetLayerPaletteEntries;
-        typedef FARPROC function(LPCSTR) pfwglGetProcAddress;
-        typedef BOOL function(void*,void*) pfwglMakeCurrent;
-        typedef BOOL function(void*,int,BOOL) pfwglRealizeLayerPalette;
-        typedef int function(void*,int,int,int,COLORREF*) pfwglSetLayerPaletteEntries;
-        typedef BOOL function(void*,void*) pfwglShareLists;
-        typedef BOOL function(void*,UINT) pfwglSwapLayerBuffers;
-        typedef BOOL function(void*,DWORD,DWORD,DWORD) pfwglUseFontBitmapsA;
-        typedef BOOL function(void*,DWORD,DWORD,DWORD,FLOAT,FLOAT,int,GLYPHMETRICSFLOAT*) pfwglUseFontOutlinesA;
-        typedef BOOL function(void*,DWORD,DWORD,DWORD) pfwglUseFontBitmapsW;
-        typedef BOOL function(void*,DWORD,DWORD,DWORD,FLOAT,FLOAT,int,GLYPHMETRICSFLOAT*) pfwglUseFontOutlinesW;
+        alias BOOL function(void*,void*) pfwglCopyContext;
+        alias void* function(void*) pfwglCreateContext;
+        alias void* function(void*,int) pfwglCreateLayerContext;
+        alias BOOL function(void*) pfwglDeleteContext;
+        alias BOOL function(void*,int,int,UINT,LAYERPLANEDESCRIPTOR*) pfwglDescribeLayerPlane;
+        alias void* function() pfwglGetCurrentContext;
+        alias void* function() pfwglGetCurrentDC;
+        alias int function(void*,int,int,int,COLORREF*) pfwglGetLayerPaletteEntries;
+        alias FARPROC function(LPCSTR) pfwglGetProcAddress;
+        alias BOOL function(void*,void*) pfwglMakeCurrent;
+        alias BOOL function(void*,int,BOOL) pfwglRealizeLayerPalette;
+        alias int function(void*,int,int,int,COLORREF*) pfwglSetLayerPaletteEntries;
+        alias BOOL function(void*,void*) pfwglShareLists;
+        alias BOOL function(void*,UINT) pfwglSwapLayerBuffers;
+        alias BOOL function(void*,DWORD,DWORD,DWORD) pfwglUseFontBitmapsA;
+        alias BOOL function(void*,DWORD,DWORD,DWORD,FLOAT,FLOAT,int,GLYPHMETRICSFLOAT*) pfwglUseFontOutlinesA;
+        alias BOOL function(void*,DWORD,DWORD,DWORD) pfwglUseFontBitmapsW;
+        alias BOOL function(void*,DWORD,DWORD,DWORD,FLOAT,FLOAT,int,GLYPHMETRICSFLOAT*) pfwglUseFontOutlinesW;
+    } // extern(Windows)
+
         pfwglCopyContext            wglCopyContext;
         pfwglCreateContext          wglCreateContext;
         pfwglCreateLayerContext     wglCreateLayerContext;
@@ -86,7 +88,6 @@
 
         alias wglUseFontBitmapsA    wglUseFontBitmaps;
         alias wglUseFontOutlinesA   wglUseFontOutlines;
-    } // extern(Windows)
 
 
 
Index: DerelictGL/derelict/opengl/extension/ext/histogram.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/histogram.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/histogram.d	(working copy)
@@ -108,19 +108,19 @@
     GL_TABLE_TOO_LARGE_EXT            = 0x8031,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLboolean, GLenum, GLenum, GLvoid*) pfglGetHistogramEXT;
+alias void function(GLenum, GLenum, GLfloat*) pfglGetHistogramParameterfvEXT;
+alias void function(GLenum, GLenum, GLint*) pfglGetHistogramParameterivEXT;
+alias void function(GLenum, GLboolean, GLenum, GLenum, GLvoid*) pfglGetMinmaxEXT;
+alias void function(GLenum, GLenum, GLfloat*) pfglGetMinmaxParameterfvEXT;
+alias void function(GLenum, GLsizei, GLenum, GLint*) pfglGetMinmaxParameterivEXT;
+alias void function(GLenum, GLsizei, GLenum, GLboolean) pfglHistogramEXT;
+alias void function(GLenum, GLenum, GLboolean) pfglMinmaxEXT;
+alias void function(GLenum) pfglResetHistogramEXT;
+alias void function(GLenum) pfglResetMinmaxEXT;
+}
 
-typedef void function(GLenum, GLboolean, GLenum, GLenum, GLvoid*) pfglGetHistogramEXT;
-typedef void function(GLenum, GLenum, GLfloat*) pfglGetHistogramParameterfvEXT;
-typedef void function(GLenum, GLenum, GLint*) pfglGetHistogramParameterivEXT;
-typedef void function(GLenum, GLboolean, GLenum, GLenum, GLvoid*) pfglGetMinmaxEXT;
-typedef void function(GLenum, GLenum, GLfloat*) pfglGetMinmaxParameterfvEXT;
-typedef void function(GLenum, GLsizei, GLenum, GLint*) pfglGetMinmaxParameterivEXT;
-typedef void function(GLenum, GLsizei, GLenum, GLboolean) pfglHistogramEXT;
-typedef void function(GLenum, GLenum, GLboolean) pfglMinmaxEXT;
-typedef void function(GLenum) pfglResetHistogramEXT;
-typedef void function(GLenum) pfglResetMinmaxEXT;
-
 pfglGetHistogramEXT             glGetHistogramEXT;
 pfglGetHistogramParameterfvEXT  glGetHistogramParameterfvEXT;
 pfglGetHistogramParameterivEXT  glGetHistogramParameterivEXT;
Index: DerelictGL/derelict/opengl/extension/ext/color_subtable.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/color_subtable.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/color_subtable.d	(working copy)
@@ -75,10 +75,10 @@
     }
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*) pfglColorSubTableEXT;
+alias void function(GLenum, GLsizei, GLint, GLint, GLsizei) pfglCopyColorSubTableEXT;
+}
 
-typedef void function(GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*) pfglColorSubTableEXT;
-typedef void function(GLenum, GLsizei, GLint, GLint, GLsizei) pfglCopyColorSubTableEXT;
-
 pfglColorSubTableEXT        glColorSubTableEXT;
-pfglCopyColorSubTableEXT    glCopyColorSubTableEXT;
\ No newline at end of file
+pfglCopyColorSubTableEXT    glCopyColorSubTableEXT;
Index: DerelictGL/derelict/opengl/extension/ext/draw_range_elements.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/draw_range_elements.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/draw_range_elements.d	(working copy)
@@ -78,8 +78,8 @@
     GL_MAX_ELEMENTS_INDICES_EXT        = 0x80E9,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLuint, GLuint, GLsizei, GLenum, GLvoid*) pfglDrawRangeElementsEXT;
+}
 
-typedef void function(GLenum, GLuint, GLuint, GLsizei, GLenum, GLvoid*) pfglDrawRangeElementsEXT;
-
 pfglDrawRangeElementsEXT        glDrawRangeElementsEXT;
Index: DerelictGL/derelict/opengl/extension/ext/geometry_shader4.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/geometry_shader4.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/geometry_shader4.d	(working copy)
@@ -102,14 +102,14 @@
     GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT = 0x8DE1,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum,GLenum,GLuint,GLint) pfglFramebufferTextureEXT;
+alias void function(GLenum,GLenum,GLuint,GLint,GLenum) pfglFramebufferTextureFaceEXT;
+alias void function(GLenum,GLenum,GLuint,GLint,GLint) pfglFramebufferTextureLayerEXT;
+alias void function(GLuint,GLenum,GLint) pfglProgramParameteriEXT;
+}
 
-typedef void function(GLenum,GLenum,GLuint,GLint) pfglFramebufferTextureEXT;
-typedef void function(GLenum,GLenum,GLuint,GLint,GLenum) pfglFramebufferTextureFaceEXT;
-typedef void function(GLenum,GLenum,GLuint,GLint,GLint) pfglFramebufferTextureLayerEXT;
-typedef void function(GLuint,GLenum,GLint) pfglProgramParameteriEXT;
-
 pfglFramebufferTextureEXT           glFramebufferTextureEXT;
 pfglFramebufferTextureFaceEXT       glFramebufferTextureFaceEXT;
 pfglFramebufferTextureLayerEXT      glFramebufferTextureLayerEXT;
-pfglProgramParameteriEXT            glProgramParameteriEXT;
\ No newline at end of file
+pfglProgramParameteriEXT            glProgramParameteriEXT;
Index: DerelictGL/derelict/opengl/extension/ext/point_parameters.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/point_parameters.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/point_parameters.d	(working copy)
@@ -75,10 +75,10 @@
     }
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLfloat) pfglPointParameterfEXT;
+alias void function(GLenum, GLfloat*) pfglPointParameterfvEXT;
+}
 
-typedef void function(GLenum, GLfloat) pfglPointParameterfEXT;
-typedef void function(GLenum, GLfloat*) pfglPointParameterfvEXT;
-
 pfglPointParameterfEXT    glPointParameterfEXT;
-pfglPointParameterfvEXT   glPointParameterfvEXT;
\ No newline at end of file
+pfglPointParameterfvEXT   glPointParameterfvEXT;
Index: DerelictGL/derelict/opengl/extension/ext/depth_bounds_test.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/depth_bounds_test.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/depth_bounds_test.d	(working copy)
@@ -78,8 +78,8 @@
     GL_DEPTH_BOUNDS_EXT            = 0x8891,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLclampd, GLclampd) pfglDepthBoundsEXT;
+}
 
-typedef void function(GLclampd, GLclampd) pfglDepthBoundsEXT;
-
 pfglDepthBoundsEXT      glDepthBoundsEXT;
Index: DerelictGL/derelict/opengl/extension/ext/texture3D.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/texture3D.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/texture3D.d	(working copy)
@@ -87,10 +87,10 @@
     GL_MAX_3D_TEXTURE_SIZE_EXT        = 0x8073,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid*) pfglTexImage3DEXT;
+alias void function(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLvoid*) pfglTexSubImage3DEXT;
+}
 
-typedef void function(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid*) pfglTexImage3DEXT;
-typedef void function(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLvoid*) pfglTexSubImage3DEXT;
-
 pfglTexImage3DEXT       glTexImage3DEXT;
 pfglTexSubImage3DEXT    glTexSubImage3DEXT;
Index: DerelictGL/derelict/opengl/extension/ext/compiled_vertex_array.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/compiled_vertex_array.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/compiled_vertex_array.d	(working copy)
@@ -80,10 +80,10 @@
     GL_ARRAY_ELEMENT_LOCK_COUNT_EXT   = 0x81A9,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLint, GLsizei) pfglLockArraysEXT;
+alias void function() pfglUnlockArraysEXT;
+}
 
-typedef void function(GLint, GLsizei) pfglLockArraysEXT;
-typedef void function() pfglUnlockArraysEXT;
-
 pfglLockArraysEXT       glLockArraysEXT;
 pfglUnlockArraysEXT     glUnlockArraysEXT;
Index: DerelictGL/derelict/opengl/extension/ext/multi_draw_arrays.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/multi_draw_arrays.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/multi_draw_arrays.d	(working copy)
@@ -74,10 +74,10 @@
     }
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLint*, GLsizei*, GLsizei) pfglMultiDrawArraysEXT;
+alias void function(GLenum, GLsizei*, GLenum, GLvoid*, GLsizei) pfglMultiDrawElementsEXT;
+}
 
-typedef void function(GLenum, GLint*, GLsizei*, GLsizei) pfglMultiDrawArraysEXT;
-typedef void function(GLenum, GLsizei*, GLenum, GLvoid*, GLsizei) pfglMultiDrawElementsEXT;
-
 pfglMultiDrawArraysEXT      glMultiDrawArraysEXT;
-pfglMultiDrawElementsEXT    glMultiDrawElementsEXT;
\ No newline at end of file
+pfglMultiDrawElementsEXT    glMultiDrawElementsEXT;
Index: DerelictGL/derelict/opengl/extension/ext/multisample.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/multisample.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/multisample.d	(working copy)
@@ -99,10 +99,10 @@
     GL_MULTISAMPLE_BIT_EXT      = 0x20000000
 }
 
-extern(System):
+extern(System) {
+alias void function(GLclampf,GLboolean) pfglSampleMaskEXT;
+alias void function(GLenum) pfglSamplePatternEXT;
+}
 
-typedef void function(GLclampf,GLboolean) pfglSampleMaskEXT;
-typedef void function(GLenum) pfglSamplePatternEXT;
-
 pfglSampleMaskEXT           glSampleMaskEXT;
-pfglSamplePatternEXT        glSamplePatternEXT;
\ No newline at end of file
+pfglSamplePatternEXT        glSamplePatternEXT;
Index: DerelictGL/derelict/opengl/extension/ext/blend_minmax.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/blend_minmax.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/blend_minmax.d	(working copy)
@@ -80,8 +80,8 @@
     GL_BLEND_EQUATION_EXT             = 0x8009,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum) pfglBlendEquationEXT;
+}
 
-typedef void function(GLenum) pfglBlendEquationEXT;
-
 pfglBlendEquationEXT       glBlendEquationEXT;
Index: DerelictGL/derelict/opengl/extension/ext/framebuffer_blit.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/framebuffer_blit.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/framebuffer_blit.d	(working copy)
@@ -80,8 +80,8 @@
     GL_DRAW_FRAMEBUFFER_BINDING_EXT    = 0x8CAA,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) pfglBlitFramebufferEXT;
+}
 
-typedef void function(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) pfglBlitFramebufferEXT;
-
 pfglBlitFramebufferEXT      glBlitFramebufferEXT;
Index: DerelictGL/derelict/opengl/extension/ext/framebuffer_multisample.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/framebuffer_multisample.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/framebuffer_multisample.d	(working copy)
@@ -77,8 +77,8 @@
     GL_RENDERBUFFER_SAMPLES_EXT        = 0x8CAB
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLsizei, GLenum, GLsizei, GLsizei) pfglRenderbufferStorageMultisampleEXT;
+}
 
-typedef void function(GLenum, GLsizei, GLenum, GLsizei, GLsizei) pfglRenderbufferStorageMultisampleEXT;
-
 pfglRenderbufferStorageMultisampleEXT       glRenderbufferStorageMultisampleEXT;
Index: DerelictGL/derelict/opengl/extension/ext/texture_perturb_normal.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/texture_perturb_normal.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/texture_perturb_normal.d	(working copy)
@@ -78,8 +78,8 @@
     GL_TEXTURE_NORMAL_EXT      = 0x85AF,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum) pfglTextureNormalEXT;
+}
 
-typedef void function(GLenum) pfglTextureNormalEXT;
-
 pfglTextureNormalEXT        glTextureNormalEXT;
Index: DerelictGL/derelict/opengl/extension/ext/texture_integer.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/texture_integer.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/texture_integer.d	(working copy)
@@ -133,18 +133,18 @@
     GL_RGBA_INTEGER_MODE_EXT    = 0x8D9E,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLint,GLint,GLint,GLint) pfglClearColorIiEXT;
+alias void function(GLuint,GLuint,GLuint,GLuint) pfglClearColorIuiEXT;
+alias void function(GLenum,GLenum,GLint*) pfglGetTexParameterIivEXT;
+alias void function(GLenum,GLenum,GLuint*) pfglGetTexParameterIuivEXT;
+alias void function(GLenum,GLenum,GLint*) pfglTexParameterIivEXT;
+alias void function(GLenum,GLenum,GLuint*) pfglTexParameterIuivEXT;
+}
 
-typedef void function(GLint,GLint,GLint,GLint) pfglClearColorIiEXT;
-typedef void function(GLuint,GLuint,GLuint,GLuint) pfglClearColorIuiEXT;
-typedef void function(GLenum,GLenum,GLint*) pfglGetTexParameterIivEXT;
-typedef void function(GLenum,GLenum,GLuint*) pfglGetTexParameterIuivEXT;
-typedef void function(GLenum,GLenum,GLint*) pfglTexParameterIivEXT;
-typedef void function(GLenum,GLenum,GLuint*) pfglTexParameterIuivEXT;
-
 pfglClearColorIiEXT         glClearColorIiEXT;
 pfglClearColorIuiEXT        glClearColorIuiEXT;
 pfglGetTexParameterIivEXT   glGetTexParameterIivEXT;
 pfglGetTexParameterIuivEXT  glGetTexParameterIuivEXT;
 pfglTexParameterIivEXT      glTexParameterIivEXT;
-pfglTexParameterIuivEXT     glTexParameterIuivEXT;
\ No newline at end of file
+pfglTexParameterIuivEXT     glTexParameterIuivEXT;
Index: DerelictGL/derelict/opengl/extension/ext/texture_buffer_object.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/texture_buffer_object.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/texture_buffer_object.d	(working copy)
@@ -81,8 +81,8 @@
     GL_TEXTURE_BUFFER_FORMAT_EXT                = 0x8C2E,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum,GLenum,GLuint) pfglTexBufferEXT;
+}
 
-typedef void function(GLenum,GLenum,GLuint) pfglTexBufferEXT;
-
-pfglTexBufferEXT    glTexBufferEXT;
\ No newline at end of file
+pfglTexBufferEXT    glTexBufferEXT;
Index: DerelictGL/derelict/opengl/extension/ext/blend_color.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/blend_color.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/blend_color.d	(working copy)
@@ -81,8 +81,7 @@
     GL_BLEND_COLOR_EXT                = 0x8005,
 }
 
-extern(System):
-
-typedef void function(GLclampf, GLclampf, GLclampf, GLclampf) pfglBlendColorEXT;
-
+extern(System) {
+alias void function(GLclampf, GLclampf, GLclampf, GLclampf) pfglBlendColorEXT;
+}
 pfglBlendColorEXT       glBlendColorEXT;
Index: DerelictGL/derelict/opengl/extension/ext/draw_instanced.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/draw_instanced.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/draw_instanced.d	(working copy)
@@ -74,10 +74,10 @@
     }
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum,GLint,GLsizei,GLsizei) pfglDrawArraysInstancedEXT;
+alias void function(GLenum,GLsizei,GLenum,GLvoid*,GLsizei) pfglDrawElementsInstancedEXT;
+}
 
-typedef void function(GLenum,GLint,GLsizei,GLsizei) pfglDrawArraysInstancedEXT;
-typedef void function(GLenum,GLsizei,GLenum,GLvoid*,GLsizei) pfglDrawElementsInstancedEXT;
-
 pfglDrawArraysInstancedEXT      glDrawArraysInstancedEXT;
-pfglDrawElementsInstancedEXT    glDrawElementsInstancedEXT;
\ No newline at end of file
+pfglDrawElementsInstancedEXT    glDrawElementsInstancedEXT;
Index: DerelictGL/derelict/opengl/extension/ext/light_texture.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/light_texture.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/light_texture.d	(working copy)
@@ -89,12 +89,12 @@
     GL_TEXTURE_MATERIAL_PARAMETER_EXT = 0x8352,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum) pfglApplyTextureEXT;
+alias void function(GLenum) pfglTextureLightEXT;
+alias void function(GLenum, GLenum) pfglTextureMaterialEXT;
+}
 
-typedef void function(GLenum) pfglApplyTextureEXT;
-typedef void function(GLenum) pfglTextureLightEXT;
-typedef void function(GLenum, GLenum) pfglTextureMaterialEXT;
-
 pfglApplyTextureEXT     glApplyTextureEXT;
 pfglTextureLightEXT     glTextureLightEXT;
 pfglTextureMaterialEXT  glTextureMaterialEXT;
Index: DerelictGL/derelict/opengl/extension/ext/vertex_shader.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/vertex_shader.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/vertex_shader.d	(working copy)
@@ -268,51 +268,51 @@
     GL_LOCAL_CONSTANT_DATATYPE_EXT    = 0x87ED,
 }
 
-extern(System):
+extern(System) {
+alias void function() pfglBeginVertexShaderEXT;
+alias void function() pfglEndVertexShaderEXT;
+alias void function(GLuint) pfglBindVertexShaderEXT;
+alias GLuint function(GLuint) pfglGenVertexShadersEXT;
+alias void function(GLuint) pfglDeleteVertexShaderEXT;
+alias void function(GLenum,GLuint,GLuint) pfglShaderOp1EXT;
+alias void function(GLenum,GLuint,GLuint,GLuint) pfglShaderOp2EXT;
+alias void function(GLenum,GLuint,GLuint,GLuint,GLuint) pfglShaderOp3EXT;
+alias void function(GLuint,GLuint,GLenum,GLenum,GLenum,GLenum) pfglSwizzleEXT;
+alias void function(GLuint,GLuint,GLenum,GLenum,GLenum,GLenum) pfglWriteMaskEXT;
+alias void function(GLuint,GLuint,GLuint) pfglInsertComponentEXT;
+alias void function(GLuint,GLuint,GLuint) pfglExtractComponentEXT;
+alias GLuint function(GLenum,GLenum,GLenum,GLuint) pfglGenSymbolsEXT;
+alias void function(GLuint,GLenum,GLvoid*) pfglSetInvariantEXT;
+alias void function(GLuint,GLenum,GLvoid*) pfglSetLocalConstantEXT;
+alias void function(GLuint,GLbyte*) pfglVariantbvEXT;
+alias void function(GLuint,GLshort*) pfglVariantsvEXT;
+alias void function(GLuint,GLint*) pfglVariantivEXT;
+alias void function(GLuint,GLfloat*) pfglVariantfvEXT;
+alias void function(GLuint,GLdouble*) pfglVariantdvEXT;
+alias void function(GLuint,GLubyte*) pfglVariantubvEXT;
+alias void function(GLuint,GLushort*) pfglVariantusvEXT;
+alias void function(GLuint,GLuint*) pfglVariantuivEXT;
+alias void function(GLuint,GLenum,GLuint,GLvoid*) pfglVariantPointerEXT;
+alias void function(GLuint) pfglEnableVariantClientStateEXT;
+alias void function(GLuint) pfglDisableVariantClientStateEXT;
+alias GLuint function(GLenum,GLenum) pfglBindLightParameterEXT;
+alias GLuint function(GLenum,GLenum) pfglBindMaterialParameterEXT;
+alias GLuint function(GLenum,GLenum,GLenum) pfglBindTexGenParameterEXT;
+alias GLuint function(GLenum,GLenum) pfglBindTextureUnitParameterEXT;
+alias GLuint function(GLenum) pfglBindParameterEXT;
+alias GLboolean function(GLuint,GLenum) pfglIsVariantEnabledEXT;
+alias void function(GLuint,GLenum,GLboolean*) pfglGetVariantBooleanvEXT;
+alias void function(GLuint,GLenum,GLint*) pfglGetVariantIntegervEXT;
+alias void function(GLuint,GLenum,GLfloat*) pfglGetVariantFloatvEXT;
+alias void function(GLuint,GLenum,GLvoid*) pfglGetVariantPointervEXT;
+alias void function(GLuint,GLenum,GLboolean*) pfglGetInvariantBooleanvEXT;
+alias void function(GLuint,GLenum,GLint*) pfglGetInvariantIntegervEXT;
+alias void function(GLuint,GLenum,GLfloat*) pfglGetInvariantFloatvEXT;
+alias void function(GLuint,GLenum,GLboolean*) pfglGetLocalConstantBooleanvEXT;
+alias void function(GLuint,GLenum,GLint*) pfglGetLocalConstantIntegervEXT;
+alias void function(GLuint,GLenum,GLfloat*) pfglGetLocalConstantFloatvEXT;
+}
 
-typedef void function() pfglBeginVertexShaderEXT;
-typedef void function() pfglEndVertexShaderEXT;
-typedef void function(GLuint) pfglBindVertexShaderEXT;
-typedef GLuint function(GLuint) pfglGenVertexShadersEXT;
-typedef void function(GLuint) pfglDeleteVertexShaderEXT;
-typedef void function(GLenum,GLuint,GLuint) pfglShaderOp1EXT;
-typedef void function(GLenum,GLuint,GLuint,GLuint) pfglShaderOp2EXT;
-typedef void function(GLenum,GLuint,GLuint,GLuint,GLuint) pfglShaderOp3EXT;
-typedef void function(GLuint,GLuint,GLenum,GLenum,GLenum,GLenum) pfglSwizzleEXT;
-typedef void function(GLuint,GLuint,GLenum,GLenum,GLenum,GLenum) pfglWriteMaskEXT;
-typedef void function(GLuint,GLuint,GLuint) pfglInsertComponentEXT;
-typedef void function(GLuint,GLuint,GLuint) pfglExtractComponentEXT;
-typedef GLuint function(GLenum,GLenum,GLenum,GLuint) pfglGenSymbolsEXT;
-typedef void function(GLuint,GLenum,GLvoid*) pfglSetInvariantEXT;
-typedef void function(GLuint,GLenum,GLvoid*) pfglSetLocalConstantEXT;
-typedef void function(GLuint,GLbyte*) pfglVariantbvEXT;
-typedef void function(GLuint,GLshort*) pfglVariantsvEXT;
-typedef void function(GLuint,GLint*) pfglVariantivEXT;
-typedef void function(GLuint,GLfloat*) pfglVariantfvEXT;
-typedef void function(GLuint,GLdouble*) pfglVariantdvEXT;
-typedef void function(GLuint,GLubyte*) pfglVariantubvEXT;
-typedef void function(GLuint,GLushort*) pfglVariantusvEXT;
-typedef void function(GLuint,GLuint*) pfglVariantuivEXT;
-typedef void function(GLuint,GLenum,GLuint,GLvoid*) pfglVariantPointerEXT;
-typedef void function(GLuint) pfglEnableVariantClientStateEXT;
-typedef void function(GLuint) pfglDisableVariantClientStateEXT;
-typedef GLuint function(GLenum,GLenum) pfglBindLightParameterEXT;
-typedef GLuint function(GLenum,GLenum) pfglBindMaterialParameterEXT;
-typedef GLuint function(GLenum,GLenum,GLenum) pfglBindTexGenParameterEXT;
-typedef GLuint function(GLenum,GLenum) pfglBindTextureUnitParameterEXT;
-typedef GLuint function(GLenum) pfglBindParameterEXT;
-typedef GLboolean function(GLuint,GLenum) pfglIsVariantEnabledEXT;
-typedef void function(GLuint,GLenum,GLboolean*) pfglGetVariantBooleanvEXT;
-typedef void function(GLuint,GLenum,GLint*) pfglGetVariantIntegervEXT;
-typedef void function(GLuint,GLenum,GLfloat*) pfglGetVariantFloatvEXT;
-typedef void function(GLuint,GLenum,GLvoid*) pfglGetVariantPointervEXT;
-typedef void function(GLuint,GLenum,GLboolean*) pfglGetInvariantBooleanvEXT;
-typedef void function(GLuint,GLenum,GLint*) pfglGetInvariantIntegervEXT;
-typedef void function(GLuint,GLenum,GLfloat*) pfglGetInvariantFloatvEXT;
-typedef void function(GLuint,GLenum,GLboolean*) pfglGetLocalConstantBooleanvEXT;
-typedef void function(GLuint,GLenum,GLint*) pfglGetLocalConstantIntegervEXT;
-typedef void function(GLuint,GLenum,GLfloat*) pfglGetLocalConstantFloatvEXT;
-
 pfglBeginVertexShaderEXT            glBeginVertexShaderEXT;
 pfglEndVertexShaderEXT              glEndVertexShaderEXT;
 pfglBindVertexShaderEXT             glBindVertexShaderEXT;
@@ -354,4 +354,4 @@
 pfglGetInvariantFloatvEXT           glGetInvariantFloatvEXT;
 pfglGetLocalConstantBooleanvEXT     glGetLocalConstantBooleanvEXT;
 pfglGetLocalConstantIntegervEXT     glGetLocalConstantIntegervEXT;
-pfglGetLocalConstantFloatvEXT       glGetLocalConstantFloatvEXT;
\ No newline at end of file
+pfglGetLocalConstantFloatvEXT       glGetLocalConstantFloatvEXT;
Index: DerelictGL/derelict/opengl/extension/ext/gpu_shader4.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/gpu_shader4.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/gpu_shader4.d	(working copy)
@@ -168,43 +168,43 @@
     GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT  = 0x8DD8,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLuint,GLuint,GLchar*) pfglBindFragDataLocationEXT;
+alias GLint function(GLuint,GLchar*) pfglGetFragDataLocationEXT;
+alias void function(GLuint,GLint,GLuint*) pfglGetUniformuivEXT;
+alias void function(GLuint,GLenum,GLint*) pfglGetVertexAttribIivEXT;
+alias void function(GLuint,GLenum,GLuint*) pfglGetVertexAttribIuivEXT;
+alias void function(GLint,GLuint) pfglUniform1uiEXT;
+alias void function(GLint,GLsizei,GLuint*) pfglUniform1uivEXT;
+alias void function(GLint,GLuint,GLuint) pfglUniform2uiEXT;
+alias void function(GLint,GLsizei,GLuint*) pfglUniform2uivEXT;
+alias void function(GLint,GLuint,GLuint,GLuint) pfglUniform3uiEXT;
+alias void function(GLint,GLsizei,GLuint*) pfglUniform3uivEXT;
+alias void function(GLint,GLuint,GLuint,GLuint,GLuint) pfglUniform4uiEXT;
+alias void function(GLint,GLsizei,GLuint*) pfglUniform4uivEXT;
+alias void function(GLuint,GLint) pfglVertexAttribI1iEXT;
+alias void function(GLuint,GLint*) pfglVertexAttribI1ivEXT;
+alias void function(GLuint,GLuint) pfglVertexAttribI1uiEXT;
+alias void function(GLuint,GLuint*) pfglVertexAttribI1uivEXT;
+alias void function(GLuint,GLint,GLint) pfglVertexAttribI2iEXT;
+alias void function(GLuint,GLint*) pfglVertexAttribI2ivEXT;
+alias void function(GLuint,GLuint,GLuint) pfglVertexAttribI2uiEXT;
+alias void function(GLuint,GLuint*) pfglVertexAttribI2uivEXT;
+alias void function(GLuint,GLint,GLint,GLint) pfglVertexAttribI3iEXT;
+alias void function(GLuint,GLint*) pfglVertexAttribI3ivEXT;
+alias void function(GLuint,GLuint,GLuint,GLuint) pfglVertexAttribI3uiEXT;
+alias void function(GLuint,GLuint*) pfglVertexAttribI3uivEXT;
+alias void function(GLuint,GLbyte*) pfglVertexAttribI4bvEXT;
+alias void function(GLuint,GLint,GLint,GLint,GLint) pfglVertexAttribI4iEXT;
+alias void function(GLuint,GLint*) pfglVertexAttribI4ivEXT;
+alias void function(GLuint,GLshort*) pfglVertexAttribI4svEXT;
+alias void function(GLuint,GLubyte*) pfglVertexAttribI4ubvEXT;
+alias void function(GLuint,GLuint,GLuint,GLuint,GLuint) pfglVertexAttribI4uiEXT;
+alias void function(GLuint,GLuint*) pfglVertexAttribI4uivEXT;
+alias void function(GLuint,GLushort*) pfglVertexAttribI4usvEXT;
+alias void function(GLuint,GLint,GLenum,GLenum,GLsizei,GLvoid*) pfglVertexAttribIPointerEXT;
+}
 
-typedef void function(GLuint,GLuint,GLchar*) pfglBindFragDataLocationEXT;
-typedef GLint function(GLuint,GLchar*) pfglGetFragDataLocationEXT;
-typedef void function(GLuint,GLint,GLuint*) pfglGetUniformuivEXT;
-typedef void function(GLuint,GLenum,GLint*) pfglGetVertexAttribIivEXT;
-typedef void function(GLuint,GLenum,GLuint*) pfglGetVertexAttribIuivEXT;
-typedef void function(GLint,GLuint) pfglUniform1uiEXT;
-typedef void function(GLint,GLsizei,GLuint*) pfglUniform1uivEXT;
-typedef void function(GLint,GLuint,GLuint) pfglUniform2uiEXT;
-typedef void function(GLint,GLsizei,GLuint*) pfglUniform2uivEXT;
-typedef void function(GLint,GLuint,GLuint,GLuint) pfglUniform3uiEXT;
-typedef void function(GLint,GLsizei,GLuint*) pfglUniform3uivEXT;
-typedef void function(GLint,GLuint,GLuint,GLuint,GLuint) pfglUniform4uiEXT;
-typedef void function(GLint,GLsizei,GLuint*) pfglUniform4uivEXT;
-typedef void function(GLuint,GLint) pfglVertexAttribI1iEXT;
-typedef void function(GLuint,GLint*) pfglVertexAttribI1ivEXT;
-typedef void function(GLuint,GLuint) pfglVertexAttribI1uiEXT;
-typedef void function(GLuint,GLuint*) pfglVertexAttribI1uivEXT;
-typedef void function(GLuint,GLint,GLint) pfglVertexAttribI2iEXT;
-typedef void function(GLuint,GLint*) pfglVertexAttribI2ivEXT;
-typedef void function(GLuint,GLuint,GLuint) pfglVertexAttribI2uiEXT;
-typedef void function(GLuint,GLuint*) pfglVertexAttribI2uivEXT;
-typedef void function(GLuint,GLint,GLint,GLint) pfglVertexAttribI3iEXT;
-typedef void function(GLuint,GLint*) pfglVertexAttribI3ivEXT;
-typedef void function(GLuint,GLuint,GLuint,GLuint) pfglVertexAttribI3uiEXT;
-typedef void function(GLuint,GLuint*) pfglVertexAttribI3uivEXT;
-typedef void function(GLuint,GLbyte*) pfglVertexAttribI4bvEXT;
-typedef void function(GLuint,GLint,GLint,GLint,GLint) pfglVertexAttribI4iEXT;
-typedef void function(GLuint,GLint*) pfglVertexAttribI4ivEXT;
-typedef void function(GLuint,GLshort*) pfglVertexAttribI4svEXT;
-typedef void function(GLuint,GLubyte*) pfglVertexAttribI4ubvEXT;
-typedef void function(GLuint,GLuint,GLuint,GLuint,GLuint) pfglVertexAttribI4uiEXT;
-typedef void function(GLuint,GLuint*) pfglVertexAttribI4uivEXT;
-typedef void function(GLuint,GLushort*) pfglVertexAttribI4usvEXT;
-typedef void function(GLuint,GLint,GLenum,GLenum,GLsizei,GLvoid*) pfglVertexAttribIPointerEXT;
-
 pfglBindFragDataLocationEXT             glBindFragDataLocationEXT;
 pfglGetFragDataLocationEXT              glGetFragDataLocationEXT;
 pfglGetUniformuivEXT                    glGetUniformuivEXT;
@@ -238,4 +238,4 @@
 pfglVertexAttribI4uiEXT                 glVertexAttribI4uiEXT;
 pfglVertexAttribI4uivEXT                glVertexAttribI4uivEXT;
 pfglVertexAttribI4usvEXT                glVertexAttribI4usvEXT;
-pfglVertexAttribIPointerEXT             glVertexAttribIPointerEXT;
\ No newline at end of file
+pfglVertexAttribIPointerEXT             glVertexAttribIPointerEXT;
Index: DerelictGL/derelict/opengl/extension/ext/timer_query.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/timer_query.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/timer_query.d	(working copy)
@@ -82,10 +82,10 @@
     GL_TIME_ELAPSED_EXT = 0x88BF
 }
 
-extern(System):
+extern(System) {
+alias void function(GLuint, GLenum, GLint64EXT*) pfglGetQueryObjecti64vEXT;
+alias void function(GLuint, GLenum, GLint64EXT*) pfglGetQueryObjectui64vEXT;
+}
 
-typedef void function(GLuint, GLenum, GLint64EXT*) pfglGetQueryObjecti64vEXT;
-typedef void function(GLuint, GLenum, GLint64EXT*) pfglGetQueryObjectui64vEXT;
-
 pfglGetQueryObjecti64vEXT       glGetQueryObjecti64vEXT;
 pfglGetQueryObjectui64vEXT      glGetQueryObjectui64vEXT;
Index: DerelictGL/derelict/opengl/extension/ext/framebuffer_object.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/framebuffer_object.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/framebuffer_object.d	(working copy)
@@ -158,26 +158,26 @@
     GL_INVALID_FRAMEBUFFER_OPERATION_EXT                   = 0x0506,
 }
 
-extern(System):
+extern(System) {
+alias GLboolean function(GLuint) pfglIsRenderbufferEXT;
+alias GLvoid function(GLenum, GLuint) pfglBindRenderbufferEXT;
+alias GLvoid function(GLsizei, GLuint*) pfglDeleteRenderbuffersEXT;
+alias GLvoid function(GLsizei, GLuint*) pfglGenRenderbuffersEXT;
+alias GLvoid function(GLenum, GLenum, GLsizei, GLsizei) pfglRenderbufferStorageEXT;
+alias GLvoid function(GLenum, GLenum, GLint*) pfglGetRenderbufferParameterivEXT;
+alias GLboolean function(GLuint) pfglIsFramebufferEXT;
+alias GLvoid function(GLenum, GLuint) pfglBindFramebufferEXT;
+alias GLvoid function(GLsizei, GLuint*) pfglDeleteFramebuffersEXT;
+alias GLvoid function(GLsizei, GLuint*) pfglGenFramebuffersEXT;
+alias GLenum function(GLenum) pfglCheckFramebufferStatusEXT;
+alias GLvoid function(GLenum, GLenum, GLenum, GLuint, GLint) pfglFramebufferTexture1DEXT;
+alias GLvoid function(GLenum, GLenum, GLenum, GLuint, GLint) pfglFramebufferTexture2DEXT;
+alias GLvoid function(GLenum, GLenum, GLenum, GLuint, GLint, GLint) pfglFramebufferTexture3DEXT;
+alias GLvoid function(GLenum, GLenum, GLenum, GLuint) pfglFramebufferRenderbufferEXT;
+alias GLvoid function(GLenum, GLenum, GLenum, GLint*) pfglGetFramebufferAttachmentParameterivEXT;
+alias GLvoid function(GLenum) pfglGenerateMipmapEXT;
+}
 
-typedef GLboolean function(GLuint) pfglIsRenderbufferEXT;
-typedef GLvoid function(GLenum, GLuint) pfglBindRenderbufferEXT;
-typedef GLvoid function(GLsizei, GLuint*) pfglDeleteRenderbuffersEXT;
-typedef GLvoid function(GLsizei, GLuint*) pfglGenRenderbuffersEXT;
-typedef GLvoid function(GLenum, GLenum, GLsizei, GLsizei) pfglRenderbufferStorageEXT;
-typedef GLvoid function(GLenum, GLenum, GLint*) pfglGetRenderbufferParameterivEXT;
-typedef GLboolean function(GLuint) pfglIsFramebufferEXT;
-typedef GLvoid function(GLenum, GLuint) pfglBindFramebufferEXT;
-typedef GLvoid function(GLsizei, GLuint*) pfglDeleteFramebuffersEXT;
-typedef GLvoid function(GLsizei, GLuint*) pfglGenFramebuffersEXT;
-typedef GLenum function(GLenum) pfglCheckFramebufferStatusEXT;
-typedef GLvoid function(GLenum, GLenum, GLenum, GLuint, GLint) pfglFramebufferTexture1DEXT;
-typedef GLvoid function(GLenum, GLenum, GLenum, GLuint, GLint) pfglFramebufferTexture2DEXT;
-typedef GLvoid function(GLenum, GLenum, GLenum, GLuint, GLint, GLint) pfglFramebufferTexture3DEXT;
-typedef GLvoid function(GLenum, GLenum, GLenum, GLuint) pfglFramebufferRenderbufferEXT;
-typedef GLvoid function(GLenum, GLenum, GLenum, GLint*) pfglGetFramebufferAttachmentParameterivEXT;
-typedef GLvoid function(GLenum) pfglGenerateMipmapEXT;
-
 pfglIsRenderbufferEXT                       glIsRenderbufferEXT;
 pfglBindRenderbufferEXT                     glBindRenderbufferEXT;
 pfglDeleteRenderbuffersEXT                  glDeleteRenderbuffersEXT;
Index: DerelictGL/derelict/opengl/extension/ext/pixel_transform.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/pixel_transform.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/pixel_transform.d	(working copy)
@@ -91,13 +91,12 @@
     GL_PIXEL_TRANSFORM_2D_MATRIX_EXT           = 0x8338,
 }
 
-extern(System):
-
-typedef void function(GLenum, GLenum, GLint) pfglPixelTransformParameteriEXT;
-typedef void function(GLenum, GLenum, GLfloat) pfglPixelTransformParameterfEXT;
-typedef void function(GLenum, GLenum, GLint*) pfglPixelTransformParameterivEXT;
-typedef void function(GLenum, GLenum, GLfloat*) pfglPixelTransformParameterfvEXT;
-
+extern(System) {
+alias void function(GLenum, GLenum, GLint) pfglPixelTransformParameteriEXT;
+alias void function(GLenum, GLenum, GLfloat) pfglPixelTransformParameterfEXT;
+alias void function(GLenum, GLenum, GLint*) pfglPixelTransformParameterivEXT;
+alias void function(GLenum, GLenum, GLfloat*) pfglPixelTransformParameterfvEXT;
+}
 pfglPixelTransformParameteriEXT     glPixelTransformParameteriEXT;
 pfglPixelTransformParameterfEXT     glPixelTransformParameterfEXT;
 pfglPixelTransformParameterivEXT    glPixelTransformParameterivEXT;
Index: DerelictGL/derelict/opengl/extension/ext/convolution.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/convolution.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/convolution.d	(working copy)
@@ -120,22 +120,22 @@
     GL_POST_CONVOLUTION_ALPHA_BIAS_EXT     = 0x8023,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLenum, GLsizei, GLenum, GLenum, GLvoid*) pfglConvolutionFilter1DEXT;
+alias void function(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*) pfglConvolutionFilter2DEXT;
+alias void function(GLenum, GLenum, GLfloat) pfglConvolutionParameterfEXT;
+alias void function(GLenum, GLenum, GLfloat*) pfglConvolutionParameterfvEXT;
+alias void function(GLenum, GLenum, GLint) pfglConvolutionParameteriEXT;
+alias void function(GLenum, GLenum, GLint*) pfglConvolutionParameterivEXT;
+alias void function(GLenum, GLenum, GLint, GLint, GLsizei) pfglCopyConvolutionFilter1DEXT;
+alias void function(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei) pfglCopyConvolutionFilter2DEXT;
+alias void function(GLenum, GLenum, GLenum, GLvoid*) pfglGetConvolutionFilterEXT;
+alias void function(GLenum, GLenum, GLfloat*) pfglGetConvolutionParameterfvEXT;
+alias void function(GLenum, GLenum, GLint*) pfglGetConvolutionParameterivEXT;
+alias void function(GLenum, GLenum, GLenum, GLvoid*, GLvoid*, GLvoid*) pfglGetSeparableFilterEXT;
+alias void function(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*, GLvoid*) pfglSeparableFilter2DEXT;
+}
 
-typedef void function(GLenum, GLenum, GLsizei, GLenum, GLenum, GLvoid*) pfglConvolutionFilter1DEXT;
-typedef void function(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*) pfglConvolutionFilter2DEXT;
-typedef void function(GLenum, GLenum, GLfloat) pfglConvolutionParameterfEXT;
-typedef void function(GLenum, GLenum, GLfloat*) pfglConvolutionParameterfvEXT;
-typedef void function(GLenum, GLenum, GLint) pfglConvolutionParameteriEXT;
-typedef void function(GLenum, GLenum, GLint*) pfglConvolutionParameterivEXT;
-typedef void function(GLenum, GLenum, GLint, GLint, GLsizei) pfglCopyConvolutionFilter1DEXT;
-typedef void function(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei) pfglCopyConvolutionFilter2DEXT;
-typedef void function(GLenum, GLenum, GLenum, GLvoid*) pfglGetConvolutionFilterEXT;
-typedef void function(GLenum, GLenum, GLfloat*) pfglGetConvolutionParameterfvEXT;
-typedef void function(GLenum, GLenum, GLint*) pfglGetConvolutionParameterivEXT;
-typedef void function(GLenum, GLenum, GLenum, GLvoid*, GLvoid*, GLvoid*) pfglGetSeparableFilterEXT;
-typedef void function(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*, GLvoid*) pfglSeparableFilter2DEXT;
-
 pfglConvolutionFilter1DEXT          glConvolutionFilter1DEXT;
 pfglConvolutionFilter2DEXT          glConvolutionFilter2DEXT;
 pfglConvolutionParameterfEXT        glConvolutionParameterfEXT;
Index: DerelictGL/derelict/opengl/extension/ext/vertex_weighting.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/vertex_weighting.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/vertex_weighting.d	(working copy)
@@ -93,12 +93,12 @@
     GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT  = 0x8510,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLfloat) pfglVertexWeightfEXT;
+alias void function(GLfloat*) pfglVertexWeightfvEXT;
+alias void function(GLsizei,GLenum,GLsizei,GLvoid*) pfglVertexWeightPointerEXT;
+}
 
-typedef void function(GLfloat) pfglVertexWeightfEXT;
-typedef void function(GLfloat*) pfglVertexWeightfvEXT;
-typedef void function(GLsizei,GLenum,GLsizei,GLvoid*) pfglVertexWeightPointerEXT;
-
 pfglVertexWeightfEXT        glVertexWeightfEXT;
 pfglVertexWeightfvEXT       glVertexWeightfvEXT;
-pfglVertexWeightPointerEXT  glVertexWeightPointerEXT;
\ No newline at end of file
+pfglVertexWeightPointerEXT  glVertexWeightPointerEXT;
Index: DerelictGL/derelict/opengl/extension/ext/blend_func_separate.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/blend_func_separate.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/blend_func_separate.d	(working copy)
@@ -80,8 +80,8 @@
     GL_BLEND_SRC_ALPHA_EXT            = 0x80CB,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLenum, GLenum, GLenum) pfglBlendFuncSeparateEXT;
+}
 
-typedef void function(GLenum, GLenum, GLenum, GLenum) pfglBlendFuncSeparateEXT;
-
 pfglBlendFuncSeparateEXT    glBlendFuncSeparateEXT;
Index: DerelictGL/derelict/opengl/extension/ext/draw_buffers2.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/draw_buffers2.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/draw_buffers2.d	(working copy)
@@ -82,18 +82,18 @@
     }
 }
 
-extern(System):
+extern(System) {
+alias void function(GLuint,GLboolean,GLboolean,GLboolean,GLboolean) pfglColorMaskIndexedEXT;
+alias void function(GLenum,GLuint) pfglDisableIndexedEXT;
+alias void function(GLenum,GLuint) pfglEnableIndexedEXT;
+alias void function(GLenum,GLuint,GLboolean*) pfglGetBooleanIndexedvEXT;
+alias void function(GLenum,GLuint,GLint*) pfglGetIntegerIndexedvEXT;
+alias GLboolean function(GLenum,GLuint) pfglIsEnabledIndexedEXT;
+}
 
-typedef void function(GLuint,GLboolean,GLboolean,GLboolean,GLboolean) pfglColorMaskIndexedEXT;
-typedef void function(GLenum,GLuint) pfglDisableIndexedEXT;
-typedef void function(GLenum,GLuint) pfglEnableIndexedEXT;
-typedef void function(GLenum,GLuint,GLboolean*) pfglGetBooleanIndexedvEXT;
-typedef void function(GLenum,GLuint,GLint*) pfglGetIntegerIndexedvEXT;
-typedef GLboolean function(GLenum,GLuint) pfglIsEnabledIndexedEXT;
-
 pfglColorMaskIndexedEXT         glColorMaskIndexedEXT;
 pfglDisableIndexedEXT           glDisableIndexedEXT;
 pfglEnableIndexedEXT            glEnableIndexedEXT;
 pfglGetBooleanIndexedvEXT       glGetBooleanIndexedvEXT;
 pfglGetIntegerIndexedvEXT       glGetIntegerIndexedvEXT;
-pfglIsEnabledIndexedEXT         glIsEnabledIndexedEXT;
\ No newline at end of file
+pfglIsEnabledIndexedEXT         glIsEnabledIndexedEXT;
Index: DerelictGL/derelict/opengl/extension/ext/stencil_two_side.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/stencil_two_side.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/stencil_two_side.d	(working copy)
@@ -78,8 +78,8 @@
     GL_ACTIVE_STENCIL_FACE_EXT     = 0x8911,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum) pfglActiveStencilFaceEXT;
+}
 
-typedef void function(GLenum) pfglActiveStencilFaceEXT;
-
 pfglActiveStencilFaceEXT    glActiveStencilFaceEXT;
Index: DerelictGL/derelict/opengl/extension/ext/scene_marker.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/scene_marker.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/scene_marker.d	(working copy)
@@ -74,10 +74,10 @@
     }
 }
 
-extern(System):
+extern(System) {
+alias void function() pfglBeginSceneEXT;
+alias void function() pfglEndSceneEXT;
+}
 
-typedef void function() pfglBeginSceneEXT;
-typedef void function() pfglEndSceneEXT;
-
 pfglBeginSceneEXT   glBeginSceneEXT;
-pfglEndSceneEXT     glEndSceneEXT;
\ No newline at end of file
+pfglEndSceneEXT     glEndSceneEXT;
Index: DerelictGL/derelict/opengl/extension/ext/bindable_uniform.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/bindable_uniform.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/bindable_uniform.d	(working copy)
@@ -86,12 +86,11 @@
     GL_UNIFORM_BUFFER_BINDING_EXT           = 0x8DEF,
 }
 
-extern(System):
-
-typedef void function(GLuint, GLint, GLuint) pfglUniformBufferEXT;
-typedef GLint function(GLuint, GLint) pfglGetUniformBufferSizeEXT;
-typedef GLintptr function(GLuint, GLint) pfglGetUniformOffsetEXT;
-
+extern(System) {
+alias void function(GLuint, GLint, GLuint) pfglUniformBufferEXT;
+alias GLint function(GLuint, GLint) pfglGetUniformBufferSizeEXT;
+alias GLintptr function(GLuint, GLint) pfglGetUniformOffsetEXT;
+}
 pfglUniformBufferEXT            glUniformBufferEXT;
 pfglGetUniformBufferSizeEXT     glGetUniformBufferSizeEXT;
 pfglGetUniformOffsetEXT         glGetUniformOffsetEXT;
Index: DerelictGL/derelict/opengl/extension/ext/coordinate_frame.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/coordinate_frame.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/coordinate_frame.d	(working copy)
@@ -92,10 +92,10 @@
     GL_MAP2_BINORMAL_EXT            = 0x8447,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum,GLsizei,GLvoid*) pfglBinormalPointerEXT;
+alias void function(GLenum,GLsizei,GLvoid*) pfglTangentPointerEXT;
+}
 
-typedef void function(GLenum,GLsizei,GLvoid*) pfglBinormalPointerEXT;
-typedef void function(GLenum,GLsizei,GLvoid*) pfglTangentPointerEXT;
-
 pfglBinormalPointerEXT          glBinormalPointerEXT;
-pfglTangentPointerEXT           glTangentPointerEXT;
\ No newline at end of file
+pfglTangentPointerEXT           glTangentPointerEXT;
Index: DerelictGL/derelict/opengl/extension/ext/fog_coord.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/fog_coord.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/fog_coord.d	(working copy)
@@ -92,16 +92,16 @@
     GL_FOG_COORDINATE_ARRAY_EXT            = 0x8457,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLfloat) pfglFogCoordfEXT;
+alias void function(GLfloat*) pfglFogCoordfvEXT;
+alias void function(GLdouble) pfglFogCoorddEXT;
+alias void function(GLdouble*) pfglFogCoorddvEXT;
+alias void function(GLenum, GLsizei, GLvoid*) pfglFogCoordPointerEXT;
+}
 
-typedef void function(GLfloat) pfglFogCoordfEXT;
-typedef void function(GLfloat*) pfglFogCoordfvEXT;
-typedef void function(GLdouble) pfglFogCoorddEXT;
-typedef void function(GLdouble*) pfglFogCoorddvEXT;
-typedef void function(GLenum, GLsizei, GLvoid*) pfglFogCoordPointerEXT;
-
 pfglFogCoordfEXT            glFogCoordfEXT;
 pfglFogCoordfvEXT           glFogCoordfvEXT;
 pfglFogCoorddEXT            glFogCoorddEXT;
 pfglFogCoorddvEXT           glFogCoorddvEXT;
-pfglFogCoordPointerEXT      glFogCoordPointerEXT;
\ No newline at end of file
+pfglFogCoordPointerEXT      glFogCoordPointerEXT;
Index: DerelictGL/derelict/opengl/extension/ext/stencil_clear_tag.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/stencil_clear_tag.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/stencil_clear_tag.d	(working copy)
@@ -78,8 +78,8 @@
     GL_STENCIL_CLEAR_TAG_VALUE_EXT = 0x88F3,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLsizei, GLuint) pfglStencilClearTagEXT;
+}
 
-typedef void function(GLsizei, GLuint) pfglStencilClearTagEXT;
-
 pfglStencilClearTagEXT glStencilClearTagEXT;
Index: DerelictGL/derelict/opengl/extension/ext/gpu_program_parameters.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/gpu_program_parameters.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/gpu_program_parameters.d	(working copy)
@@ -74,10 +74,10 @@
     }
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLuint, GLsizei, GLfloat*) pfglProgramEnvParameters4fvEXT;
+alias void function(GLenum, GLuint, GLsizei, GLfloat*) pfglProgramLocalParameters4fvEXT;
+}
 
-typedef void function(GLenum, GLuint, GLsizei, GLfloat*) pfglProgramEnvParameters4fvEXT;
-typedef void function(GLenum, GLuint, GLsizei, GLfloat*) pfglProgramLocalParameters4fvEXT;
-
 pfglProgramEnvParameters4fvEXT      glProgramEnvParameters4fvEXT;
-pfglProgramLocalParameters4fvEXT    glProgramLocalParameters4fvEXT;
\ No newline at end of file
+pfglProgramLocalParameters4fvEXT    glProgramLocalParameters4fvEXT;
Index: DerelictGL/derelict/opengl/extension/ext/blend_equation_separate.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/blend_equation_separate.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/blend_equation_separate.d	(working copy)
@@ -78,8 +78,8 @@
     GL_BLEND_EQUATION_ALPHA_EXT    = 0x883D,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLenum) pfglBlendEquationSeparateEXT;
+}
 
-typedef void function(GLenum, GLenum) pfglBlendEquationSeparateEXT;
-
 pfglBlendEquationSeparateEXT    glBlendEquationSeparateEXT;
Index: DerelictGL/derelict/opengl/extension/ext/paletted_texture.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/paletted_texture.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/paletted_texture.d	(working copy)
@@ -89,13 +89,13 @@
     GL_TEXTURE_INDEX_SIZE_EXT         = 0x80ED,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLenum, GLsizei, GLenum, GLenum, GLvoid*) pfglColorTableEXT;
+alias void function(GLenum, GLenum, GLenum, GLvoid*) pfglGetColorTableEXT;
+alias void function(GLenum, GLenum, GLint*) pfglGetColorTableParameterivEXT;
+alias void function(GLenum, GLenum, GLfloat*) pfglGetColorTableParameterfvEXT;
+}
 
-typedef void function(GLenum, GLenum, GLsizei, GLenum, GLenum, GLvoid*) pfglColorTableEXT;
-typedef void function(GLenum, GLenum, GLenum, GLvoid*) pfglGetColorTableEXT;
-typedef void function(GLenum, GLenum, GLint*) pfglGetColorTableParameterivEXT;
-typedef void function(GLenum, GLenum, GLfloat*) pfglGetColorTableParameterfvEXT;
-
 pfglColorTableEXT               glColorTableEXT;
 pfglGetColorTableEXT            glGetColorTableEXT;
 pfglGetColorTableParameterivEXT glGetColorTableParameterivEXT;
Index: DerelictGL/derelict/opengl/extension/ext/secondary_color.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/secondary_color.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/secondary_color.d	(working copy)
@@ -115,26 +115,26 @@
     GL_SECONDARY_COLOR_ARRAY_EXT           = 0x845E,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLbyte, GLbyte, GLbyte) pfglSecondaryColor3bEXT;
+alias void function(GLbyte*) pfglSecondaryColor3bvEXT;
+alias void function(GLdouble, GLdouble, GLdouble) pfglSecondaryColor3dEXT;
+alias void function(GLdouble*) pfglSecondaryColor3dvEXT;
+alias void function(GLfloat, GLfloat, GLfloat) pfglSecondaryColor3fEXT;
+alias void function(GLfloat*) pfglSecondaryColor3fvEXT;
+alias void function(GLint, GLint, GLint) pfglSecondaryColor3iEXT;
+alias void function(GLint*) pfglSecondaryColor3ivEXT;
+alias void function(GLshort, GLshort, GLshort) pfglSecondaryColor3sEXT;
+alias void function(GLshort*) pfglSecondaryColor3svEXT;
+alias void function(GLubyte, GLubyte, GLubyte) pfglSecondaryColor3ubEXT;
+alias void function(GLubyte*) pfglSecondaryColor3ubvEXT;
+alias void function(GLuint, GLuint, GLuint) pfglSecondaryColor3uiEXT;
+alias void function(GLuint*) pfglSecondaryColor3uivEXT;
+alias void function(GLushort, GLushort, GLushort) pfglSecondaryColor3usEXT;
+alias void function(GLushort*) pfglSecondaryColor3usvEXT;
+alias void function(GLint, GLenum, GLsizei, GLvoid*) pfglSecondaryColorPointerEXT;
+}
 
-typedef void function(GLbyte, GLbyte, GLbyte) pfglSecondaryColor3bEXT;
-typedef void function(GLbyte*) pfglSecondaryColor3bvEXT;
-typedef void function(GLdouble, GLdouble, GLdouble) pfglSecondaryColor3dEXT;
-typedef void function(GLdouble*) pfglSecondaryColor3dvEXT;
-typedef void function(GLfloat, GLfloat, GLfloat) pfglSecondaryColor3fEXT;
-typedef void function(GLfloat*) pfglSecondaryColor3fvEXT;
-typedef void function(GLint, GLint, GLint) pfglSecondaryColor3iEXT;
-typedef void function(GLint*) pfglSecondaryColor3ivEXT;
-typedef void function(GLshort, GLshort, GLshort) pfglSecondaryColor3sEXT;
-typedef void function(GLshort*) pfglSecondaryColor3svEXT;
-typedef void function(GLubyte, GLubyte, GLubyte) pfglSecondaryColor3ubEXT;
-typedef void function(GLubyte*) pfglSecondaryColor3ubvEXT;
-typedef void function(GLuint, GLuint, GLuint) pfglSecondaryColor3uiEXT;
-typedef void function(GLuint*) pfglSecondaryColor3uivEXT;
-typedef void function(GLushort, GLushort, GLushort) pfglSecondaryColor3usEXT;
-typedef void function(GLushort*) pfglSecondaryColor3usvEXT;
-typedef void function(GLint, GLenum, GLsizei, GLvoid*) pfglSecondaryColorPointerEXT;
-
 pfglSecondaryColor3bEXT         glSecondaryColor3bEXT;
 pfglSecondaryColor3bvEXT        glSecondaryColor3bvEXT;
 pfglSecondaryColor3dEXT         glSecondaryColor3dEXT;
Index: DerelictGL/derelict/opengl/extension/ext/fragment_lighting.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/fragment_lighting.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/fragment_lighting.d	(working copy)
@@ -124,27 +124,27 @@
     GL_FRAGMENT_LIGHT7_EXT                              = 0x8413,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum,GLenum) pfglFragmentColorMaterialEXT;
+alias void function(GLenum,GLfloat) pfglFragmentLightModelfEXT;
+alias void function(GLenum,GLfloat*) pfglFragmentLightModelfvEXT;
+alias void function(GLenum,GLint) pfglFragmentLightModeliEXT;
+alias void function(GLenum,GLint*) pfglFragmentLightModelivEXT;
+alias void function(GLenum,GLenum,GLfloat) pfglFragmentLightfEXT;
+alias void function(GLenum,GLenum,GLfloat*) pfglFragmentLightfvEXT;
+alias void function(GLenum,GLenum,GLint) pfglFragmentLightiEXT;
+alias void function(GLenum,GLenum,GLint*) pfglFragmentLightivEXT;
+alias void function(GLenum,GLenum,GLfloat) pfglFragmentMaterialfEXT;
+alias void function(GLenum,GLenum,GLfloat*) pfglFragmentMaterialfvEXT;
+alias void function(GLenum,GLenum,GLint) pfglFragmentMaterialiEXT;
+alias void function(GLenum,GLenum,GLint*) pfglFragmentMaterialivEXT;
+alias void function(GLenum,GLenum,GLfloat*) pfglGetFragmentLightfvEXT;
+alias void function(GLenum,GLenum,GLint*) pfglGetFragmentLightivEXT;
+alias void function(GLenum,GLenum,GLfloat*) pfglGetFragmentMaterialfvEXT;
+alias void function(GLenum,GLenum,GLint*) pfglGetFragmentMaterialivEXT;
+alias void function(GLenum,GLint) pfglLightEnviEXT;
+}
 
-typedef void function(GLenum,GLenum) pfglFragmentColorMaterialEXT;
-typedef void function(GLenum,GLfloat) pfglFragmentLightModelfEXT;
-typedef void function(GLenum,GLfloat*) pfglFragmentLightModelfvEXT;
-typedef void function(GLenum,GLint) pfglFragmentLightModeliEXT;
-typedef void function(GLenum,GLint*) pfglFragmentLightModelivEXT;
-typedef void function(GLenum,GLenum,GLfloat) pfglFragmentLightfEXT;
-typedef void function(GLenum,GLenum,GLfloat*) pfglFragmentLightfvEXT;
-typedef void function(GLenum,GLenum,GLint) pfglFragmentLightiEXT;
-typedef void function(GLenum,GLenum,GLint*) pfglFragmentLightivEXT;
-typedef void function(GLenum,GLenum,GLfloat) pfglFragmentMaterialfEXT;
-typedef void function(GLenum,GLenum,GLfloat*) pfglFragmentMaterialfvEXT;
-typedef void function(GLenum,GLenum,GLint) pfglFragmentMaterialiEXT;
-typedef void function(GLenum,GLenum,GLint*) pfglFragmentMaterialivEXT;
-typedef void function(GLenum,GLenum,GLfloat*) pfglGetFragmentLightfvEXT;
-typedef void function(GLenum,GLenum,GLint*) pfglGetFragmentLightivEXT;
-typedef void function(GLenum,GLenum,GLfloat*) pfglGetFragmentMaterialfvEXT;
-typedef void function(GLenum,GLenum,GLint*) pfglGetFragmentMaterialivEXT;
-typedef void function(GLenum,GLint) pfglLightEnviEXT;
-
 pfglFragmentColorMaterialEXT            glFragmentColorMaterialEXT;
 pfglFragmentLightModelfEXT              glFragmentLightModelfEXT;
 pfglFragmentLightModelfvEXT             glFragmentLightModelfvEXT;
@@ -162,4 +162,4 @@
 pfglGetFragmentLightivEXT               glGetFragmentLightivEXT;
 pfglGetFragmentMaterialfvEXT            glGetFragmentMaterialfvEXT;
 pfglGetFragmentMaterialivEXT            glGetFragmentMaterialivEXT;
-pfglLightEnviEXT                        glLightEnviEXT;
\ No newline at end of file
+pfglLightEnviEXT                        glLightEnviEXT;
Index: DerelictGL/derelict/opengl/extension/ext/cull_vertex.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ext/cull_vertex.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ext/cull_vertex.d	(working copy)
@@ -81,10 +81,10 @@
     GL_CULL_VERTEX_OBJECT_POSITION_EXT = 0x81AC,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLdouble*) pfglCullParameterdvEXT;
+alias void function(GLenum, GLfloat*) pfglCullParameterfvEXT;
+}
 
-typedef void function(GLenum, GLdouble*) pfglCullParameterdvEXT;
-typedef void function(GLenum, GLfloat*) pfglCullParameterfvEXT;
-
 pfglCullParameterdvEXT      glCullParameterdvEXT;
 pfglCullParameterfvEXT      glCullParameterfvEXT;
Index: DerelictGL/derelict/opengl/extension/nv/parameter_buffer_object.d
===================================================================
--- DerelictGL/derelict/opengl/extension/nv/parameter_buffer_object.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/nv/parameter_buffer_object.d	(working copy)
@@ -76,12 +76,12 @@
     }
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLuint, GLuint, GLsizei, GLfloat*) pfglProgramBufferParametersfvNV;
+alias void function(GLenum, GLuint, GLuint, GLsizei, GLint*) pfglProgramBufferParametersIivNV;
+alias void function(GLenum, GLuint, GLuint, GLsizei, GLuint*) pfglProgramBufferParametersIuivNV;
+}
 
-typedef void function(GLenum, GLuint, GLuint, GLsizei, GLfloat*) pfglProgramBufferParametersfvNV;
-typedef void function(GLenum, GLuint, GLuint, GLsizei, GLint*) pfglProgramBufferParametersIivNV;
-typedef void function(GLenum, GLuint, GLuint, GLsizei, GLuint*) pfglProgramBufferParametersIuivNV;
-
 pfglProgramBufferParametersfvNV     glProgramBufferParametersfvNV;
 pfglProgramBufferParametersIivNV    glProgramBufferParametersIivNV;
-pfglProgramBufferParametersIuivNV   glProgramBufferParametersIuivNV;
\ No newline at end of file
+pfglProgramBufferParametersIuivNV   glProgramBufferParametersIuivNV;
Index: DerelictGL/derelict/opengl/extension/nv/vertex_program.d
===================================================================
--- DerelictGL/derelict/opengl/extension/nv/vertex_program.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/nv/vertex_program.d	(working copy)
@@ -285,73 +285,73 @@
     GL_MAP2_VERTEX_ATTRIB15_4_NV      = 0x867F,
 }
 
-extern(System):
+extern(System) {
+alias GLboolean function(GLsizei,GLuint*,GLboolean*) pfglAreProgramsResidentNV;
+alias void function(GLenum,GLuint) pfglBindProgramNV;
+alias void function(GLsizei,GLuint*) pfglDeleteProgramsNV;
+alias void function(GLenum,GLuint,GLfloat*) pfglExecuteProgramNV;
+alias void function(GLsizei,GLuint*) pfglGenProgramsNV;
+alias void function(GLenum,GLuint,GLenum,GLdouble*) pfglGetProgramParameterdvNV;
+alias void function(GLenum,GLuint,GLenum,GLfloat*) pfglGetProgramParameterfvNV;
+alias void function(GLuint,GLenum,GLint*) pfglGetProgramivNV;
+alias void function(GLuint,GLenum,GLchar*) pfglGetProgramStringNV;
+alias void function(GLenum,GLuint,GLenum,GLint*) pfglGetTrackMatrixivNV;
+alias void function(GLuint,GLenum,GLdouble*) pfglGetVertexAttribdvNV;
+alias void function(GLuint,GLenum,GLfloat*) pfglGetVertexAttribfvNV;
+alias void function(GLuint,GLenum,GLint*) pfglGetVertexAttribivNV;
+alias void function(GLuint,GLenum,GLvoid*) pfglGetVertexAttribPointervNV;
+alias GLboolean function(GLuint) pfglIsProgramNV;
+alias void function(GLenum,GLuint,GLsizei,GLchar*) pfglLoadProgramNV;
+alias void function(GLenum,GLuint,GLdouble,GLdouble,GLdouble,GLdouble) pfglProgramParameter4dNV;
+alias void function(GLenum,GLuint,GLdouble*) pfglProgramParameter4dvNV;
+alias void function(GLenum,GLuint,GLfloat,GLfloat,GLfloat,GLfloat) pfglProgramParameter4fNV;
+alias void function(GLenum,GLuint,GLfloat*) pfglProgramParameter4fvNV;
+alias void function(GLenum,GLuint,GLuint,GLdouble*) pfglProgramParameters4dvNV;
+alias void function(GLenum,GLuint,GLuint,GLfloat*) pfglProgramParameters4fvNV;
+alias void function(GLsizei,GLuint*) pfglRequestResidentProgramsNV;
+alias void function(GLenum,GLuint,GLenum,GLenum) pfglTrackMatrixNV;
+alias void function(GLuint,GLint,GLenum,GLsizei,GLvoid*) pfglVertexAttribPointerNV;
+alias void function(GLuint,GLdouble) pfglVertexAttrib1dNV;
+alias void function(GLuint,GLdouble*) pfglVertexAttrib1dvNV;
+alias void function(GLuint,GLfloat) pfglVertexAttrib1fNV;
+alias void function(GLuint,GLfloat*) pfglVertexAttrib1fvNV;
+alias void function(GLuint,GLshort) pfglVertexAttrib1sNV;
+alias void function(GLuint,GLshort*) pfglVertexAttrib1svNV;
+alias void function(GLuint,GLdouble,GLdouble) pfglVertexAttrib2dNV;
+alias void function(GLuint,GLdouble*) pfglVertexAttrib2dvNV;
+alias void function(GLuint,GLfloat,GLfloat) pfglVertexAttrib2fNV;
+alias void function(GLuint,GLfloat*) pfglVertexAttrib2fvNV;
+alias void function(GLuint,GLshort,GLshort) pfglVertexAttrib2sNV;
+alias void function(GLuint,GLshort*) pfglVertexAttrib2svNV;
+alias void function(GLuint,GLdouble,GLdouble,GLdouble) pfglVertexAttrib3dNV;
+alias void function(GLuint,GLdouble*) pfglVertexAttrib3dvNV;
+alias void function(GLuint,GLfloat,GLfloat,GLfloat) pfglVertexAttrib3fNV;
+alias void function(GLuint,GLfloat*) pfglVertexAttrib3fvNV;
+alias void function(GLuint,GLshort,GLshort,GLshort) pfglVertexAttrib3sNV;
+alias void function(GLuint,GLshort*) pfglVertexAttrib3svNV;
+alias void function(GLuint,GLdouble,GLdouble,GLdouble,GLdouble) pfglVertexAttrib4dNV;
+alias void function(GLuint,GLdouble*) pfglVertexAttrib4dvNV;
+alias void function(GLuint,GLfloat,GLfloat,GLfloat,GLfloat) pfglVertexAttrib4fNV;
+alias void function(GLuint,GLfloat*) pfglVertexAttrib4fvNV;
+alias void function(GLuint,GLshort,GLshort,GLshort,GLshort) pfglVertexAttrib4sNV;
+alias void function(GLuint,GLshort*) pfglVertexAttrib4svNV;
+alias void function(GLuint,GLubyte,GLubyte,GLubyte,GLubyte) pfglVertexAttrib4ubNV;
+alias void function(GLuint,GLubyte*) pfglVertexAttrib4ubvNV;
+alias void function(GLuint,GLsizei,GLdouble*) pfglVertexAttribs1dvNV;
+alias void function(GLuint,GLsizei,GLfloat*) pfglVertexAttribs1fvNV;
+alias void function(GLuint,GLsizei,GLshort*) pfglVertexAttribs1svNV;
+alias void function(GLuint,GLsizei,GLdouble*) pfglVertexAttribs2dvNV;
+alias void function(GLuint,GLsizei,GLfloat*) pfglVertexAttribs2fvNV;
+alias void function(GLuint,GLsizei,GLshort*) pfglVertexAttribs2svNV;
+alias void function(GLuint,GLsizei,GLdouble*) pfglVertexAttribs3dvNV;
+alias void function(GLuint,GLsizei,GLfloat*) pfglVertexAttribs3fvNV;
+alias void function(GLuint,GLsizei,GLshort*) pfglVertexAttribs3svNV;
+alias void function(GLuint,GLsizei,GLdouble*) pfglVertexAttribs4dvNV;
+alias void function(GLuint,GLsizei,GLfloat*) pfglVertexAttribs4fvNV;
+alias void function(GLuint,GLsizei,GLshort*) pfglVertexAttribs4svNV;
+alias void function(GLuint,GLsizei,GLubyte*) pfglVertexAttribs4ubvNV;
+}
 
-typedef GLboolean function(GLsizei,GLuint*,GLboolean*) pfglAreProgramsResidentNV;
-typedef void function(GLenum,GLuint) pfglBindProgramNV;
-typedef void function(GLsizei,GLuint*) pfglDeleteProgramsNV;
-typedef void function(GLenum,GLuint,GLfloat*) pfglExecuteProgramNV;
-typedef void function(GLsizei,GLuint*) pfglGenProgramsNV;
-typedef void function(GLenum,GLuint,GLenum,GLdouble*) pfglGetProgramParameterdvNV;
-typedef void function(GLenum,GLuint,GLenum,GLfloat*) pfglGetProgramParameterfvNV;
-typedef void function(GLuint,GLenum,GLint*) pfglGetProgramivNV;
-typedef void function(GLuint,GLenum,GLchar*) pfglGetProgramStringNV;
-typedef void function(GLenum,GLuint,GLenum,GLint*) pfglGetTrackMatrixivNV;
-typedef void function(GLuint,GLenum,GLdouble*) pfglGetVertexAttribdvNV;
-typedef void function(GLuint,GLenum,GLfloat*) pfglGetVertexAttribfvNV;
-typedef void function(GLuint,GLenum,GLint*) pfglGetVertexAttribivNV;
-typedef void function(GLuint,GLenum,GLvoid*) pfglGetVertexAttribPointervNV;
-typedef GLboolean function(GLuint) pfglIsProgramNV;
-typedef void function(GLenum,GLuint,GLsizei,GLchar*) pfglLoadProgramNV;
-typedef void function(GLenum,GLuint,GLdouble,GLdouble,GLdouble,GLdouble) pfglProgramParameter4dNV;
-typedef void function(GLenum,GLuint,GLdouble*) pfglProgramParameter4dvNV;
-typedef void function(GLenum,GLuint,GLfloat,GLfloat,GLfloat,GLfloat) pfglProgramParameter4fNV;
-typedef void function(GLenum,GLuint,GLfloat*) pfglProgramParameter4fvNV;
-typedef void function(GLenum,GLuint,GLuint,GLdouble*) pfglProgramParameters4dvNV;
-typedef void function(GLenum,GLuint,GLuint,GLfloat*) pfglProgramParameters4fvNV;
-typedef void function(GLsizei,GLuint*) pfglRequestResidentProgramsNV;
-typedef void function(GLenum,GLuint,GLenum,GLenum) pfglTrackMatrixNV;
-typedef void function(GLuint,GLint,GLenum,GLsizei,GLvoid*) pfglVertexAttribPointerNV;
-typedef void function(GLuint,GLdouble) pfglVertexAttrib1dNV;
-typedef void function(GLuint,GLdouble*) pfglVertexAttrib1dvNV;
-typedef void function(GLuint,GLfloat) pfglVertexAttrib1fNV;
-typedef void function(GLuint,GLfloat*) pfglVertexAttrib1fvNV;
-typedef void function(GLuint,GLshort) pfglVertexAttrib1sNV;
-typedef void function(GLuint,GLshort*) pfglVertexAttrib1svNV;
-typedef void function(GLuint,GLdouble,GLdouble) pfglVertexAttrib2dNV;
-typedef void function(GLuint,GLdouble*) pfglVertexAttrib2dvNV;
-typedef void function(GLuint,GLfloat,GLfloat) pfglVertexAttrib2fNV;
-typedef void function(GLuint,GLfloat*) pfglVertexAttrib2fvNV;
-typedef void function(GLuint,GLshort,GLshort) pfglVertexAttrib2sNV;
-typedef void function(GLuint,GLshort*) pfglVertexAttrib2svNV;
-typedef void function(GLuint,GLdouble,GLdouble,GLdouble) pfglVertexAttrib3dNV;
-typedef void function(GLuint,GLdouble*) pfglVertexAttrib3dvNV;
-typedef void function(GLuint,GLfloat,GLfloat,GLfloat) pfglVertexAttrib3fNV;
-typedef void function(GLuint,GLfloat*) pfglVertexAttrib3fvNV;
-typedef void function(GLuint,GLshort,GLshort,GLshort) pfglVertexAttrib3sNV;
-typedef void function(GLuint,GLshort*) pfglVertexAttrib3svNV;
-typedef void function(GLuint,GLdouble,GLdouble,GLdouble,GLdouble) pfglVertexAttrib4dNV;
-typedef void function(GLuint,GLdouble*) pfglVertexAttrib4dvNV;
-typedef void function(GLuint,GLfloat,GLfloat,GLfloat,GLfloat) pfglVertexAttrib4fNV;
-typedef void function(GLuint,GLfloat*) pfglVertexAttrib4fvNV;
-typedef void function(GLuint,GLshort,GLshort,GLshort,GLshort) pfglVertexAttrib4sNV;
-typedef void function(GLuint,GLshort*) pfglVertexAttrib4svNV;
-typedef void function(GLuint,GLubyte,GLubyte,GLubyte,GLubyte) pfglVertexAttrib4ubNV;
-typedef void function(GLuint,GLubyte*) pfglVertexAttrib4ubvNV;
-typedef void function(GLuint,GLsizei,GLdouble*) pfglVertexAttribs1dvNV;
-typedef void function(GLuint,GLsizei,GLfloat*) pfglVertexAttribs1fvNV;
-typedef void function(GLuint,GLsizei,GLshort*) pfglVertexAttribs1svNV;
-typedef void function(GLuint,GLsizei,GLdouble*) pfglVertexAttribs2dvNV;
-typedef void function(GLuint,GLsizei,GLfloat*) pfglVertexAttribs2fvNV;
-typedef void function(GLuint,GLsizei,GLshort*) pfglVertexAttribs2svNV;
-typedef void function(GLuint,GLsizei,GLdouble*) pfglVertexAttribs3dvNV;
-typedef void function(GLuint,GLsizei,GLfloat*) pfglVertexAttribs3fvNV;
-typedef void function(GLuint,GLsizei,GLshort*) pfglVertexAttribs3svNV;
-typedef void function(GLuint,GLsizei,GLdouble*) pfglVertexAttribs4dvNV;
-typedef void function(GLuint,GLsizei,GLfloat*) pfglVertexAttribs4fvNV;
-typedef void function(GLuint,GLsizei,GLshort*) pfglVertexAttribs4svNV;
-typedef void function(GLuint,GLsizei,GLubyte*) pfglVertexAttribs4ubvNV;
-
 pfglAreProgramsResidentNV           glAreProgramsResidentNV;
 pfglBindProgramNV                   glBindProgramNV;
 pfglDeleteProgramsNV                glDeleteProgramsNV;
@@ -415,4 +415,4 @@
 pfglVertexAttribs4dvNV              glVertexAttribs4dvNV;
 pfglVertexAttribs4fvNV              glVertexAttribs4fvNV;
 pfglVertexAttribs4svNV              glVertexAttribs4svNV;
-pfglVertexAttribs4ubvNV             glVertexAttribs4ubvNV;
\ No newline at end of file
+pfglVertexAttribs4ubvNV             glVertexAttribs4ubvNV;
Index: DerelictGL/derelict/opengl/extension/nv/fence.d
===================================================================
--- DerelictGL/derelict/opengl/extension/nv/fence.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/nv/fence.d	(working copy)
@@ -91,16 +91,16 @@
     GL_FENCE_CONDITION_NV             = 0x84F4,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLsizei, GLuint*) pfglDeleteFencesNV;
+alias void function(GLsizei, GLuint*) pfglGenFencesNV;
+alias GLboolean function(GLuint) pfglIsFenceNV;
+alias GLboolean function(GLuint) pfglTestFenceNV;
+alias void function(GLuint, GLenum, GLint*) pfglGetFenceivNV;
+alias void function(GLuint) pfglFinishFenceNV;
+alias void function(GLuint, GLenum) pfglSetFenceNV;
+}
 
-typedef void function(GLsizei, GLuint*) pfglDeleteFencesNV;
-typedef void function(GLsizei, GLuint*) pfglGenFencesNV;
-typedef GLboolean function(GLuint) pfglIsFenceNV;
-typedef GLboolean function(GLuint) pfglTestFenceNV;
-typedef void function(GLuint, GLenum, GLint*) pfglGetFenceivNV;
-typedef void function(GLuint) pfglFinishFenceNV;
-typedef void function(GLuint, GLenum) pfglSetFenceNV;
-
 pfglDeleteFencesNV          glDeleteFencesNV;
 pfglGenFencesNV             glGenFencesNV;
 pfglIsFenceNV               glIsFenceNV;
Index: DerelictGL/derelict/opengl/extension/nv/depth_buffer_float.d
===================================================================
--- DerelictGL/derelict/opengl/extension/nv/depth_buffer_float.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/nv/depth_buffer_float.d	(working copy)
@@ -84,12 +84,12 @@
     GL_DEPTH_BUFFER_FLOAT_MODE_NV          = 0x8DAF,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLdouble, GLdouble) pfglDepthRangedNV;
+alias void function(GLdouble) pfglClearDepthdNV;
+alias void function(GLdouble, GLdouble) pfglDepthBoundsdNV;
+}
 
-typedef void function(GLdouble, GLdouble) pfglDepthRangedNV;
-typedef void function(GLdouble) pfglClearDepthdNV;
-typedef void function(GLdouble, GLdouble) pfglDepthBoundsdNV;
-
 pfglDepthRangedNV           glDepthRangedNV;
 pfglClearDepthdNV           glClearDepthdNV;
 pfglDepthBoundsdNV          glDepthBoundsdNV;
Index: DerelictGL/derelict/opengl/extension/nv/occlusion_query.d
===================================================================
--- DerelictGL/derelict/opengl/extension/nv/occlusion_query.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/nv/occlusion_query.d	(working copy)
@@ -93,16 +93,16 @@
     GL_SAMPLES_PASSED_ARB             = 0x8914,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLsizei, GLuint*) pfglGenOcclusionQueriesNV;
+alias void function(GLsizei, GLuint*) pfglDeleteOcclusionQueriesNV;
+alias GLboolean function(GLuint) pfglIsOcclusionQueryNV;
+alias void function(GLuint) pfglBeginOcclusionQueryNV;
+alias void function() pfglEndOcclusionQueryNV;
+alias void function(GLuint, GLenum, GLint*) pfglGetOcclusionQueryivNV;
+alias void function(GLuint, GLenum, GLuint*) pfglGetOcclusionQueryuivNV;
+}
 
-typedef void function(GLsizei, GLuint*) pfglGenOcclusionQueriesNV;
-typedef void function(GLsizei, GLuint*) pfglDeleteOcclusionQueriesNV;
-typedef GLboolean function(GLuint) pfglIsOcclusionQueryNV;
-typedef void function(GLuint) pfglBeginOcclusionQueryNV;
-typedef void function() pfglEndOcclusionQueryNV;
-typedef void function(GLuint, GLenum, GLint*) pfglGetOcclusionQueryivNV;
-typedef void function(GLuint, GLenum, GLuint*) pfglGetOcclusionQueryuivNV;
-
 pfglGenOcclusionQueriesNV           glGenOcclusionQueriesNV;
 pfglDeleteOcclusionQueriesNV        glDeleteOcclusionQueriesNV;
 pfglIsOcclusionQueryNV              glIsOcclusionQueryNV;
Index: DerelictGL/derelict/opengl/extension/nv/vertex_array_range.d
===================================================================
--- DerelictGL/derelict/opengl/extension/nv/vertex_array_range.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/nv/vertex_array_range.d	(working copy)
@@ -83,10 +83,10 @@
     GL_VERTEX_ARRAY_RANGE_POINTER_NV        = 0x8521,
 }
 
-extern(System):
+extern(System) {
+alias void function() pfglFlushVertexArrayRangeNV;
+alias void function(GLsizei,GLvoid*) pfglVertexArrayRangeNV;
+}
 
-typedef void function() pfglFlushVertexArrayRangeNV;
-typedef void function(GLsizei,GLvoid*) pfglVertexArrayRangeNV;
-
 pfglFlushVertexArrayRangeNV     glFlushVertexArrayRangeNV;
 pfglVertexArrayRangeNV          glVertexArrayRangeNV;
Index: DerelictGL/derelict/opengl/extension/nv/fragment_program.d
===================================================================
--- DerelictGL/derelict/opengl/extension/nv/fragment_program.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/nv/fragment_program.d	(working copy)
@@ -92,15 +92,15 @@
     GL_PROGRAM_ERROR_STRING_NV                     = 0x8874,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLuint, GLsizei, GLubyte*, GLfloat, GLfloat, GLfloat, GLfloat) pfglProgramNamedParameter4fNV;
+alias void function(GLuint, GLsizei, GLubyte*, GLdouble, GLdouble, GLdouble, GLdouble) pfglProgramNamedParameter4dNV;
+alias void function(GLuint, GLsizei, GLubyte*, GLfloat*) pfglProgramNamedParameter4fvNV;
+alias void function(GLuint, GLsizei, GLubyte*, GLdouble*) pfglProgramNamedParameter4dvNV;
+alias void function(GLuint, GLsizei, GLubyte*, GLfloat*) pfglGetProgramNamedParameterfvNV;
+alias void function(GLuint, GLsizei, GLubyte*, GLdouble*) pfglGetProgramNamedParameterdvNV;
+}
 
-typedef void function(GLuint, GLsizei, GLubyte*, GLfloat, GLfloat, GLfloat, GLfloat) pfglProgramNamedParameter4fNV;
-typedef void function(GLuint, GLsizei, GLubyte*, GLdouble, GLdouble, GLdouble, GLdouble) pfglProgramNamedParameter4dNV;
-typedef void function(GLuint, GLsizei, GLubyte*, GLfloat*) pfglProgramNamedParameter4fvNV;
-typedef void function(GLuint, GLsizei, GLubyte*, GLdouble*) pfglProgramNamedParameter4dvNV;
-typedef void function(GLuint, GLsizei, GLubyte*, GLfloat*) pfglGetProgramNamedParameterfvNV;
-typedef void function(GLuint, GLsizei, GLubyte*, GLdouble*) pfglGetProgramNamedParameterdvNV;
-
 pfglProgramNamedParameter4fNV               glProgramNamedParameter4fNV;
 pfglProgramNamedParameter4dNV               glProgramNamedParameter4dNV;
 pfglProgramNamedParameter4fvNV              glProgramNamedParameter4fvNV;
Index: DerelictGL/derelict/opengl/extension/nv/half_float.d
===================================================================
--- DerelictGL/derelict/opengl/extension/nv/half_float.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/nv/half_float.d	(working copy)
@@ -164,62 +164,62 @@
     }
 }
 
-typedef ushort GLhalfNV;
+alias ushort GLhalfNV;
 
 enum : GLenum
 {
     GL_HALF_FLOAT_NV = 0x140B
 }
 
-extern(System):
+extern(System) {
+alias void function(GLhalfNV, GLhalfNV) pfglVertex2hNV;
+alias void function(GLhalfNV*) pfglVertex2hvNV;
+alias void function(GLhalfNV, GLhalfNV, GLhalfNV) pfglVertex3hNV;
+alias void function(GLhalfNV*) pfglVertex3hvNV;
+alias void function(GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) pfglVertex4hNV;
+alias void function(GLhalfNV*) pfglVertex4hvNV;
+alias void function(GLhalfNV, GLhalfNV, GLhalfNV) pfglNormal3hNV;
+alias void function(GLhalfNV*) pfglNormal3hvNV;
+alias void function(GLhalfNV, GLhalfNV, GLhalfNV) pfglColor3hNV;
+alias void function(GLhalfNV*) pfglColor3hvNV;
+alias void function(GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) pfglColor4hNV;
+alias void function(GLhalfNV*) pfglColor4hvNV;
+alias void function(GLhalfNV) pfglTexCoord1hNV;
+alias void function(GLhalfNV*) pfglTexCoord1hvNV;
+alias void function(GLhalfNV, GLhalfNV) pfglTexCoord2hNV;
+alias void function(GLhalfNV*) pfglTexCoord2hvNV;
+alias void function(GLhalfNV, GLhalfNV, GLhalfNV) pfglTexCoord3hNV;
+alias void function(GLhalfNV*) pfglTexCoord3hvNV;
+alias void function(GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) pfglTexCoord4hNV;
+alias void function(GLhalfNV*) pfglTexCoord4hvNV;
+alias void function(GLenum, GLhalfNV) pfglMultiTexCoord1hNV;
+alias void function(GLenum, GLhalfNV*) pfglMultiTexCoord1hvNV;
+alias void function(GLenum, GLhalfNV, GLhalfNV) pfglMultiTexCoord2hNV;
+alias void function(GLenum, GLhalfNV*) pfglMultiTexCoord2hvNV;
+alias void function(GLenum, GLhalfNV, GLhalfNV, GLhalfNV) pfglMultiTexCoord3hNV;
+alias void function(GLenum, GLhalfNV*) pfglMultiTexCoord3hvNV;
+alias void function(GLenum, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) pfglMultiTexCoord4hNV;
+alias void function(GLenum, GLhalfNV*) pfglMultiTexCoord4hvNV;
+alias void function(GLhalfNV) pfglFogCoordhNV;
+alias void function(GLhalfNV*) pfglFogCoordhvNV;
+alias void function(GLhalfNV, GLhalfNV, GLhalfNV) pfglSecondaryColor3hNV;
+alias void function(GLhalfNV*) pfglSecondaryColor3hvNV;
+alias void function(GLhalfNV) pfglVertexWeighthNV;
+alias void function(GLhalfNV*) pfglVertexWeighthvNV;
+alias void function(GLuint, GLhalfNV) pfglVertexAttrib1hNV;
+alias void function(GLuint, GLhalfNV*) pfglVertexAttrib1hvNV;
+alias void function(GLuint, GLhalfNV, GLhalfNV) pfglVertexAttrib2hNV;
+alias void function(GLuint, GLhalfNV*) pfglVertexAttrib2hvNV;
+alias void function(GLuint, GLhalfNV, GLhalfNV, GLhalfNV) pfglVertexAttrib3hNV;
+alias void function(GLuint, GLhalfNV*) pfglVertexAttrib3hvNV;
+alias void function(GLuint, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) pfglVertexAttrib4hNV;
+alias void function(GLuint, GLhalfNV*) pfglVertexAttrib4hvNV;
+alias void function(GLuint, GLsizei, GLhalfNV*) pfglVertexAttribs1hvNV;
+alias void function(GLuint, GLsizei, GLhalfNV*) pfglVertexAttribs2hvNV;
+alias void function(GLuint, GLsizei, GLhalfNV*) pfglVertexAttribs3hvNV;
+alias void function(GLuint, GLsizei, GLhalfNV*) pfglVertexAttribs4hvNV;
+}
 
-typedef void function(GLhalfNV, GLhalfNV) pfglVertex2hNV;
-typedef void function(GLhalfNV*) pfglVertex2hvNV;
-typedef void function(GLhalfNV, GLhalfNV, GLhalfNV) pfglVertex3hNV;
-typedef void function(GLhalfNV*) pfglVertex3hvNV;
-typedef void function(GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) pfglVertex4hNV;
-typedef void function(GLhalfNV*) pfglVertex4hvNV;
-typedef void function(GLhalfNV, GLhalfNV, GLhalfNV) pfglNormal3hNV;
-typedef void function(GLhalfNV*) pfglNormal3hvNV;
-typedef void function(GLhalfNV, GLhalfNV, GLhalfNV) pfglColor3hNV;
-typedef void function(GLhalfNV*) pfglColor3hvNV;
-typedef void function(GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) pfglColor4hNV;
-typedef void function(GLhalfNV*) pfglColor4hvNV;
-typedef void function(GLhalfNV) pfglTexCoord1hNV;
-typedef void function(GLhalfNV*) pfglTexCoord1hvNV;
-typedef void function(GLhalfNV, GLhalfNV) pfglTexCoord2hNV;
-typedef void function(GLhalfNV*) pfglTexCoord2hvNV;
-typedef void function(GLhalfNV, GLhalfNV, GLhalfNV) pfglTexCoord3hNV;
-typedef void function(GLhalfNV*) pfglTexCoord3hvNV;
-typedef void function(GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) pfglTexCoord4hNV;
-typedef void function(GLhalfNV*) pfglTexCoord4hvNV;
-typedef void function(GLenum, GLhalfNV) pfglMultiTexCoord1hNV;
-typedef void function(GLenum, GLhalfNV*) pfglMultiTexCoord1hvNV;
-typedef void function(GLenum, GLhalfNV, GLhalfNV) pfglMultiTexCoord2hNV;
-typedef void function(GLenum, GLhalfNV*) pfglMultiTexCoord2hvNV;
-typedef void function(GLenum, GLhalfNV, GLhalfNV, GLhalfNV) pfglMultiTexCoord3hNV;
-typedef void function(GLenum, GLhalfNV*) pfglMultiTexCoord3hvNV;
-typedef void function(GLenum, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) pfglMultiTexCoord4hNV;
-typedef void function(GLenum, GLhalfNV*) pfglMultiTexCoord4hvNV;
-typedef void function(GLhalfNV) pfglFogCoordhNV;
-typedef void function(GLhalfNV*) pfglFogCoordhvNV;
-typedef void function(GLhalfNV, GLhalfNV, GLhalfNV) pfglSecondaryColor3hNV;
-typedef void function(GLhalfNV*) pfglSecondaryColor3hvNV;
-typedef void function(GLhalfNV) pfglVertexWeighthNV;
-typedef void function(GLhalfNV*) pfglVertexWeighthvNV;
-typedef void function(GLuint, GLhalfNV) pfglVertexAttrib1hNV;
-typedef void function(GLuint, GLhalfNV*) pfglVertexAttrib1hvNV;
-typedef void function(GLuint, GLhalfNV, GLhalfNV) pfglVertexAttrib2hNV;
-typedef void function(GLuint, GLhalfNV*) pfglVertexAttrib2hvNV;
-typedef void function(GLuint, GLhalfNV, GLhalfNV, GLhalfNV) pfglVertexAttrib3hNV;
-typedef void function(GLuint, GLhalfNV*) pfglVertexAttrib3hvNV;
-typedef void function(GLuint, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV) pfglVertexAttrib4hNV;
-typedef void function(GLuint, GLhalfNV*) pfglVertexAttrib4hvNV;
-typedef void function(GLuint, GLsizei, GLhalfNV*) pfglVertexAttribs1hvNV;
-typedef void function(GLuint, GLsizei, GLhalfNV*) pfglVertexAttribs2hvNV;
-typedef void function(GLuint, GLsizei, GLhalfNV*) pfglVertexAttribs3hvNV;
-typedef void function(GLuint, GLsizei, GLhalfNV*) pfglVertexAttribs4hvNV;
-
 pfglVertex2hNV                  glVertex2hNV;
 pfglVertex2hvNV                 glVertex2hvNV;
 pfglVertex3hNV                  glVertex3hNV;
Index: DerelictGL/derelict/opengl/extension/nv/geometry_program4.d
===================================================================
--- DerelictGL/derelict/opengl/extension/nv/geometry_program4.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/nv/geometry_program4.d	(working copy)
@@ -79,8 +79,8 @@
     GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV      = 0x8C28,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLint) pfglProgramVertexLimitNV;
+}
 
-typedef void function(GLenum, GLint) pfglProgramVertexLimitNV;
-
 pfglProgramVertexLimitNV            glProgramVertexLimitNV;
Index: DerelictGL/derelict/opengl/extension/nv/gpu_program4.d
===================================================================
--- DerelictGL/derelict/opengl/extension/nv/gpu_program4.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/nv/gpu_program4.d	(working copy)
@@ -114,25 +114,25 @@
     GL_MAX_PROGRAM_GENERIC_RESULTS_NV      = 0x8DA6,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLuint, GLint, GLint, GLint, GLint) pfglProgramLocalParameterI4iNV;
+alias void function(GLenum, GLuint, GLint*) pfglProgramLocalParameterI4ivNV;
+alias void function(GLenum, GLuint, GLsizei, GLint*) pfglProgramLocalParametersI4ivNV;
+alias void function(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) pfglProgramLocalParameterI4uiNV;
+alias void function(GLenum, GLuint, GLuint*) pfglProgramLocalParameterI4uivNV;
+alias void function(GLenum, GLuint, GLsizei, GLuint*) pfglProgramLocalParametersI4uivNV;
+alias void function(GLenum, GLuint,. GLint, GLint, GLint, GLint) pfglProgramEnvParameterI4iNV;
+alias void function(GLenum, GLuint, GLint*) pfglProgramEnvParameterI4ivNV;
+alias void function(GLenum, GLuint, GLsizei, GLint*) pfglProgramEnvParametersI4ivNV;
+alias void function(GLenum, GLuint,. GLuint, GLuint, GLuint, GLuint) pfglProgramEnvParameterI4uiNV;
+alias void function(GLenum, GLuint, GLuint*) pfglProgramEnvParameterI4uivNV;
+alias void function(GLenum, GLuint, GLsizei, GLuint*) pfglProgramEnvParametersI4uivNV;
+alias void function(GLenum, GLuint, GLint*) pfglGetProgramLocalParameterIivNV;
+alias void function(GLenum, GLuint, GLuint*) pfglGetProgramLocalParameterIuivNV;
+alias void function(GLenum, GLuint, GLint*) pfglGetProgramEnvParameterIivNV;
+alias void function(GLenum, GLuint, GLuint*) pfglGetProgramEnvParameterIuivNV;
+}
 
-typedef void function(GLenum, GLuint, GLint, GLint, GLint, GLint) pfglProgramLocalParameterI4iNV;
-typedef void function(GLenum, GLuint, GLint*) pfglProgramLocalParameterI4ivNV;
-typedef void function(GLenum, GLuint, GLsizei, GLint*) pfglProgramLocalParametersI4ivNV;
-typedef void function(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) pfglProgramLocalParameterI4uiNV;
-typedef void function(GLenum, GLuint, GLuint*) pfglProgramLocalParameterI4uivNV;
-typedef void function(GLenum, GLuint, GLsizei, GLuint*) pfglProgramLocalParametersI4uivNV;
-typedef void function(GLenum, GLuint,. GLint, GLint, GLint, GLint) pfglProgramEnvParameterI4iNV;
-typedef void function(GLenum, GLuint, GLint*) pfglProgramEnvParameterI4ivNV;
-typedef void function(GLenum, GLuint, GLsizei, GLint*) pfglProgramEnvParametersI4ivNV;
-typedef void function(GLenum, GLuint,. GLuint, GLuint, GLuint, GLuint) pfglProgramEnvParameterI4uiNV;
-typedef void function(GLenum, GLuint, GLuint*) pfglProgramEnvParameterI4uivNV;
-typedef void function(GLenum, GLuint, GLsizei, GLuint*) pfglProgramEnvParametersI4uivNV;
-typedef void function(GLenum, GLuint, GLint*) pfglGetProgramLocalParameterIivNV;
-typedef void function(GLenum, GLuint, GLuint*) pfglGetProgramLocalParameterIuivNV;
-typedef void function(GLenum, GLuint, GLint*) pfglGetProgramEnvParameterIivNV;
-typedef void function(GLenum, GLuint, GLuint*) pfglGetProgramEnvParameterIuivNV;
-
 pfglProgramLocalParameterI4iNV      glProgramLocalParameterI4iNV;
 pfglProgramLocalParameterI4ivNV     glProgramLocalParameterI4ivNV;
 pfglProgramLocalParametersI4ivNV    glProgramLocalParametersI4ivNV;
Index: DerelictGL/derelict/opengl/extension/nv/register_combiners2.d
===================================================================
--- DerelictGL/derelict/opengl/extension/nv/register_combiners2.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/nv/register_combiners2.d	(working copy)
@@ -79,10 +79,10 @@
     GL_PER_STAGE_CONSTANTS_NV = 0x8535
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLenum, GLfloat*) pfglCombinerStageParameterfvNV;
+alias void function(GLenum, GLenum, GLfloat*) pfglGetCombinerStageParameterfvNV;
+}
 
-typedef void function(GLenum, GLenum, GLfloat*) pfglCombinerStageParameterfvNV;
-typedef void function(GLenum, GLenum, GLfloat*) pfglGetCombinerStageParameterfvNV;
-
 pfglCombinerStageParameterfvNV      glCombinerStageParameterfvNV;
 pfglGetCombinerStageParameterfvNV   glGetCombinerStageParameterfvNV;
Index: DerelictGL/derelict/opengl/extension/nv/framebuffer_multisample_coverage.d
===================================================================
--- DerelictGL/derelict/opengl/extension/nv/framebuffer_multisample_coverage.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/nv/framebuffer_multisample_coverage.d	(working copy)
@@ -82,8 +82,8 @@
     GL_MULTISAMPLE_COVERAGE_MODES_NV           = 0x8E13,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLsizei, GLsizei, GLenum, GLsizei, GLsizei) pfglRenderbufferStorageMultsampleCoverageNV;
+}
 
-typedef void function(GLenum, GLsizei, GLsizei, GLenum, GLsizei, GLsizei) pfglRenderbufferStorageMultsampleCoverageNV;
-
 pfglRenderbufferStorageMultsampleCoverageNV     glRenderbufferStorageMultsampleCoverageNV;
Index: DerelictGL/derelict/opengl/extension/nv/primitive_restart.d
===================================================================
--- DerelictGL/derelict/opengl/extension/nv/primitive_restart.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/nv/primitive_restart.d	(working copy)
@@ -80,10 +80,10 @@
     GL_PRIMITIVE_RESTART_INDEX_NV     = 0x8559,
 }
 
-extern(System):
+extern(System) {
+alias void function() pfglPrimitiveRestartNV;
+alias void function(GLuint) pfglPrimitiveRestartIndexNV;
+}
 
-typedef void function() pfglPrimitiveRestartNV;
-typedef void function(GLuint) pfglPrimitiveRestartIndexNV;
-
 pfglPrimitiveRestartNV          glPrimitiveRestartNV;
 pfglPrimitiveRestartIndexNV     glPrimitiveRestartIndexNV;
Index: DerelictGL/derelict/opengl/extension/nv/point_sprite.d
===================================================================
--- DerelictGL/derelict/opengl/extension/nv/point_sprite.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/nv/point_sprite.d	(working copy)
@@ -81,10 +81,10 @@
     GL_POINT_SPRITE_R_MODE_NV         = 0x8863,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLint) pfglPointParameteriNV;
+alias void function(GLenum, GLint*) pfglPointParameterivNV;
+}
 
-typedef void function(GLenum, GLint) pfglPointParameteriNV;
-typedef void function(GLenum, GLint*) pfglPointParameterivNV;
-
 pfglPointParameteriNV       glPointParameteriNV;
 pfglPointParameterivNV      glPointParameterivNV;
Index: DerelictGL/derelict/opengl/extension/nv/transform_feedback.d
===================================================================
--- DerelictGL/derelict/opengl/extension/nv/transform_feedback.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/nv/transform_feedback.d	(working copy)
@@ -121,20 +121,20 @@
     GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV             = 0x8C8F,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum) pfglBeginTransformFeedbackNV;
+alias void function() pfglEndTransformFeedbackNV;
+alias void function(GLuint,GLint*,GLenum) pfglTransformFeedbackAttribsNV;
+alias void function(GLenum,GLuint,GLuint,GLintptr,GLsizeiptr) pfglBindBufferRangeNV;
+alias void function(GLenum,GLuint,GLuint,GLintptr) pfglBindBufferOffsetNV;
+alias void function(GLenum,GLuint,GLuint) pfglBindBufferBaseNV;
+alias void function(GLuint,GLsizei,GLint*,GLenum) pfglTransformFeedbackVaryingsNV;
+alias void function(GLuint,GLchar*) pfglActiveVaryingNV;
+alias GLint function(GLuint,GLchar*) pfglGetVaryingLocationNV;
+alias void function(GLuint,GLuint,GLsizei,GLsizei*,GLsizei*,GLenum*,GLchar*) pfglGetActiveVaryingNV;
+alias void function(GLuint,GLuint,GLint*) pfglGetTransformFeedbackVaryingNV;
+}
 
-typedef void function(GLenum) pfglBeginTransformFeedbackNV;
-typedef void function() pfglEndTransformFeedbackNV;
-typedef void function(GLuint,GLint*,GLenum) pfglTransformFeedbackAttribsNV;
-typedef void function(GLenum,GLuint,GLuint,GLintptr,GLsizeiptr) pfglBindBufferRangeNV;
-typedef void function(GLenum,GLuint,GLuint,GLintptr) pfglBindBufferOffsetNV;
-typedef void function(GLenum,GLuint,GLuint) pfglBindBufferBaseNV;
-typedef void function(GLuint,GLsizei,GLint*,GLenum) pfglTransformFeedbackVaryingsNV;
-typedef void function(GLuint,GLchar*) pfglActiveVaryingNV;
-typedef GLint function(GLuint,GLchar*) pfglGetVaryingLocationNV;
-typedef void function(GLuint,GLuint,GLsizei,GLsizei*,GLsizei*,GLenum*,GLchar*) pfglGetActiveVaryingNV;
-typedef void function(GLuint,GLuint,GLint*) pfglGetTransformFeedbackVaryingNV;
-
 pfglBeginTransformFeedbackNV        glBeginTransformFeedbackNV;
 pfglEndTransformFeedbackNV          glEndTransformFeedbackNV;
 pfglTransformFeedbackAttribsNV      glTransformFeedbackAttribsNV;
@@ -145,4 +145,4 @@
 pfglActiveVaryingNV                 glActiveVaryingNV;
 pfglGetVaryingLocationNV            glGetVaryingLocationNV;
 pfglGetActiveVaryingNV              glGetActiveVaryingNV;
-pfglGetTransformFeedbackVaryingNV   glGetTransformFeedbackVaryingNV;
\ No newline at end of file
+pfglGetTransformFeedbackVaryingNV   glGetTransformFeedbackVaryingNV;
Index: DerelictGL/derelict/opengl/extension/nv/register_combiners.d
===================================================================
--- DerelictGL/derelict/opengl/extension/nv/register_combiners.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/nv/register_combiners.d	(working copy)
@@ -151,22 +151,22 @@
     GL_COMBINER7_NV                   = 0x8557,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLfloat*) pfglCombinerParameterfvNV;
+alias void function(GLenum, GLfloat) pfglCombinerParameterfNV;
+alias void function(GLenum, GLint*) pfglCombinerParameterivNV;
+alias void function(GLenum, GLint) pfglCombinerParameteriNV;
+alias void function(GLenum, GLenum, GLenum, GLenum, GLenum, GLenum) pfglCombinerInputNV;
+alias void function(GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLboolean, GLboolean, GLboolean) pfglCombinerOutputNV;
+alias void function(GLenum, GLenum, GLenum, GLenum) pfglFinalCombinerInputNV;
+alias void function(GLenum, GLenum, GLenum, GLenum, GLfloat*) pfglGetCombinerInputParameterfvNV;
+alias void function(GLenum, GLenum, GLenum, GLenum, GLint*) pfglGetCombinerInputParameterivNV;
+alias void function(GLenum, GLenum, GLenum, GLfloat*) pfglGetCombinerOutputParameterfvNV;
+alias void function(GLenum, GLenum, GLenum, GLint*) pfglGetCombinerOutputParameterivNV;
+alias void function(GLenum, GLenum, GLfloat*) pfglGetFinalCombinerInputParameterfvNV;
+alias void function(GLenum, GLenum, GLint*) pfglGetFinalCombinerInputParameterivNV;
+}
 
-typedef void function(GLenum, GLfloat*) pfglCombinerParameterfvNV;
-typedef void function(GLenum, GLfloat) pfglCombinerParameterfNV;
-typedef void function(GLenum, GLint*) pfglCombinerParameterivNV;
-typedef void function(GLenum, GLint) pfglCombinerParameteriNV;
-typedef void function(GLenum, GLenum, GLenum, GLenum, GLenum, GLenum) pfglCombinerInputNV;
-typedef void function(GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLboolean, GLboolean, GLboolean) pfglCombinerOutputNV;
-typedef void function(GLenum, GLenum, GLenum, GLenum) pfglFinalCombinerInputNV;
-typedef void function(GLenum, GLenum, GLenum, GLenum, GLfloat*) pfglGetCombinerInputParameterfvNV;
-typedef void function(GLenum, GLenum, GLenum, GLenum, GLint*) pfglGetCombinerInputParameterivNV;
-typedef void function(GLenum, GLenum, GLenum, GLfloat*) pfglGetCombinerOutputParameterfvNV;
-typedef void function(GLenum, GLenum, GLenum, GLint*) pfglGetCombinerOutputParameterivNV;
-typedef void function(GLenum, GLenum, GLfloat*) pfglGetFinalCombinerInputParameterfvNV;
-typedef void function(GLenum, GLenum, GLint*) pfglGetFinalCombinerInputParameterivNV;
-
 pfglCombinerParameterfvNV               glCombinerParameterfvNV;
 pfglCombinerParameterfNV                glCombinerParameterfNV;
 pfglCombinerParameterivNV               glCombinerParameterivNV;
Index: DerelictGL/derelict/opengl/extension/nv/evaluators.d
===================================================================
--- DerelictGL/derelict/opengl/extension/nv/evaluators.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/nv/evaluators.d	(working copy)
@@ -116,18 +116,18 @@
     GL_MAX_RATIONAL_EVAL_ORDER_NV      = 0x86D7,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLuint, GLenum, GLsizei, GLsizei, GLint, GLint, GLboolean, GLvoid*) pfglMapControlPointsNV;
+alias void function(GLenum, GLenum, GLint*) pfglMapParameterivNV;
+alias void function(GLenum, GLenum, GLfloat*) pfglMapParameterfvNV;
+alias void function(GLenum, GLuint, GLenum, GLsizei, GLsizei, GLboolean, GLvoid*) pfglGetMapControlPointsNV;
+alias void function(GLenum, GLenum, GLint*) pfglGetMapParameterivNV;
+alias void function(GLenum, GLenum, GLfloat*) pfglGetMapParameterfvNV;
+alias void function(GLenum, GLuint, GLenum, GLint*) pfglGetMapAttribParameterivNV;
+alias void function(GLenum, GLuint, GLenum, GLfloat*) pfglGetMapAttribParameterfvNV;
+alias void function(GLenum, GLenum) pfglEvalMapsNV;
+}
 
-typedef void function(GLenum, GLuint, GLenum, GLsizei, GLsizei, GLint, GLint, GLboolean, GLvoid*) pfglMapControlPointsNV;
-typedef void function(GLenum, GLenum, GLint*) pfglMapParameterivNV;
-typedef void function(GLenum, GLenum, GLfloat*) pfglMapParameterfvNV;
-typedef void function(GLenum, GLuint, GLenum, GLsizei, GLsizei, GLboolean, GLvoid*) pfglGetMapControlPointsNV;
-typedef void function(GLenum, GLenum, GLint*) pfglGetMapParameterivNV;
-typedef void function(GLenum, GLenum, GLfloat*) pfglGetMapParameterfvNV;
-typedef void function(GLenum, GLuint, GLenum, GLint*) pfglGetMapAttribParameterivNV;
-typedef void function(GLenum, GLuint, GLenum, GLfloat*) pfglGetMapAttribParameterfvNV;
-typedef void function(GLenum, GLenum) pfglEvalMapsNV;
-
 pfglMapControlPointsNV              glMapControlPointsNV;
 pfglMapParameterivNV                glMapParameterivNV;
 pfglMapParameterfvNV                glMapParameterfvNV;
Index: DerelictGL/derelict/opengl/extension/nv/pixel_data_range.d
===================================================================
--- DerelictGL/derelict/opengl/extension/nv/pixel_data_range.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/nv/pixel_data_range.d	(working copy)
@@ -84,10 +84,10 @@
     GL_READ_PIXEL_DATA_RANGE_POINTER_NV     = 0x887D,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLsizei, GLvoid*) pfglPixelDataRangeNV;
+alias void function(GLenum) pfglFlushPixelDataRangeNV;
+}
 
-typedef void function(GLenum, GLsizei, GLvoid*) pfglPixelDataRangeNV;
-typedef void function(GLenum) pfglFlushPixelDataRangeNV;
-
 pfglPixelDataRangeNV        glPixelDataRangeNV;
 pfglFlushPixelDataRangeNV   glFlushPixelDataRangeNV;
Index: DerelictGL/derelict/opengl/extension/arb/vertex_shader.d
===================================================================
--- DerelictGL/derelict/opengl/extension/arb/vertex_shader.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/arb/vertex_shader.d	(working copy)
@@ -92,12 +92,11 @@
     alias uint GLhandleARB;
 }
 
-extern(System):
-
-typedef void function (GLhandleARB, GLuint, GLcharARB*) pfglBindAttribLocationARB;
-typedef void function (GLhandleARB, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLcharARB*) pfglGetActiveAttribARB;
-typedef GLint function (GLhandleARB, GLcharARB* name) pfglGetAttribLocationARB;
-
+extern(System) {
+alias void function (GLhandleARB, GLuint, GLcharARB*) pfglBindAttribLocationARB;
+alias void function (GLhandleARB, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLcharARB*) pfglGetActiveAttribARB;
+alias GLint function (GLhandleARB, GLcharARB* name) pfglGetAttribLocationARB;
+}
 pfglBindAttribLocationARB           glBindAttribLocationARB;
 pfglGetActiveAttribARB              glGetActiveAttribARB;
 pfglGetAttribLocationARB            glGetAttribLocationARB;
Index: DerelictGL/derelict/opengl/extension/arb/vertex_program.d
===================================================================
--- DerelictGL/derelict/opengl/extension/arb/vertex_program.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/arb/vertex_program.d	(working copy)
@@ -276,70 +276,71 @@
     GL_MATRIX31_ARB                            = 0x88DF,
 }
 
-extern(System):
+extern(System) {
 
-typedef void function(GLuint, GLdouble) pfglVertexAttrib1dARB;
-typedef void function(GLuint, GLdouble*) pfglVertexAttrib1dvARB;
-typedef void function(GLuint, GLfloat) pfglVertexAttrib1fARB;
-typedef void function(GLuint, GLfloat*) pfglVertexAttrib1fvARB;
-typedef void function(GLuint, GLshort) pfglVertexAttrib1sARB;
-typedef void function(GLuint, GLshort*) pfglVertexAttrib1svARB;
-typedef void function(GLuint, GLdouble, GLdouble) pfglVertexAttrib2dARB;
-typedef void function(GLuint, GLdouble*) pfglVertexAttrib2dvARB;
-typedef void function(GLuint, GLfloat, GLfloat) pfglVertexAttrib2fARB;
-typedef void function(GLuint, GLfloat*) pfglVertexAttrib2fvARB;
-typedef void function(GLuint, GLshort, GLshort) pfglVertexAttrib2sARB;
-typedef void function(GLuint, GLshort*) pfglVertexAttrib2svARB;
-typedef void function(GLuint, GLdouble, GLdouble, GLdouble) pfglVertexAttrib3dARB;
-typedef void function(GLuint, GLdouble*) pfglVertexAttrib3dvARB;
-typedef void function(GLuint, GLfloat, GLfloat, GLfloat) pfglVertexAttrib3fARB;
-typedef void function(GLuint, GLfloat*) pfglVertexAttrib3fvARB;
-typedef void function(GLuint, GLshort, GLshort, GLshort) pfglVertexAttrib3sARB;
-typedef void function(GLuint, GLshort*) pfglVertexAttrib3svARB;
-typedef void function(GLuint, GLbyte*) pfglVertexAttrib4NbvARB;
-typedef void function(GLuint, GLint*) pfglVertexAttrib4NivARB;
-typedef void function(GLuint, GLshort*) pfglVertexAttrib4NsvARB;
-typedef void function(GLuint, GLubyte, GLubyte, GLubyte, GLubyte) pfglVertexAttrib4NubARB;
-typedef void function(GLuint, GLubyte*) pfglVertexAttrib4NubvARB;
-typedef void function(GLuint, GLuint*) pfglVertexAttrib4NuivARB;
-typedef void function(GLuint, GLushort*) pfglVertexAttrib4NusvARB;
-typedef void function(GLuint, GLbyte*) pfglVertexAttrib4bvARB;
-typedef void function(GLuint, GLdouble, GLdouble, GLdouble, GLdouble) pfglVertexAttrib4dARB;
-typedef void function(GLuint, GLdouble*) pfglVertexAttrib4dvARB;
-typedef void function(GLuint, GLfloat, GLfloat, GLfloat, GLfloat) pfglVertexAttrib4fARB;
-typedef void function(GLuint, GLfloat*) pfglVertexAttrib4fvARB;
-typedef void function(GLuint, GLint*) pfglVertexAttrib4ivARB;
-typedef void function(GLuint, GLshort, GLshort, GLshort, GLshort) pfglVertexAttrib4sARB;
-typedef void function(GLuint, GLshort*) pfglVertexAttrib4svARB;
-typedef void function(GLuint, GLubyte*) pfglVertexAttrib4ubvARB;
-typedef void function(GLuint, GLuint*) pfglVertexAttrib4uivARB;
-typedef void function(GLuint, GLushort*) pfglVertexAttrib4usvARB;
-typedef void function(GLuint, GLint, GLenum, GLboolean, GLsizei, GLvoid*) pfglVertexAttribPointerARB;
-typedef void function(GLuint) pfglEnableVertexAttribArrayARB;
-typedef void function(GLuint) pfglDisableVertexAttribArrayARB;
-typedef void function(GLenum, GLenum, GLsizei, GLvoid*) pfglProgramStringARB;
-typedef void function(GLenum, GLuint) pfglBindProgramARB;
-typedef void function(GLsizei, GLuint*) pfglDeleteProgramsARB;
-typedef void function(GLsizei, GLuint*) pfglGenProgramsARB;
-typedef void function(GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) pfglProgramEnvParameter4dARB;
-typedef void function(GLenum, GLuint, GLdouble*) pfglProgramEnvParameter4dvARB;
-typedef void function(GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) pfglProgramEnvParameter4fARB;
-typedef void function(GLenum, GLuint, GLfloat*) pfglProgramEnvParameter4fvARB;
-typedef void function(GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) pfglProgramLocalParameter4dARB;
-typedef void function(GLenum, GLuint, GLdouble*) pfglProgramLocalParameter4dvARB;
-typedef void function(GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) pfglProgramLocalParameter4fARB;
-typedef void function(GLenum, GLuint, GLfloat*) pfglProgramLocalParameter4fvARB;
-typedef void function(GLenum, GLuint, GLdouble*) pfglGetProgramEnvParameterdvARB;
-typedef void function(GLenum, GLuint, GLfloat*) pfglGetProgramEnvParameterfvARB;
-typedef void function(GLenum, GLuint, GLdouble*) pfglGetProgramLocalParameterdvARB;
-typedef void function(GLenum, GLuint, GLfloat*) pfglGetProgramLocalParameterfvARB;
-typedef void function(GLenum, GLenum, GLint*) pfglGetProgramivARB;
-typedef void function(GLenum, GLenum, GLvoid*) pfglGetProgramStringARB;
-typedef void function(GLuint, GLenum, GLdouble*) pfglGetVertexAttribdvARB;
-typedef void function(GLuint, GLenum, GLfloat*) pfglGetVertexAttribfvARB;
-typedef void function(GLuint, GLenum, GLint*) pfglGetVertexAttribivARB;
-typedef void function(GLuint, GLenum, GLvoid*) pfglGetVertexAttribPointervARB;
-typedef GLboolean function(GLuint) pfglIsProgramARB;
+alias void function(GLuint, GLdouble) pfglVertexAttrib1dARB;
+alias void function(GLuint, GLdouble*) pfglVertexAttrib1dvARB;
+alias void function(GLuint, GLfloat) pfglVertexAttrib1fARB;
+alias void function(GLuint, GLfloat*) pfglVertexAttrib1fvARB;
+alias void function(GLuint, GLshort) pfglVertexAttrib1sARB;
+alias void function(GLuint, GLshort*) pfglVertexAttrib1svARB;
+alias void function(GLuint, GLdouble, GLdouble) pfglVertexAttrib2dARB;
+alias void function(GLuint, GLdouble*) pfglVertexAttrib2dvARB;
+alias void function(GLuint, GLfloat, GLfloat) pfglVertexAttrib2fARB;
+alias void function(GLuint, GLfloat*) pfglVertexAttrib2fvARB;
+alias void function(GLuint, GLshort, GLshort) pfglVertexAttrib2sARB;
+alias void function(GLuint, GLshort*) pfglVertexAttrib2svARB;
+alias void function(GLuint, GLdouble, GLdouble, GLdouble) pfglVertexAttrib3dARB;
+alias void function(GLuint, GLdouble*) pfglVertexAttrib3dvARB;
+alias void function(GLuint, GLfloat, GLfloat, GLfloat) pfglVertexAttrib3fARB;
+alias void function(GLuint, GLfloat*) pfglVertexAttrib3fvARB;
+alias void function(GLuint, GLshort, GLshort, GLshort) pfglVertexAttrib3sARB;
+alias void function(GLuint, GLshort*) pfglVertexAttrib3svARB;
+alias void function(GLuint, GLbyte*) pfglVertexAttrib4NbvARB;
+alias void function(GLuint, GLint*) pfglVertexAttrib4NivARB;
+alias void function(GLuint, GLshort*) pfglVertexAttrib4NsvARB;
+alias void function(GLuint, GLubyte, GLubyte, GLubyte, GLubyte) pfglVertexAttrib4NubARB;
+alias void function(GLuint, GLubyte*) pfglVertexAttrib4NubvARB;
+alias void function(GLuint, GLuint*) pfglVertexAttrib4NuivARB;
+alias void function(GLuint, GLushort*) pfglVertexAttrib4NusvARB;
+alias void function(GLuint, GLbyte*) pfglVertexAttrib4bvARB;
+alias void function(GLuint, GLdouble, GLdouble, GLdouble, GLdouble) pfglVertexAttrib4dARB;
+alias void function(GLuint, GLdouble*) pfglVertexAttrib4dvARB;
+alias void function(GLuint, GLfloat, GLfloat, GLfloat, GLfloat) pfglVertexAttrib4fARB;
+alias void function(GLuint, GLfloat*) pfglVertexAttrib4fvARB;
+alias void function(GLuint, GLint*) pfglVertexAttrib4ivARB;
+alias void function(GLuint, GLshort, GLshort, GLshort, GLshort) pfglVertexAttrib4sARB;
+alias void function(GLuint, GLshort*) pfglVertexAttrib4svARB;
+alias void function(GLuint, GLubyte*) pfglVertexAttrib4ubvARB;
+alias void function(GLuint, GLuint*) pfglVertexAttrib4uivARB;
+alias void function(GLuint, GLushort*) pfglVertexAttrib4usvARB;
+alias void function(GLuint, GLint, GLenum, GLboolean, GLsizei, GLvoid*) pfglVertexAttribPointerARB;
+alias void function(GLuint) pfglEnableVertexAttribArrayARB;
+alias void function(GLuint) pfglDisableVertexAttribArrayARB;
+alias void function(GLenum, GLenum, GLsizei, GLvoid*) pfglProgramStringARB;
+alias void function(GLenum, GLuint) pfglBindProgramARB;
+alias void function(GLsizei, GLuint*) pfglDeleteProgramsARB;
+alias void function(GLsizei, GLuint*) pfglGenProgramsARB;
+alias void function(GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) pfglProgramEnvParameter4dARB;
+alias void function(GLenum, GLuint, GLdouble*) pfglProgramEnvParameter4dvARB;
+alias void function(GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) pfglProgramEnvParameter4fARB;
+alias void function(GLenum, GLuint, GLfloat*) pfglProgramEnvParameter4fvARB;
+alias void function(GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble) pfglProgramLocalParameter4dARB;
+alias void function(GLenum, GLuint, GLdouble*) pfglProgramLocalParameter4dvARB;
+alias void function(GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat) pfglProgramLocalParameter4fARB;
+alias void function(GLenum, GLuint, GLfloat*) pfglProgramLocalParameter4fvARB;
+alias void function(GLenum, GLuint, GLdouble*) pfglGetProgramEnvParameterdvARB;
+alias void function(GLenum, GLuint, GLfloat*) pfglGetProgramEnvParameterfvARB;
+alias void function(GLenum, GLuint, GLdouble*) pfglGetProgramLocalParameterdvARB;
+alias void function(GLenum, GLuint, GLfloat*) pfglGetProgramLocalParameterfvARB;
+alias void function(GLenum, GLenum, GLint*) pfglGetProgramivARB;
+alias void function(GLenum, GLenum, GLvoid*) pfglGetProgramStringARB;
+alias void function(GLuint, GLenum, GLdouble*) pfglGetVertexAttribdvARB;
+alias void function(GLuint, GLenum, GLfloat*) pfglGetVertexAttribfvARB;
+alias void function(GLuint, GLenum, GLint*) pfglGetVertexAttribivARB;
+alias void function(GLuint, GLenum, GLvoid*) pfglGetVertexAttribPointervARB;
+alias GLboolean function(GLuint) pfglIsProgramARB;
+}
 
 pfglVertexAttrib1dARB               glVertexAttrib1dARB;
 pfglVertexAttrib1dvARB              glVertexAttrib1dvARB;
Index: DerelictGL/derelict/opengl/extension/arb/point_parameters.d
===================================================================
--- DerelictGL/derelict/opengl/extension/arb/point_parameters.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/arb/point_parameters.d	(working copy)
@@ -81,10 +81,9 @@
     GL_POINT_DISTANCE_ATTENUATION_ARB = 0x8129,
 }
 
-extern(System):
-
-typedef void function(GLenum, GLfloat) pfglPointParameterfARB;
-typedef void function(GLenum, GLfloat*) pfglPointParameterfvARB;
-
+extern(System) {
+alias void function(GLenum, GLfloat) pfglPointParameterfARB;
+alias void function(GLenum, GLfloat*) pfglPointParameterfvARB;
+}
 pfglPointParameterfARB          glPointParameterfARB;
 pfglPointParameterfvARB         glPointParameterfvARB;
Index: DerelictGL/derelict/opengl/extension/arb/vertex_blend.d
===================================================================
--- DerelictGL/derelict/opengl/extension/arb/vertex_blend.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/arb/vertex_blend.d	(working copy)
@@ -135,19 +135,19 @@
     GL_MODELVIEW31_ARB                = 0x873F,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLint, GLbyte*) pfglWeightbvARB;
+alias void function(GLint, GLshort*) pfglWeightsvARB;
+alias void function(GLint, GLint*) pfglWeightivARB;
+alias void function(GLint, GLfloat*) pfglWeightfvARB;
+alias void function(GLint, GLdouble*) pfglWeightdvARB;
+alias void function(GLint, GLubyte*) pfglWeightubvARB;
+alias void function(GLint, GLushort*) pfglWeightusvARB;
+alias void function(GLint, GLuint*) pfglWeightuivARB;
+alias void function(GLint, GLenum, GLsizei, GLvoid*) pfglWeightPointerARB;
+alias void function(GLint) pfglVertexBlendARB;
+}
 
-typedef void function(GLint, GLbyte*) pfglWeightbvARB;
-typedef void function(GLint, GLshort*) pfglWeightsvARB;
-typedef void function(GLint, GLint*) pfglWeightivARB;
-typedef void function(GLint, GLfloat*) pfglWeightfvARB;
-typedef void function(GLint, GLdouble*) pfglWeightdvARB;
-typedef void function(GLint, GLubyte*) pfglWeightubvARB;
-typedef void function(GLint, GLushort*) pfglWeightusvARB;
-typedef void function(GLint, GLuint*) pfglWeightuivARB;
-typedef void function(GLint, GLenum, GLsizei, GLvoid*) pfglWeightPointerARB;
-typedef void function(GLint) pfglVertexBlendARB;
-
 pfglWeightbvARB             glWeightbvARB;
 pfglWeightsvARB             glWeightsvARB;
 pfglWeightivARB             glWeightivARB;
Index: DerelictGL/derelict/opengl/extension/arb/matrix_palette.d
===================================================================
--- DerelictGL/derelict/opengl/extension/arb/matrix_palette.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/arb/matrix_palette.d	(working copy)
@@ -93,14 +93,13 @@
     GL_MATRIX_INDEX_ARRAY_POINTER_ARB       = 0x8849,
 }
 
-extern(System):
-
-typedef void function(GLint) pfglCurrentPaletteMatrixARB;
-typedef void function(GLint, GLubyte*) pfglMatrixIndexubvARB;
-typedef void function(GLint, GLushort*) pfglMatrixIndexusvARB;
-typedef void function(GLint, GLuint*) pfglMatrixIndexuivARB;
-typedef void function(GLint, GLenum, GLsizei, GLvoid*) pfglMatrixIndexPointerARB;
-
+extern(System) {
+alias void function(GLint) pfglCurrentPaletteMatrixARB;
+alias void function(GLint, GLubyte*) pfglMatrixIndexubvARB;
+alias void function(GLint, GLushort*) pfglMatrixIndexusvARB;
+alias void function(GLint, GLuint*) pfglMatrixIndexuivARB;
+alias void function(GLint, GLenum, GLsizei, GLvoid*) pfglMatrixIndexPointerARB;
+}
 pfglCurrentPaletteMatrixARB         glCurrentPaletteMatrixARB;
 pfglMatrixIndexubvARB               glMatrixIndexubvARB;
 pfglMatrixIndexusvARB               glMatrixIndexusvARB;
Index: DerelictGL/derelict/opengl/extension/arb/occlusion_query.d
===================================================================
--- DerelictGL/derelict/opengl/extension/arb/occlusion_query.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/arb/occlusion_query.d	(working copy)
@@ -94,17 +94,17 @@
     GL_SAMPLES_PASSED_ARB             = 0x8914,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLsizei, GLuint*) pfglGenQueriesARB;
+alias void function(GLsizei, GLuint*) pfglDeleteQueriesARB;
+alias GLboolean function(GLuint) pfglIsQueryARB;
+alias void function(GLenum, GLuint) pfglBeginQueryARB;
+alias void function(GLenum) pfglEndQueryARB;
+alias void function(GLenum, GLenum, GLint*) pfglGetQueryivARB;
+alias void function(GLuint, GLenum, GLint*) pfglGetQueryObjectivARB;
+alias void function(GLuint, GLenum, GLuint*) pfglGetQueryObjectuivARB;
+}
 
-typedef void function(GLsizei, GLuint*) pfglGenQueriesARB;
-typedef void function(GLsizei, GLuint*) pfglDeleteQueriesARB;
-typedef GLboolean function(GLuint) pfglIsQueryARB;
-typedef void function(GLenum, GLuint) pfglBeginQueryARB;
-typedef void function(GLenum) pfglEndQueryARB;
-typedef void function(GLenum, GLenum, GLint*) pfglGetQueryivARB;
-typedef void function(GLuint, GLenum, GLint*) pfglGetQueryObjectivARB;
-typedef void function(GLuint, GLenum, GLuint*) pfglGetQueryObjectuivARB;
-
 pfglGenQueriesARB           glGenQueriesARB;
 pfglDeleteQueriesARB        glDeleteQueriesARB;
 pfglIsQueryARB              glIsQueryARB;
Index: DerelictGL/derelict/opengl/extension/arb/window_pos.d
===================================================================
--- DerelictGL/derelict/opengl/extension/arb/window_pos.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/arb/window_pos.d	(working copy)
@@ -101,25 +101,25 @@
     }
 }
 
-extern(System):
+extern(System) {
+alias void function(GLdouble, GLdouble) pfglWindowPos2dARB;
+alias void function(GLdouble*) pfglWindowPos2dvARB;
+alias void function(GLfloat, GLfloat) pfglWindowPos2fARB;
+alias void function(GLfloat*) pfglWindowPos2fvARB;
+alias void function(GLint, GLint) pfglWindowPost2iARB;
+alias void function(GLint*) pfglWindowPos2ivARB;
+alias void function(GLshort, GLshort) pfglWindowPos2sARB;
+alias void function(GLshort*) pfglWindowPos2svARB;
+alias void function(GLdouble, GLdouble, GLdouble) pfglWindowPos3dARB;
+alias void function(GLdouble*) pfglWindowPos3dvARB;
+alias void function(GLfloat, GLfloat, GLfloat) pfglWindowPos3fARB;
+alias void function(GLfloat*) pfglWindowPos3fvARB;
+alias void function(GLint, GLint, GLint) pfglWindowPos3iARB;
+alias void function(GLint*) pfglWindowPos3ivARB;
+alias void function(GLshort, GLshort, GLshort) pfglWindowPos3sARB;
+alias void function(GLshort*) pfglWindowPos3svARB;
+}
 
-typedef void function(GLdouble, GLdouble) pfglWindowPos2dARB;
-typedef void function(GLdouble*) pfglWindowPos2dvARB;
-typedef void function(GLfloat, GLfloat) pfglWindowPos2fARB;
-typedef void function(GLfloat*) pfglWindowPos2fvARB;
-typedef void function(GLint, GLint) pfglWindowPost2iARB;
-typedef void function(GLint*) pfglWindowPos2ivARB;
-typedef void function(GLshort, GLshort) pfglWindowPos2sARB;
-typedef void function(GLshort*) pfglWindowPos2svARB;
-typedef void function(GLdouble, GLdouble, GLdouble) pfglWindowPos3dARB;
-typedef void function(GLdouble*) pfglWindowPos3dvARB;
-typedef void function(GLfloat, GLfloat, GLfloat) pfglWindowPos3fARB;
-typedef void function(GLfloat*) pfglWindowPos3fvARB;
-typedef void function(GLint, GLint, GLint) pfglWindowPos3iARB;
-typedef void function(GLint*) pfglWindowPos3ivARB;
-typedef void function(GLshort, GLshort, GLshort) pfglWindowPos3sARB;
-typedef void function(GLshort*) pfglWindowPos3svARB;
-
 pfglWindowPos2dARB          glWindowPos2dARB;
 pfglWindowPos2dvARB         glWindowPos2dvARB;
 pfglWindowPos2fARB          glWindowPos2fARB;
@@ -135,4 +135,4 @@
 pfglWindowPos3iARB          glWindowPos3iARB;
 pfglWindowPos3ivARB         glWindowPos3ivARB;
 pfglWindowPos3sARB          glWindowPos3sARB;
-pfglWindowPos3svARB         glWindowPos3svARB;
\ No newline at end of file
+pfglWindowPos3svARB         glWindowPos3svARB;
Index: DerelictGL/derelict/opengl/extension/arb/multisample.d
===================================================================
--- DerelictGL/derelict/opengl/extension/arb/multisample.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/arb/multisample.d	(working copy)
@@ -84,8 +84,7 @@
     GL_MULTISAMPLE_BIT_ARB            = 0x20000000,
 }
 
-extern(System):
-
-typedef void function(GLclampf, GLboolean) pfglSampleCoverageARB;
-
+extern(System) {
+alias void function(GLclampf, GLboolean) pfglSampleCoverageARB;
+}
 pfglSampleCoverageARB       glSampleCoverageARB;
Index: DerelictGL/derelict/opengl/extension/arb/transpose_matrix.d
===================================================================
--- DerelictGL/derelict/opengl/extension/arb/transpose_matrix.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/arb/transpose_matrix.d	(working copy)
@@ -85,13 +85,13 @@
     GL_TRANSPOSE_COLOR_MATRIX_ARB      = 0x84E6,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLfloat*) pfglLoadTransposeMatrixfARB;
+alias void function(GLdouble*) pfglLoadTransposeMatrixdARB;
+alias void function(GLfloat*) pfglMultTransposeMatrixfARB;
+alias void function(GLdouble*) pfglMultTransposeMatrixdARB;
+}
 
-typedef void function(GLfloat*) pfglLoadTransposeMatrixfARB;
-typedef void function(GLdouble*) pfglLoadTransposeMatrixdARB;
-typedef void function(GLfloat*) pfglMultTransposeMatrixfARB;
-typedef void function(GLdouble*) pfglMultTransposeMatrixdARB;
-
 pfglLoadTransposeMatrixfARB             glLoadTransposeMatrixfARB;
 pfglLoadTransposeMatrixdARB             glLoadTransposeMatrixdARB;
 pfglMultTransposeMatrixfARB             glMultTransposeMatrixfARB;
Index: DerelictGL/derelict/opengl/extension/arb/draw_buffers.d
===================================================================
--- DerelictGL/derelict/opengl/extension/arb/draw_buffers.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/arb/draw_buffers.d	(working copy)
@@ -92,8 +92,7 @@
     GL_DRAW_BUFFER15_ARB              = 0x8834,
 }
 
-extern(System):
-
-typedef void function(GLsizei, GLenum*) pfglDrawBuffersARB;
-
+extern(System) {
+alias void function(GLsizei, GLenum*) pfglDrawBuffersARB;
+}
 pfglDrawBuffersARB          glDrawBuffersARB;
Index: DerelictGL/derelict/opengl/extension/arb/multitexture.d
===================================================================
--- DerelictGL/derelict/opengl/extension/arb/multitexture.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/arb/multitexture.d	(working copy)
@@ -177,43 +177,43 @@
     GL_MAX_TEXTURE_UNITS_ARB          = 0x84E2,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum) pfglActiveTextureARB;
+alias void function(GLenum) pfglClientActiveTextureARB;
+alias void function(GLenum, GLdouble) pfglMultiTexCoord1dARB;
+alias void function(GLenum, GLdouble*) pfglMultiTexCoord1dvARB;
+alias void function(GLenum, GLfloat) pfglMultiTexCoord1fARB;
+alias void function(GLenum, GLfloat*) pfglMultiTexCoord1fvARB;
+alias void function(GLenum, GLint) pfglMultiTexCoord1iARB;
+alias void function(GLenum, GLint*) pfglMultiTexCoord1ivARB;
+alias void function(GLenum, GLshort) pfglMultiTexCoord1sARB;
+alias void function(GLenum, GLshort*) pfglMultiTexCoord1svARB;
+alias void function(GLenum, GLdouble, GLdouble) pfglMultiTexCoord2dARB;
+alias void function(GLenum, GLdouble*) pfglMultiTexCoord2dvARB;
+alias void function(GLenum, GLfloat, GLfloat) pfglMultiTexCoord2fARB;
+alias void function(GLenum, GLfloat*) pfglMultiTexCoord2fvARB;
+alias void function(GLenum, GLint, GLint) pfglMultiTexCoord2iARB;
+alias void function(GLenum, GLint*) pfglMultiTexCoord2ivARB;
+alias void function(GLenum, GLshort, GLshort) pfglMultiTexCoord2sARB;
+alias void function(GLenum, GLshort*) pfglMultiTexCoord2svARB;
+alias void function(GLenum, GLdouble, GLdouble, GLdouble) pfglMultiTexCoord3dARB;
+alias void function(GLenum, GLdouble*) pfglMultiTexCoord3dvARB;
+alias void function(GLenum, GLfloat, GLfloat, GLfloat) pfglMultiTexCoord3fARB;
+alias void function(GLenum, GLfloat*) pfglMultiTexCoord3fvARB;
+alias void function(GLenum, GLint, GLint, GLint) pfglMultiTexCoord3iARB;
+alias void function(GLenum, GLint*) pfglMultiTexCoord3ivARB;
+alias void function(GLenum, GLshort, GLshort, GLshort) pfglMultiTexCoord3sARB;
+alias void function(GLenum, GLshort*) pfglMultiTexCoord3svARB;
+alias void function(GLenum, GLdouble, GLdouble, GLdouble, GLdouble) pfglMultiTexCoord4dARB;
+alias void function(GLenum, GLdouble*) pfglMultiTexCoord4dvARB;
+alias void function(GLenum, GLfloat, GLfloat, GLfloat, GLfloat) pfglMultiTexCoord4fARB;
+alias void function(GLenum, GLfloat*) pfglMultiTexCoord4fvARB;
+alias void function(GLenum, GLint, GLint, GLint, GLint) pfglMultiTexCoord4iARB;
+alias void function(GLenum, GLint*) pfglMultiTexCoord4ivARB;
+alias void function(GLenum, GLshort, GLshort, GLshort, GLshort) pfglMultiTexCoord4sARB;
+alias void function(GLenum, GLshort*) pfglMultiTexCoord4svARB;
+}
 
-typedef void function(GLenum) pfglActiveTextureARB;
-typedef void function(GLenum) pfglClientActiveTextureARB;
-typedef void function(GLenum, GLdouble) pfglMultiTexCoord1dARB;
-typedef void function(GLenum, GLdouble*) pfglMultiTexCoord1dvARB;
-typedef void function(GLenum, GLfloat) pfglMultiTexCoord1fARB;
-typedef void function(GLenum, GLfloat*) pfglMultiTexCoord1fvARB;
-typedef void function(GLenum, GLint) pfglMultiTexCoord1iARB;
-typedef void function(GLenum, GLint*) pfglMultiTexCoord1ivARB;
-typedef void function(GLenum, GLshort) pfglMultiTexCoord1sARB;
-typedef void function(GLenum, GLshort*) pfglMultiTexCoord1svARB;
-typedef void function(GLenum, GLdouble, GLdouble) pfglMultiTexCoord2dARB;
-typedef void function(GLenum, GLdouble*) pfglMultiTexCoord2dvARB;
-typedef void function(GLenum, GLfloat, GLfloat) pfglMultiTexCoord2fARB;
-typedef void function(GLenum, GLfloat*) pfglMultiTexCoord2fvARB;
-typedef void function(GLenum, GLint, GLint) pfglMultiTexCoord2iARB;
-typedef void function(GLenum, GLint*) pfglMultiTexCoord2ivARB;
-typedef void function(GLenum, GLshort, GLshort) pfglMultiTexCoord2sARB;
-typedef void function(GLenum, GLshort*) pfglMultiTexCoord2svARB;
-typedef void function(GLenum, GLdouble, GLdouble, GLdouble) pfglMultiTexCoord3dARB;
-typedef void function(GLenum, GLdouble*) pfglMultiTexCoord3dvARB;
-typedef void function(GLenum, GLfloat, GLfloat, GLfloat) pfglMultiTexCoord3fARB;
-typedef void function(GLenum, GLfloat*) pfglMultiTexCoord3fvARB;
-typedef void function(GLenum, GLint, GLint, GLint) pfglMultiTexCoord3iARB;
-typedef void function(GLenum, GLint*) pfglMultiTexCoord3ivARB;
-typedef void function(GLenum, GLshort, GLshort, GLshort) pfglMultiTexCoord3sARB;
-typedef void function(GLenum, GLshort*) pfglMultiTexCoord3svARB;
-typedef void function(GLenum, GLdouble, GLdouble, GLdouble, GLdouble) pfglMultiTexCoord4dARB;
-typedef void function(GLenum, GLdouble*) pfglMultiTexCoord4dvARB;
-typedef void function(GLenum, GLfloat, GLfloat, GLfloat, GLfloat) pfglMultiTexCoord4fARB;
-typedef void function(GLenum, GLfloat*) pfglMultiTexCoord4fvARB;
-typedef void function(GLenum, GLint, GLint, GLint, GLint) pfglMultiTexCoord4iARB;
-typedef void function(GLenum, GLint*) pfglMultiTexCoord4ivARB;
-typedef void function(GLenum, GLshort, GLshort, GLshort, GLshort) pfglMultiTexCoord4sARB;
-typedef void function(GLenum, GLshort*) pfglMultiTexCoord4svARB;
-
 pfglActiveTextureARB            glActiveTextureARB;
 pfglClientActiveTextureARB      glClientActiveTextureARB;
 pfglMultiTexCoord1dARB          glMultiTexCoord1dARB;
Index: DerelictGL/derelict/opengl/extension/arb/shader_objects.d
===================================================================
--- DerelictGL/derelict/opengl/extension/arb/shader_objects.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/arb/shader_objects.d	(working copy)
@@ -188,48 +188,48 @@
 alias char GLcharARB;
 alias uint GLhandleARB;
 
-extern(System):
+extern(System) {
+alias void function(GLhandleARB) pfglDeleteObjectARB;
+alias GLhandleARB function(GLenum) pfglGetHandleARB;
+alias void function(GLhandleARB, GLhandleARB) pfglDetachObjectARB;
+alias GLhandleARB function(GLenum) pfglCreateShaderObjectARB;
+alias void function(GLhandleARB, GLsizei, GLcharARB**, GLint*) pfglShaderSourceARB;
+alias void function(GLhandleARB) pfglCompileShaderARB;
+alias GLhandleARB function() pfglCreateProgramObjectARB;
+alias void function(GLhandleARB, GLhandleARB) pfglAttachObjectARB;
+alias void function(GLhandleARB) pfglLinkProgramARB;
+alias void function(GLhandleARB) pfglUseProgramObjectARB;
+alias void function(GLhandleARB) pfglValidateProgramARB;
+alias void function(GLint, GLfloat) pfglUniform1fARB;
+alias void function(GLint, GLfloat, GLfloat) pfglUniform2fARB;
+alias void function(GLint, GLfloat, GLfloat, GLfloat) pfglUniform3fARB;
+alias void function(GLint, GLfloat, GLfloat, GLfloat, GLfloat) pfglUniform4fARB;
+alias void function(GLint, GLint) pfglUniform1iARB;
+alias void function(GLint, GLint, GLint) pfglUniform2iARB;
+alias void function(GLint, GLint, GLint, GLint) pfglUniform3iARB;
+alias void function(GLint, GLint, GLint, GLint, GLint) pfglUniform4iARB;
+alias void function(GLint, GLsizei, GLfloat*) pfglUniform1fvARB;
+alias void function(GLint, GLsizei, GLfloat*) pfglUniform2fvARB;
+alias void function(GLint, GLsizei, GLfloat*) pfglUniform3fvARB;
+alias void function(GLint, GLsizei, GLfloat*) pfglUniform4fvARB;
+alias void function(GLint, GLsizei, GLint*) pfglUniform1ivARB;
+alias void function(GLint, GLsizei, GLint*) pfglUniform2ivARB;
+alias void function(GLint, GLsizei, GLint*) pfglUniform3ivARB;
+alias void function(GLint, GLsizei, GLint*) pfglUniform4ivARB;
+alias void function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix2fvARB;
+alias void function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix3fvARB;
+alias void function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix4fvARB;
+alias void function(GLhandleARB, GLenum, GLfloat*) pfglGetObjectParameterfvARB;
+alias void function(GLhandleARB, GLenum, GLint*) pfglGetObjectParameterivARB;
+alias void function(GLhandleARB, GLsizei, GLsizei*, GLcharARB*) pfglGetInfoLogARB;
+alias void function(GLhandleARB, GLsizei, GLsizei*, GLhandleARB*) pfglGetAttachedObjectsARB;
+alias GLint function(GLhandleARB, GLcharARB*) pfglGetUniformLocationARB;
+alias void function(GLhandleARB, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLcharARB*) pfglGetActiveUniformARB;
+alias void function(GLhandleARB, GLint, GLfloat*) pfglGetUniformfvARB;
+alias void function(GLhandleARB, GLint, GLint*) pfglGetUniformivARB;
+alias void function(GLhandleARB, GLsizei, GLsizei*, GLcharARB*) pfglGetShaderSourceARB;
+}
 
-typedef void function(GLhandleARB) pfglDeleteObjectARB;
-typedef GLhandleARB function(GLenum) pfglGetHandleARB;
-typedef void function(GLhandleARB, GLhandleARB) pfglDetachObjectARB;
-typedef GLhandleARB function(GLenum) pfglCreateShaderObjectARB;
-typedef void function(GLhandleARB, GLsizei, GLcharARB**, GLint*) pfglShaderSourceARB;
-typedef void function(GLhandleARB) pfglCompileShaderARB;
-typedef GLhandleARB function() pfglCreateProgramObjectARB;
-typedef void function(GLhandleARB, GLhandleARB) pfglAttachObjectARB;
-typedef void function(GLhandleARB) pfglLinkProgramARB;
-typedef void function(GLhandleARB) pfglUseProgramObjectARB;
-typedef void function(GLhandleARB) pfglValidateProgramARB;
-typedef void function(GLint, GLfloat) pfglUniform1fARB;
-typedef void function(GLint, GLfloat, GLfloat) pfglUniform2fARB;
-typedef void function(GLint, GLfloat, GLfloat, GLfloat) pfglUniform3fARB;
-typedef void function(GLint, GLfloat, GLfloat, GLfloat, GLfloat) pfglUniform4fARB;
-typedef void function(GLint, GLint) pfglUniform1iARB;
-typedef void function(GLint, GLint, GLint) pfglUniform2iARB;
-typedef void function(GLint, GLint, GLint, GLint) pfglUniform3iARB;
-typedef void function(GLint, GLint, GLint, GLint, GLint) pfglUniform4iARB;
-typedef void function(GLint, GLsizei, GLfloat*) pfglUniform1fvARB;
-typedef void function(GLint, GLsizei, GLfloat*) pfglUniform2fvARB;
-typedef void function(GLint, GLsizei, GLfloat*) pfglUniform3fvARB;
-typedef void function(GLint, GLsizei, GLfloat*) pfglUniform4fvARB;
-typedef void function(GLint, GLsizei, GLint*) pfglUniform1ivARB;
-typedef void function(GLint, GLsizei, GLint*) pfglUniform2ivARB;
-typedef void function(GLint, GLsizei, GLint*) pfglUniform3ivARB;
-typedef void function(GLint, GLsizei, GLint*) pfglUniform4ivARB;
-typedef void function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix2fvARB;
-typedef void function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix3fvARB;
-typedef void function(GLint, GLsizei, GLboolean, GLfloat*) pfglUniformMatrix4fvARB;
-typedef void function(GLhandleARB, GLenum, GLfloat*) pfglGetObjectParameterfvARB;
-typedef void function(GLhandleARB, GLenum, GLint*) pfglGetObjectParameterivARB;
-typedef void function(GLhandleARB, GLsizei, GLsizei*, GLcharARB*) pfglGetInfoLogARB;
-typedef void function(GLhandleARB, GLsizei, GLsizei*, GLhandleARB*) pfglGetAttachedObjectsARB;
-typedef GLint function(GLhandleARB, GLcharARB*) pfglGetUniformLocationARB;
-typedef void function(GLhandleARB, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLcharARB*) pfglGetActiveUniformARB;
-typedef void function(GLhandleARB, GLint, GLfloat*) pfglGetUniformfvARB;
-typedef void function(GLhandleARB, GLint, GLint*) pfglGetUniformivARB;
-typedef void function(GLhandleARB, GLsizei, GLsizei*, GLcharARB*) pfglGetShaderSourceARB;
-
 pfglDeleteObjectARB                     glDeleteObjectARB;
 pfglGetHandleARB                        glGetHandleARB;
 pfglDetachObjectARB                     glDetachObjectARB;
Index: DerelictGL/derelict/opengl/extension/arb/texture_compression.d
===================================================================
--- DerelictGL/derelict/opengl/extension/arb/texture_compression.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/arb/texture_compression.d	(working copy)
@@ -98,16 +98,16 @@
     GL_COMPRESSED_TEXTURE_FORMATS_ARB      = 0x86A3,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, GLvoid*) pfglCompressedTexImage3DARB;
+alias void function(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLvoid*) pfglCompressedTexImage2DARB;
+alias void function(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, GLvoid*) pfglCompressedTexImage1DARB;
+alias void function(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*) pfglCompressedTexSubImage3DARB;
+alias void function(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*) pfglCompressedTexSubImage2DARB;
+alias void function(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, GLvoid*) pfglCompressedTexSubImage1DARB;
+alias void function(GLenum, GLint, GLvoid*) pfglGetCompressedTexImageARB;
+}
 
-typedef void function(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, GLvoid*) pfglCompressedTexImage3DARB;
-typedef void function(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLvoid*) pfglCompressedTexImage2DARB;
-typedef void function(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, GLvoid*) pfglCompressedTexImage1DARB;
-typedef void function(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*) pfglCompressedTexSubImage3DARB;
-typedef void function(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*) pfglCompressedTexSubImage2DARB;
-typedef void function(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, GLvoid*) pfglCompressedTexSubImage1DARB;
-typedef void function(GLenum, GLint, GLvoid*) pfglGetCompressedTexImageARB;
-
 pfglCompressedTexImage3DARB         glCompressedTexImage3DARB;
 pfglCompressedTexImage2DARB         glCompressedTexImage2DARB;
 pfglCompressedTexImage1DARB         glCompressedTexImage1DARB;
Index: DerelictGL/derelict/opengl/extension/arb/vertex_buffer_object.d
===================================================================
--- DerelictGL/derelict/opengl/extension/arb/vertex_buffer_object.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/arb/vertex_buffer_object.d	(working copy)
@@ -129,20 +129,20 @@
     GL_DYNAMIC_COPY_ARB                            = 0x88EA,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLuint) pfglBindBufferARB;
+alias void function(GLsizei, GLuint*) pfglDeleteBuffersARB;
+alias void function(GLsizei, GLuint*) pfglGenBuffersARB;
+alias GLboolean function(GLuint) pfglIsBufferARB;
+alias void function(GLenum, GLsizeiptrARB, GLvoid*, GLenum) pfglBufferDataARB;
+alias void function(GLenum, GLintptrARB, GLsizeiptrARB, GLvoid*) pfglBufferSubDataARB;
+alias void function(GLenum, GLintptrARB, GLsizeiptrARB, GLvoid*) pfglGetBufferSubDataARB;
+alias GLvoid* function(GLenum, GLenum) pfglMapBufferARB;
+alias GLboolean function(GLenum) pfglUnmapBufferARB;
+alias void function(GLenum, GLenum, GLint*) pfglGetBufferParameterivARB;
+alias void function(GLenum, GLenum, GLvoid*) pfglGetBufferPointervARB;
+}
 
-typedef void function(GLenum, GLuint) pfglBindBufferARB;
-typedef void function(GLsizei, GLuint*) pfglDeleteBuffersARB;
-typedef void function(GLsizei, GLuint*) pfglGenBuffersARB;
-typedef GLboolean function(GLuint) pfglIsBufferARB;
-typedef void function(GLenum, GLsizeiptrARB, GLvoid*, GLenum) pfglBufferDataARB;
-typedef void function(GLenum, GLintptrARB, GLsizeiptrARB, GLvoid*) pfglBufferSubDataARB;
-typedef void function(GLenum, GLintptrARB, GLsizeiptrARB, GLvoid*) pfglGetBufferSubDataARB;
-typedef GLvoid* function(GLenum, GLenum) pfglMapBufferARB;
-typedef GLboolean function(GLenum) pfglUnmapBufferARB;
-typedef void function(GLenum, GLenum, GLint*) pfglGetBufferParameterivARB;
-typedef void function(GLenum, GLenum, GLvoid*) pfglGetBufferPointervARB;
-
 pfglBindBufferARB               glBindBufferARB;
 pfglDeleteBuffersARB            glDeleteBuffersARB;
 pfglGenBuffersARB               glGenBuffersARB;
Index: DerelictGL/derelict/opengl/extension/arb/color_buffer_float.d
===================================================================
--- DerelictGL/derelict/opengl/extension/arb/color_buffer_float.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/arb/color_buffer_float.d	(working copy)
@@ -80,8 +80,7 @@
     GL_FIXED_ONLY_COLOR_ARB            = 0x891D,
 }
 
-extern(System):
-
-typedef void function(GLenum,GLenum) pfglClampColorARB;
-
+extern(System) {
+alias void function(GLenum,GLenum) pfglClampColorARB;
+}
 pfglClampColorARB       glClampColorARB;
Index: DerelictGL/derelict/opengl/extension/loader.d
===================================================================
--- DerelictGL/derelict/opengl/extension/loader.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/loader.d	(working copy)
@@ -29,8 +29,8 @@
  * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
-module derelict.opengl.extension.loader;
-
+module derelict.opengl.extension.loader;
+
 private
 {
     version(Windows)
@@ -45,20 +45,20 @@
         import derelict.util.exception;
         import derelict.opengl.glfuncs;
     }
-    
+
     version(UsingGLX)
     {
         import derelict.opengl.glx;
     }
 
     import derelict.util.wrapper;
-}
+}
 
 bool glBindExtFunc(void **ptr, char[] funcName)
 {
     version(Windows)
         *ptr = wglGetProcAddress(toCString(funcName));
-    else version(UsingGLX)
+    else version(UsingGLX)
         *ptr = glXGetProcAddress(toCString(funcName));
     else version(darwin)
     {
@@ -72,5 +72,4 @@
         }
     }
     return (*ptr !is null);
-}
-
+}
Index: DerelictGL/derelict/opengl/extension/ati/vertex_array_object.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ati/vertex_array_object.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ati/vertex_array_object.d	(working copy)
@@ -106,21 +106,20 @@
     GL_ARRAY_OBJECT_OFFSET_ATI        = 0x8767,
 }
 
-extern(System):
-
-typedef GLuint function(GLsizei, GLvoid *, GLenum)                    pfglNewObjectBufferATI;
-typedef GLboolean function(GLuint)                                    pfglIsObjectBufferATI;
-typedef void function(GLuint, GLuint, GLsizei, GLvoid *, GLenum)      pfglUpdateObjectBufferATI;
-typedef void function(GLuint, GLenum, GLfloat *)                      pfglGetObjectBufferfvATI;
-typedef void function(GLuint, GLenum, GLint *)                        pfglGetObjectBufferivATI;
-typedef void function(GLuint)                                         pfglFreeObjectBufferATI;
-typedef void function(GLenum, GLint, GLenum, GLsizei, GLuint, GLuint) pfglArrayObjectATI;
-typedef void function(GLenum, GLenum, GLfloat *)                      pfglGetArrayObjectfvATI;
-typedef void function(GLenum, GLenum, GLint *)                        pfglGetArrayObjectivATI;
-typedef void function(GLuint, GLenum, GLsizei, GLuint, GLuint)        pfglVariantArrayObjectATI;
-typedef void function(GLuint, GLenum, GLfloat *)                      pfglGetVariantArrayObjectfvATI;
-typedef void function(GLuint, GLenum, GLint *)                        pfglGetVariantArrayObjectivATI;
-
+extern(System) {
+alias GLuint function(GLsizei, GLvoid *, GLenum)                    pfglNewObjectBufferATI;
+alias GLboolean function(GLuint)                                    pfglIsObjectBufferATI;
+alias void function(GLuint, GLuint, GLsizei, GLvoid *, GLenum)      pfglUpdateObjectBufferATI;
+alias void function(GLuint, GLenum, GLfloat *)                      pfglGetObjectBufferfvATI;
+alias void function(GLuint, GLenum, GLint *)                        pfglGetObjectBufferivATI;
+alias void function(GLuint)                                         pfglFreeObjectBufferATI;
+alias void function(GLenum, GLint, GLenum, GLsizei, GLuint, GLuint) pfglArrayObjectATI;
+alias void function(GLenum, GLenum, GLfloat *)                      pfglGetArrayObjectfvATI;
+alias void function(GLenum, GLenum, GLint *)                        pfglGetArrayObjectivATI;
+alias void function(GLuint, GLenum, GLsizei, GLuint, GLuint)        pfglVariantArrayObjectATI;
+alias void function(GLuint, GLenum, GLfloat *)                      pfglGetVariantArrayObjectfvATI;
+alias void function(GLuint, GLenum, GLint *)                        pfglGetVariantArrayObjectivATI;
+}
 pfglNewObjectBufferATI          glNewObjectBufferATI;
 pfglIsObjectBufferATI           glIsObjectBufferATI;
 pfglUpdateObjectBufferATI       glUpdateObjectBufferATI;
Index: DerelictGL/derelict/opengl/extension/ati/vertex_attrib_array_object.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ati/vertex_attrib_array_object.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ati/vertex_attrib_array_object.d	(working copy)
@@ -76,12 +76,11 @@
     }
 }
 
-extern(System):
-
-typedef void function(GLuint, GLint, GLenum, GLboolean, GLsizei, GLuint, GLuint) pfglVertexAttribArrayObjectATI;
-typedef void function(GLuint, GLenum, GLfloat *)                                 pfglGetVertexAttribArrayObjectfvATI;
-typedef void function(GLuint, GLenum, GLint *)                                   pfglGetVertexAttribArrayObjectivATI;
-
+extern(System) {
+alias void function(GLuint, GLint, GLenum, GLboolean, GLsizei, GLuint, GLuint) pfglVertexAttribArrayObjectATI;
+alias void function(GLuint, GLenum, GLfloat *)                                 pfglGetVertexAttribArrayObjectfvATI;
+alias void function(GLuint, GLenum, GLint *)                                   pfglGetVertexAttribArrayObjectivATI;
+}
 pfglVertexAttribArrayObjectATI          glVertexAttribArrayObjectATI;
 pfglGetVertexAttribArrayObjectfvATI     glGetVertexAttribArrayObjectfvATI;
 pfglGetVertexAttribArrayObjectivATI     glGetVertexAttribArrayObjectivATI;
Index: DerelictGL/derelict/opengl/extension/ati/envmap_bumpmap.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ati/envmap_bumpmap.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ati/envmap_bumpmap.d	(working copy)
@@ -90,13 +90,12 @@
     GL_BUMP_TARGET_ATI                = 0x877C,
 }
 
-extern(System):
-
-typedef void function(GLenum, GLint *) pfglTexBumpParameterivATI;
-typedef void function(GLenum, GLfloat *) pfglTexBumpParameterfvATI;
-typedef void function(GLenum, GLint *) pfglGetTexBumpParameterivATI;
-typedef void function(GLenum, GLfloat *) pfglGetTexBumpParameterfvATI;
-
+extern(System) {
+alias void function(GLenum, GLint *) pfglTexBumpParameterivATI;
+alias void function(GLenum, GLfloat *) pfglTexBumpParameterfvATI;
+alias void function(GLenum, GLint *) pfglGetTexBumpParameterivATI;
+alias void function(GLenum, GLfloat *) pfglGetTexBumpParameterfvATI;
+}
 pfglTexBumpParameterivATI       glTexBumpParameterivATI;
 pfglTexBumpParameterfvATI       glTexBumpParameterfvATI;
 pfglGetTexBumpParameterivATI     glGetTexBumpParameterivATI;
Index: DerelictGL/derelict/opengl/extension/ati/draw_buffers.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ati/draw_buffers.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ati/draw_buffers.d	(working copy)
@@ -93,9 +93,8 @@
     GL_DRAW_BUFFER15_ATI             = 0x8834,
 }
 
-extern(System):
-
-typedef void function(GLsizei, GLenum *) pfglDrawBuffersATI;
-
+extern(System) {
+alias void function(GLsizei, GLenum *) pfglDrawBuffersATI;
+}
 pfglDrawBuffersATI     glDrawBuffersATI;
 
Index: DerelictGL/derelict/opengl/extension/ati/vertex_streams.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ati/vertex_streams.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ati/vertex_streams.d	(working copy)
@@ -174,59 +174,58 @@
     GL_VERTEX_SOURCE_ATI              = 0x8774,
 }
 
-extern(System):
+extern(System) {
+alias void function(GLenum, GLshort)             pfglVertexStream1sATI;
+alias void function(GLenum, GLshort *)           pfglVertexStream1svATI;
+alias void function(GLenum, GLint)               pfglVertexStream1iATI;
+alias void function(GLenum, GLint *)             pfglVertexStream1ivATI;
+alias void function(GLenum, GLfloat)             pfglVertexStream1fATI;
+alias void function(GLenum, GLfloat *)           pfglVertexStream1fvATI;
+alias void function(GLenum, GLdouble)            pfglVertexStream1dATI;
+alias void function(GLenum, GLdouble *)          pfglVertexStream1dvATI;
 
-typedef void function(GLenum, GLshort)             pfglVertexStream1sATI;
-typedef void function(GLenum, GLshort *)           pfglVertexStream1svATI;
-typedef void function(GLenum, GLint)               pfglVertexStream1iATI;
-typedef void function(GLenum, GLint *)             pfglVertexStream1ivATI;
-typedef void function(GLenum, GLfloat)             pfglVertexStream1fATI;
-typedef void function(GLenum, GLfloat *)           pfglVertexStream1fvATI;
-typedef void function(GLenum, GLdouble)            pfglVertexStream1dATI;
-typedef void function(GLenum, GLdouble *)          pfglVertexStream1dvATI;
+alias void function(GLenum, GLshort, GLshort)    pfglVertexStream2sATI;
+alias void function(GLenum, GLshort *)           pfglVertexStream2svATI;
+alias void function(GLenum, GLint, GLint)        pfglVertexStream2iATI;
+alias void function(GLenum, GLint *)             pfglVertexStream2ivATI;
+alias void function(GLenum, GLfloat, GLfloat)    pfglVertexStream2fATI;
+alias void function(GLenum, GLfloat *)           pfglVertexStream2fvATI;
+alias void function(GLenum, GLdouble, GLdouble)  pfglVertexStream2dATI;
+alias void function(GLenum, GLdouble *)          pfglVertexStream2dvATI;
 
-typedef void function(GLenum, GLshort, GLshort)    pfglVertexStream2sATI;
-typedef void function(GLenum, GLshort *)           pfglVertexStream2svATI;
-typedef void function(GLenum, GLint, GLint)        pfglVertexStream2iATI;
-typedef void function(GLenum, GLint *)             pfglVertexStream2ivATI;
-typedef void function(GLenum, GLfloat, GLfloat)    pfglVertexStream2fATI;
-typedef void function(GLenum, GLfloat *)           pfglVertexStream2fvATI;
-typedef void function(GLenum, GLdouble, GLdouble)  pfglVertexStream2dATI;
-typedef void function(GLenum, GLdouble *)          pfglVertexStream2dvATI;
+alias void function(GLenum, GLshort, GLshort, GLshort)    pfglVertexStream3sATI;
+alias void function(GLenum, GLshort *)                    pfglVertexStream3svATI;
+alias void function(GLenum, GLint, GLint, GLint)          pfglVertexStream3iATI;
+alias void function(GLenum, GLint *)                      pfglVertexStream3ivATI;
+alias void function(GLenum, GLfloat, GLfloat, GLfloat)    pfglVertexStream3fATI;
+alias void function(GLenum, GLfloat *)                    pfglVertexStream3fvATI;
+alias void function(GLenum, GLdouble, GLdouble, GLdouble) pfglVertexStream3dATI;
+alias void function(GLenum, GLdouble *)                   pfglVertexStream3dvATI;
 
-typedef void function(GLenum, GLshort, GLshort, GLshort)    pfglVertexStream3sATI;
-typedef void function(GLenum, GLshort *)                    pfglVertexStream3svATI;
-typedef void function(GLenum, GLint, GLint, GLint)          pfglVertexStream3iATI;
-typedef void function(GLenum, GLint *)                      pfglVertexStream3ivATI;
-typedef void function(GLenum, GLfloat, GLfloat, GLfloat)    pfglVertexStream3fATI;
-typedef void function(GLenum, GLfloat *)                    pfglVertexStream3fvATI;
-typedef void function(GLenum, GLdouble, GLdouble, GLdouble) pfglVertexStream3dATI;
-typedef void function(GLenum, GLdouble *)                   pfglVertexStream3dvATI;
+alias void function(GLenum, GLshort, GLshort, GLshort, GLshort)     pfglVertexStream4sATI;
+alias void function(GLenum, GLshort *)                              pfglVertexStream4svATI;
+alias void function(GLenum, GLint, GLint, GLint, GLint)             pfglVertexStream4iATI;
+alias void function(GLenum, GLint *)                                pfglVertexStream4ivATI;
+alias void function(GLenum, GLfloat, GLfloat, GLfloat, GLfloat)     pfglVertexStream4fATI;
+alias void function(GLenum, GLfloat *)                              pfglVertexStream4fvATI;
+alias void function(GLenum, GLdouble, GLdouble, GLdouble, GLdouble) pfglVertexStream4dATI;
+alias void function(GLenum, GLdouble *)                             pfglVertexStream4dvATI;
 
-typedef void function(GLenum, GLshort, GLshort, GLshort, GLshort)     pfglVertexStream4sATI;
-typedef void function(GLenum, GLshort *)                              pfglVertexStream4svATI;
-typedef void function(GLenum, GLint, GLint, GLint, GLint)             pfglVertexStream4iATI;
-typedef void function(GLenum, GLint *)                                pfglVertexStream4ivATI;
-typedef void function(GLenum, GLfloat, GLfloat, GLfloat, GLfloat)     pfglVertexStream4fATI;
-typedef void function(GLenum, GLfloat *)                              pfglVertexStream4fvATI;
-typedef void function(GLenum, GLdouble, GLdouble, GLdouble, GLdouble) pfglVertexStream4dATI;
-typedef void function(GLenum, GLdouble *)                             pfglVertexStream4dvATI;
+alias void function(GLenum, GLbyte, GLbyte, GLbyte)       pfglNormalStream3bATI;
+alias void function(GLenum, GLbyte *)                     pfglNormalStream3bvATI;
+alias void function(GLenum, GLshort, GLshort, GLshort)    pfglNormalStream3sATI;
+alias void function(GLenum, GLshort *)                    pfglNormalStream3svATI;
+alias void function(GLenum, GLint, GLint, GLint)          pfglNormalStream3iATI;
+alias void function(GLenum, GLint *)                      pfglNormalStream3ivATI;
+alias void function(GLenum, GLfloat, GLfloat, GLfloat)    pfglNormalStream3fATI;
+alias void function(GLenum, GLfloat *)                    pfglNormalStream3fvATI;
+alias void function(GLenum, GLdouble, GLdouble, GLdouble) pfglNormalStream3dATI;
+alias void function(GLenum, GLdouble *)                   pfglNormalStream3dvATI;
 
-typedef void function(GLenum, GLbyte, GLbyte, GLbyte)       pfglNormalStream3bATI;
-typedef void function(GLenum, GLbyte *)                     pfglNormalStream3bvATI;
-typedef void function(GLenum, GLshort, GLshort, GLshort)    pfglNormalStream3sATI;
-typedef void function(GLenum, GLshort *)                    pfglNormalStream3svATI;
-typedef void function(GLenum, GLint, GLint, GLint)          pfglNormalStream3iATI;
-typedef void function(GLenum, GLint *)                      pfglNormalStream3ivATI;
-typedef void function(GLenum, GLfloat, GLfloat, GLfloat)    pfglNormalStream3fATI;
-typedef void function(GLenum, GLfloat *)                    pfglNormalStream3fvATI;
-typedef void function(GLenum, GLdouble, GLdouble, GLdouble) pfglNormalStream3dATI;
-typedef void function(GLenum, GLdouble *)                   pfglNormalStream3dvATI;
-
-typedef void function(GLenum)                   pfglClientActiveVertexStreamATI;
-typedef void function(GLenum, GLint)            pfglVertexBlendEnviATI;
-typedef void function(GLenum, GLfloat)          pfglVertexBlendEnvfATI;
-
+alias void function(GLenum)                   pfglClientActiveVertexStreamATI;
+alias void function(GLenum, GLint)            pfglVertexBlendEnviATI;
+alias void function(GLenum, GLfloat)          pfglVertexBlendEnvfATI;
+}
 pfglVertexStream1sATI       glVertexStream1sATI;
 pfglVertexStream1svATI      glVertexStream1svATI;
 pfglVertexStream1iATI       glVertexStream1iATI;
Index: DerelictGL/derelict/opengl/extension/ati/separate_stencil.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ati/separate_stencil.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ati/separate_stencil.d	(working copy)
@@ -82,11 +82,10 @@
     GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI  = 0x8803,
 }
 
-extern(System):
-
-typedef void function(GLenum, GLenum, GLenum, GLenum) pfglStencilOpSeparateATI;
-typedef void function(GLenum, GLenum, GLint, GLuint) pfglStencilFuncSeparateATI;
-
+extern(System) {
+alias void function(GLenum, GLenum, GLenum, GLenum) pfglStencilOpSeparateATI;
+alias void function(GLenum, GLenum, GLint, GLuint) pfglStencilFuncSeparateATI;
+}
 pfglStencilOpSeparateATI       glStencilOpSeparateATI;
 pfglStencilFuncSeparateATI     glStencilFuncSeparateATI;
 
Index: DerelictGL/derelict/opengl/extension/ati/pn_triangles.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ati/pn_triangles.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ati/pn_triangles.d	(working copy)
@@ -87,11 +87,10 @@
     GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI   = 0x87F8,
 }
 
-extern(System):
-
-typedef void function(GLenum, GLint) pfglPNTrianglesiATI;
-typedef void function(GLenum, GLfloat) pfglPNTrianglesfATI;
-
+extern(System) {
+alias void function(GLenum, GLint) pfglPNTrianglesiATI;
+alias void function(GLenum, GLfloat) pfglPNTrianglesfATI;
+}
 pfglPNTrianglesiATI     glPNTrianglesiATI;
 pfglPNTrianglesfATI     glPNTrianglesfATI;
 
Index: DerelictGL/derelict/opengl/extension/ati/element_array.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ati/element_array.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ati/element_array.d	(working copy)
@@ -83,12 +83,11 @@
     GL_ELEMENT_ARRAY_POINTER_ATI   = 0x876A,
 }
 
-extern(System):
-
-typedef void function(GLenum, GLvoid*) pfglElementPointerATI;
-typedef void function(GLenum, GLsizei) pfglDrawElementArrayATI;
-typedef void function(GLenum, GLuint, GLuint, GLsizei) pfglDrawRangeElementArrayATI;
-
+extern(System) {
+alias void function(GLenum, GLvoid*) pfglElementPointerATI;
+alias void function(GLenum, GLsizei) pfglDrawElementArrayATI;
+alias void function(GLenum, GLuint, GLuint, GLsizei) pfglDrawRangeElementArrayATI;
+}
 pfglElementPointerATI           glElementPointerATI;
 pfglDrawElementArrayATI         glDrawElementArrayATI;
 pfglDrawRangeElementArrayATI    glDrawRangeElementArrayATI;
Index: DerelictGL/derelict/opengl/extension/ati/fragment_shader.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ati/fragment_shader.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ati/fragment_shader.d	(working copy)
@@ -210,23 +210,23 @@
     GL_BIAS_BIT_ATI                             = 0x00000008,
 }
 
-extern(System):
+extern(System) {
+alias GLuint function(GLuint)                   pfglGenFragmentShadersATI;
+alias void function(GLuint)                     pfglBindFragmentShaderATI;
+alias void function(GLuint)                     pfglDeleteFragmentShaderATI;
+alias void function()                           pfglBeginFragmentShaderATI;
+alias void function()                           pfglEndFragmentShaderATI;
+alias void function(GLuint, GLuint, GLenum)     pfglPassTexCoordATI;
+alias void function(GLuint, GLuint, GLenum)     pfglSampleMapATI;
+alias void function(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) pfglColorFragmentOp1ATI;
+alias void function(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) pfglColorFragmentOp2ATI;
+alias void function(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) pfglColorFragmentOp3ATI;
+alias void function(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) pfglAlphaFragmentOp1ATI;
+alias void function(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) pfglAlphaFragmentOp2ATI;
+alias void function(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) pfglAlphaFragmentOp3ATI;
+alias void function(GLuint, GLfloat *)          pfglSetFragmentShaderConstantATI;
+}
 
-typedef GLuint function(GLuint)                   pfglGenFragmentShadersATI;
-typedef void function(GLuint)                     pfglBindFragmentShaderATI;
-typedef void function(GLuint)                     pfglDeleteFragmentShaderATI;
-typedef void function()                           pfglBeginFragmentShaderATI;
-typedef void function()                           pfglEndFragmentShaderATI;
-typedef void function(GLuint, GLuint, GLenum)     pfglPassTexCoordATI;
-typedef void function(GLuint, GLuint, GLenum)     pfglSampleMapATI;
-typedef void function(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) pfglColorFragmentOp1ATI;
-typedef void function(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) pfglColorFragmentOp2ATI;
-typedef void function(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) pfglColorFragmentOp3ATI;
-typedef void function(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint) pfglAlphaFragmentOp1ATI;
-typedef void function(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) pfglAlphaFragmentOp2ATI;
-typedef void function(GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint) pfglAlphaFragmentOp3ATI;
-typedef void function(GLuint, GLfloat *)          pfglSetFragmentShaderConstantATI;
-
 pfglGenFragmentShadersATI           glGenFragmentShadersATI;
 pfglBindFragmentShaderATI           glBindFragmentShaderATI;
 pfglDeleteFragmentShaderATI         glDeleteFragmentShaderATI;
Index: DerelictGL/derelict/opengl/extension/ati/map_object_buffer.d
===================================================================
--- DerelictGL/derelict/opengl/extension/ati/map_object_buffer.d	(revision 318)
+++ DerelictGL/derelict/opengl/extension/ati/map_object_buffer.d	(working copy)
@@ -74,10 +74,9 @@
     }
 }
 
-extern(System):
-
-typedef GLvoid* function(GLuint) pfglMapObjectBufferATI;
-typedef void function(GLuint) pfglUnmapObjectBufferATI;
-
+extern(System) {
+alias GLvoid* function(GLuint) pfglMapObjectBufferATI;
+alias void function(GLuint) pfglUnmapObjectBufferATI;
+}
 pfglMapObjectBufferATI     glMapObjectBufferATI;
 pfglUnmapObjectBufferATI     glUnmapObjectBufferATI;
Index: DerelictGL/derelict/opengl/glx.d
===================================================================
--- DerelictGL/derelict/opengl/glx.d	(revision 318)
+++ DerelictGL/derelict/opengl/glx.d	(working copy)
@@ -40,31 +40,30 @@
     import derelict.util.loader;
 }
 
-extern (C):
 
-typedef int  Bool;
-typedef uint VisualID;
+alias int  Bool;
+alias uint VisualID;
 
 struct __GLXcontextRec {}
 struct __GLXFBConfigRec {}
 
-typedef uint GLXContentID;
-typedef uint GLXPixmap;
-typedef uint GLXDrawable;
-typedef uint GLXPbuffer;
-typedef uint GLXWindow;
-typedef uint GLXFBConfigID;
+alias uint GLXContentID;
+alias uint GLXPixmap;
+alias uint GLXDrawable;
+alias uint GLXPbuffer;
+alias uint GLXWindow;
+alias uint GLXFBConfigID;
 
-typedef __GLXcontextRec *GLXContext;      // __GLXcontextRec type is opaque
-typedef __GLXFBConfigRec *GLXFBConfig;    // __GLXFBConfigRec type is opaque
+alias __GLXcontextRec *GLXContext;      // __GLXcontextRec type is opaque
+alias __GLXFBConfigRec *GLXFBConfig;    // __GLXFBConfigRec type is opaque
 
-typedef byte*   XPointer;
+alias byte*   XPointer;
 
-typedef void    Display;
-typedef uint    XID;
-typedef XID     Pixmap;
-typedef XID     Font;
-typedef XID     Window;
+alias void    Display;
+alias uint    XID;
+alias XID     Pixmap;
+alias XID     Font;
+alias XID     Window;
 
 struct XExtData
 {
@@ -125,88 +124,89 @@
 
 // Function pointer variables
 
-typedef XVisualInfo*            function(Display*,int,int*)
+extern (C) {
+alias XVisualInfo*            function(Display*,int,int*)
                             pfglXChooseVisual;
-typedef void                    function(Display*,GLXContext,GLXContext,uint)
+alias void                    function(Display*,GLXContext,GLXContext,uint)
                             pfglXCopyContext;
-typedef GLXContext              function(Display*,XVisualInfo*,GLXContext,Bool)
+alias GLXContext              function(Display*,XVisualInfo*,GLXContext,Bool)
                             pfglXCreateContext;
-typedef GLXPixmap               function(Display*,XVisualInfo*,Pixmap)
+alias GLXPixmap               function(Display*,XVisualInfo*,Pixmap)
                             pfglXCreateGLXPixmap;
-typedef void                    function(Display*,GLXContext)
+alias void                    function(Display*,GLXContext)
                             pfglXDestroyContext;
-typedef void                    function(Display*,GLXPixmap)
+alias void                    function(Display*,GLXPixmap)
                             pfglXDestroyGLXPixmap;
-typedef int                     function(Display*,XVisualInfo*,int,int*)
+alias int                     function(Display*,XVisualInfo*,int,int*)
                             pfglXGetConfig;
-typedef GLXContext              function()
+alias GLXContext              function()
                             pfglXGetCurrentContext;
-typedef GLXDrawable             function()
+alias GLXDrawable             function()
                             pfglXGetCurrentDrawable;
-typedef Bool                    function(Display*,GLXContext)
+alias Bool                    function(Display*,GLXContext)
                             pfglXIsDirect;
-typedef Bool                    function(Display*,GLXDrawable,GLXContext)
+alias Bool                    function(Display*,GLXDrawable,GLXContext)
                             pfglXMakeCurrent;
-typedef Bool                    function(Display*,int*,int*)
+alias Bool                    function(Display*,int*,int*)
                             pfglXQueryExtension;
-typedef Bool                    function(Display*,int*,int*)
+alias Bool                    function(Display*,int*,int*)
                             pfglXQueryVersion;
-typedef void                    function(Display*,GLXDrawable)
+alias void                    function(Display*,GLXDrawable)
                             pfglXSwapBuffers;
-typedef void                    function(Font,int,int,int)
+alias void                    function(Font,int,int,int)
                             pfglXUseXFont;
-typedef void                    function()
+alias void                    function()
                             pfglXWaitGL;
-typedef void                    function()
+alias void                    function()
                             pfglXWaitX;
-typedef const char*             function(Display*,int)
+alias char*             function(Display*,int)
                             pfglXGetClientString;
-typedef const char*             function(Display*,int,int)
+alias char*             function(Display*,int,int)
                             pfglXQueryServerString;
-typedef const char*             function(Display*,int)
+alias char*             function(Display*,int)
                             pfglXQueryExtensionsString;
 
 /* GLX 1.3 */
 
-typedef GLXFBConfig*            function(Display*,int,int*)
+alias GLXFBConfig*            function(Display*,int,int*)
                             pfglXGetFBConfigs;
-typedef GLXFBConfig*            function(Display*,int,int*,int*)
+alias GLXFBConfig*            function(Display*,int,int*,int*)
                             pfglXChooseFBConfig;
-typedef int                     function(Display*,GLXFBConfig,int,int*)
+alias int                     function(Display*,GLXFBConfig,int,int*)
                             pfglXGetFBConfigAttrib;
-typedef XVisualInfo*            function(Display*,GLXFBConfig)
+alias XVisualInfo*            function(Display*,GLXFBConfig)
                             pfglXGetVisualFromFBConfig;
-typedef GLXWindow               function(Display*,GLXFBConfig,Window,int*)
+alias GLXWindow               function(Display*,GLXFBConfig,Window,int*)
                             pfglXCreateWindow;
-typedef void                    function(Display*,GLXWindow)
+alias void                    function(Display*,GLXWindow)
                             pfglXDestroyWindow;
-typedef GLXPixmap               function(Display*,GLXFBConfig,Pixmap,int*)
+alias GLXPixmap               function(Display*,GLXFBConfig,Pixmap,int*)
                             pfglXCreatePixmap;
-typedef void                    function(Display*,GLXPixmap)
+alias void                    function(Display*,GLXPixmap)
                             pfglXDestroyPixmap;
-typedef GLXPbuffer              function(Display*,GLXFBConfig,int*)
+alias GLXPbuffer              function(Display*,GLXFBConfig,int*)
                             pfglXCreatePbuffer;
-typedef void                    function(Display*,GLXPbuffer)
+alias void                    function(Display*,GLXPbuffer)
                             pfglXDestroyPbuffer;
-typedef void                    function(Display*,GLXDrawable,int,uint*)
+alias void                    function(Display*,GLXDrawable,int,uint*)
                             pfglXQueryDrawable;
-typedef GLXContext              function(Display*,GLXFBConfig,int,GLXContext,Bool)
+alias GLXContext              function(Display*,GLXFBConfig,int,GLXContext,Bool)
                             pfglXCreateNewContext;
-typedef Bool                    function(Display*,GLXDrawable,GLXDrawable,GLXContext)
+alias Bool                    function(Display*,GLXDrawable,GLXDrawable,GLXContext)
                             pfglXMakeContextCurrent;
-typedef GLXDrawable             function()
+alias GLXDrawable             function()
                             pfglXGetCurrentReadDrawable;
-typedef Display*                function()
+alias Display*                function()
                             pfglXGetCurrentDisplay;
-typedef int                     function(Display*,GLXContext,int,int*)
+alias int                     function(Display*,GLXContext,int,int*)
                             pfglXQueryContext;
-typedef void                    function(Display*,GLXDrawable,uint)
+alias void                    function(Display*,GLXDrawable,uint)
                             pfglXSelectEvent;
-typedef void                    function(Display*,GLXDrawable,uint*)
+alias void                    function(Display*,GLXDrawable,uint*)
                             pfglXGetSelectedEvent;
 
 /* GLX 1.4+ */
-typedef void*                   function(GLchar*)
+alias void*                   function(GLchar*)
                             pfglXGetProcAddress;
 
 /* GLX extensions -- legacy */
@@ -226,7 +226,6 @@
                             pfglXGetProcAddressARB;
 */
 
-/+
 
 // All extensions are disabled in the current version
 // until further testing is done and need is established.
@@ -253,8 +252,7 @@
 Bool                    function(Display*,GLXDrawable,int*)
                             glXDrawableAttribARB;
 
-+/
-
+}
 pfglXChooseVisual           glXChooseVisual;
 pfglXCopyContext            glXCopyContext;
 pfglXCreateContext          glXCreateContext;
